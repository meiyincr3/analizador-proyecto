Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LETRAS

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> bloques
Rule 2     sentencias -> operadorAritmetico
Rule 3     bloques -> bloque
Rule 4     bloques -> bloque bloques
Rule 5     bloque -> impresion
Rule 6     bloque -> asignacion
Rule 7     bloque -> funciones
Rule 8     bloque -> estructurasControl
Rule 9     bloque -> estructurasDeDatos
Rule 10    bloque -> comparaciones
Rule 11    bloque -> operaciones
Rule 12    bloque -> comentario
Rule 13    bloque -> longitud
Rule 14    bloque -> cerrar
Rule 15    impresion -> print
Rule 16    impresion -> echo
Rule 17    impresion -> input
Rule 18    comentario -> COMENTARIO
Rule 19    cerrar -> LLAVEDER
Rule 20    funciones -> funcion
Rule 21    funciones -> return
Rule 22    valores -> valor
Rule 23    valores -> valor COMA valores
Rule 24    NUMERO -> ENTERO
Rule 25    NUMERO -> RESTA ENTERO
Rule 26    NUMERO -> FLOTANTE
Rule 27    valor -> NUMERO
Rule 28    valor -> CADENA
Rule 29    valor -> BOOLEAN
Rule 30    valor -> IDENTIFICADOR
Rule 31    comparadorNum -> MAYORQUE
Rule 32    comparadorNum -> MAYORIGUALQUE
Rule 33    comparadorNum -> MENORQUE
Rule 34    comparadorNum -> MENORIGUALQUE
Rule 35    comparador -> IDENTICO
Rule 36    comparador -> NOIDENTICO
Rule 37    comparador -> IGUAL
Rule 38    variable -> NUMERO
Rule 39    variable -> IDENTIFICADOR
Rule 40    comparaciones -> comparacion
Rule 41    comparaciones -> comparacion operadores comparaciones
Rule 42    comparacion -> variable comparadorNum variable
Rule 43    comparacion -> valor comparador valor
Rule 44    incrementoDecremento -> INCREMENTO
Rule 45    incrementoDecremento -> DECREMENTO
Rule 46    incrementoDecremento -> SUMA ENTERO
Rule 47    incrementoDecremento -> RESTA ENTERO
Rule 48    operadores -> OPERADOR
Rule 49    operadores -> AND
Rule 50    operadores -> OR
Rule 51    longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA
Rule 52    operaciones -> operacion
Rule 53    operaciones -> operacion operadorAritmetico operaciones
Rule 54    operaciones -> IDENTIFICADOR ASIGNAR operaciones
Rule 55    operacion -> variable operadorAritmetico variable
Rule 56    operadorAritmetico -> SUMA
Rule 57    operadorAritmetico -> RESTA
Rule 58    operadorAritmetico -> MULT
Rule 59    operadorAritmetico -> DIVISION
Rule 60    operadorAritmetico -> DIVISIONENTERA
Rule 61    operadorAritmetico -> MODULO
Rule 62    operadorAritmetico -> POTENCIA
Rule 63    asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA
Rule 64    asignacion -> IDENTIFICADOR PUNTOCOMA
Rule 65    print -> PRINT PARENIZ valores PARENDER PUNTOCOMA
Rule 66    print -> PRINT valor PUNTOCOMA
Rule 67    print -> PRINT PARENIZ PARENDER PUNTOCOMA
Rule 68    input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA
Rule 69    echo -> ECHO valores PUNTOCOMA
Rule 70    funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ
Rule 71    parametro -> IDENTIFICADOR
Rule 72    parametro -> IDENTIFICADOR COMA parametro
Rule 73    funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
Rule 74    funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
Rule 75    return -> RETURN IDENTIFICADOR PUNTOCOMA
Rule 76    estructurasControl -> while
Rule 77    estructurasControl -> for
Rule 78    estructurasControl -> if
Rule 79    estructurasControl -> elseif
Rule 80    estructurasControl -> else
Rule 81    estructurasControl -> foreach
Rule 82    estructurasControl -> switch
Rule 83    while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ
Rule 84    for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ
Rule 85    foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ
Rule 86    switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER
Rule 87    casos -> caso
Rule 88    casos -> caso casos
Rule 89    caso -> CASE valor DOSPUNTOS echo BREAK PUNTOCOMA
Rule 90    if -> IF PARENIZ comparaciones PARENDER LLAVEIZ
Rule 91    if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
Rule 92    elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
Rule 93    elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
Rule 94    elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
Rule 95    elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
Rule 96    else -> LLAVEDER ELSE LLAVEIZ
Rule 97    else -> ELSE LLAVEIZ
Rule 98    estructurasDeDatos -> queue
Rule 99    estructurasDeDatos -> stack
Rule 100   estructurasDeDatos -> array
Rule 101   stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA
Rule 102   stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA
Rule 103   stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA
Rule 104   stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
Rule 105   stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
Rule 106   stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
Rule 107   stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
Rule 108   queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA
Rule 109   queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
Rule 110   queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA
Rule 111   queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA
Rule 112   queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
Rule 113   queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
Rule 114   queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
Rule 115   queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
Rule 116   array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA
Rule 117   array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA
Rule 118   array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA
Rule 119   array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA
Rule 120   array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA
Rule 121   array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA
Rule 122   operadorSemanticoAritmetico -> NUMERO operadorAritmetico NUMERO
Rule 123   incrementoDecrementoSemantico -> IDENTIFICADOR incrementoDecremento
Rule 124   incrementoDecrementoSemantico -> ENTERO incrementoDecremento
Rule 125   ifSemantico -> IF PARENIZ booleanosSemantico PARENDER LLAVEIZ
Rule 126   booleanosSemantico -> BOOLEAN
Rule 127   booleanosSemantico -> BOOLEAN operadores booleanosSemantico
Rule 128   push -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ IDENTIFICADOR PARENDER
Rule 129   pop -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ IDENTIFICADOR PARENDER
Rule 130   whileSemantico -> WHILE PARENIZ BOOLEAN PARENDER LLAVEIZ
Rule 131   comparacionSemantico -> NUMERO comparadorNum NUMERO
Rule 132   comparacionSemantico -> valor comparador valor

Terminals, with rules where they appear

AND                  : 49
ARRAY                : 116 117
ARRAY_PUSH           : 120
ARRAY_SHIFT          : 119
AS                   : 85
ASIGNAR              : 51 54 63 68 74 84 103 108 116 117 118 119 121
BOOLEAN              : 29 126 127 130
BREAK                : 89
CADENA               : 28
CASE                 : 89
COMA                 : 23 72 121
COMENTARIO           : 18
CORCHETEDER          : 118
CORCHETEIZ           : 118
COUNT                : 110
CURRENT              : 106 114
DECREMENTO           : 45
DEFAULT              : 86
DEQUEUE              : 111
DIVISION             : 59
DIVISIONENTERA       : 60
DOSPUNTOS            : 86 89
ECHO                 : 69
ELSE                 : 96 97
ELSEIF               : 92 93 94 95
ENQUEUE              : 109
ENTERO               : 24 25 46 47 84 84 124
FGETS                : 68
FLECHASIMPLE         : 101 102 104 105 106 107 109 110 111 112 113 114 115 128 129
FLOTANTE             : 26
FLUJOS               : 68
FOR                  : 84
FOREACH              : 85
FUNCTION             : 70
IDENTICO             : 35
IDENTIFICADOR        : 30 39 51 54 63 64 68 71 72 74 75 84 84 84 85 85 91 93 95 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 119 120 121 121 123 128 128 129 129
IF                   : 90 91 125
IGUAL                : 37
INCREMENTO           : 44
IN_ARRAY             : 121
LETRAS               : 
LLAVEDER             : 19 86 92 93 96
LLAVEIZ              : 70 83 84 85 86 90 91 92 93 94 95 96 97 125 130
MAYORIGUALQUE        : 32
MAYORQUE             : 31
MENORIGUALQUE        : 34
MENORQUE             : 33
MODULO               : 61
MULT                 : 58
NAMEFUNCTION         : 70 73 74
NEW                  : 103 108
NEXT                 : 104 112
NOIDENTICO           : 36
OPERADOR             : 48
OR                   : 50
PARENDER             : 51 65 67 68 70 73 74 83 84 85 86 90 91 92 93 94 95 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 119 120 121 125 128 129 130
PARENIZ              : 51 65 67 68 70 73 74 83 84 85 86 90 91 92 93 94 95 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 119 120 121 125 128 129 130
POP                  : 102 129
POTENCIA             : 62
PRINT                : 65 66 67
PUNTOCOMA            : 51 63 64 65 66 67 68 69 73 74 75 84 84 89 101 102 103 104 105 106 108 109 110 111 112 113 114 116 117 118 119 120 121
PUSH                 : 101 128
QUEUE                : 108
RESTA                : 25 47 57
RETURN               : 75
REWIND               : 105 113
STACK                : 103
STRLEN               : 51
SUMA                 : 46 56
SWITCH               : 86
VALID                : 107 115
WHILE                : 83 130
error                : 

Nonterminals, with rules where they appear

NUMERO               : 27 38 122 122 131 131
array                : 100
asignacion           : 6
bloque               : 3 4
bloques              : 1 4
booleanosSemantico   : 125 127
caso                 : 87 88
casos                : 86 88
cerrar               : 14
comentario           : 12
comparacion          : 40 41
comparacionSemantico : 
comparaciones        : 10 41 83 90 92 94
comparador           : 43 132
comparadorNum        : 42 84 131
echo                 : 16 86 89
else                 : 80
elseif               : 79
estructurasControl   : 8
estructurasDeDatos   : 9
for                  : 77
foreach              : 81
funcion              : 20
funciones            : 7
if                   : 78
ifSemantico          : 
impresion            : 5
incrementoDecremento : 84 123 124
incrementoDecrementoSemantico : 
input                : 17
longitud             : 13
operacion            : 52 53
operaciones          : 11 53 54
operadorAritmetico   : 2 53 55 122
operadorSemanticoAritmetico : 
operadores           : 41 127
parametro            : 70 72 73 74
pop                  : 
print                : 15
push                 : 
queue                : 98
return               : 21
sentencias           : 0
stack                : 99
switch               : 82
valor                : 22 23 43 43 51 63 66 86 89 101 109 121 132 132
valores              : 23 65 69 117 118
variable             : 42 42 55 55
while                : 76
whileSemantico       : 

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . bloques
    (2) sentencias -> . operadorAritmetico
    (3) bloques -> . bloque
    (4) bloques -> . bloque bloques
    (56) operadorAritmetico -> . SUMA
    (57) operadorAritmetico -> . RESTA
    (58) operadorAritmetico -> . MULT
    (59) operadorAritmetico -> . DIVISION
    (60) operadorAritmetico -> . DIVISIONENTERA
    (61) operadorAritmetico -> . MODULO
    (62) operadorAritmetico -> . POTENCIA
    (5) bloque -> . impresion
    (6) bloque -> . asignacion
    (7) bloque -> . funciones
    (8) bloque -> . estructurasControl
    (9) bloque -> . estructurasDeDatos
    (10) bloque -> . comparaciones
    (11) bloque -> . operaciones
    (12) bloque -> . comentario
    (13) bloque -> . longitud
    (14) bloque -> . cerrar
    (15) impresion -> . print
    (16) impresion -> . echo
    (17) impresion -> . input
    (63) asignacion -> . IDENTIFICADOR ASIGNAR valor PUNTOCOMA
    (64) asignacion -> . IDENTIFICADOR PUNTOCOMA
    (20) funciones -> . funcion
    (21) funciones -> . return
    (76) estructurasControl -> . while
    (77) estructurasControl -> . for
    (78) estructurasControl -> . if
    (79) estructurasControl -> . elseif
    (80) estructurasControl -> . else
    (81) estructurasControl -> . foreach
    (82) estructurasControl -> . switch
    (98) estructurasDeDatos -> . queue
    (99) estructurasDeDatos -> . stack
    (100) estructurasDeDatos -> . array
    (40) comparaciones -> . comparacion
    (41) comparaciones -> . comparacion operadores comparaciones
    (52) operaciones -> . operacion
    (53) operaciones -> . operacion operadorAritmetico operaciones
    (54) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (18) comentario -> . COMENTARIO
    (51) longitud -> . IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA
    (19) cerrar -> . LLAVEDER
    (65) print -> . PRINT PARENIZ valores PARENDER PUNTOCOMA
    (66) print -> . PRINT valor PUNTOCOMA
    (67) print -> . PRINT PARENIZ PARENDER PUNTOCOMA
    (69) echo -> . ECHO valores PUNTOCOMA
    (68) input -> . IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA
    (70) funcion -> . FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ
    (73) funcion -> . NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (74) funcion -> . IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (75) return -> . RETURN IDENTIFICADOR PUNTOCOMA
    (83) while -> . WHILE PARENIZ comparaciones PARENDER LLAVEIZ
    (84) for -> . FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ
    (90) if -> . IF PARENIZ comparaciones PARENDER LLAVEIZ
    (91) if -> . IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (92) elseif -> . LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (93) elseif -> . LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (94) elseif -> . ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (95) elseif -> . ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (96) else -> . LLAVEDER ELSE LLAVEIZ
    (97) else -> . ELSE LLAVEIZ
    (85) foreach -> . FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ
    (86) switch -> . SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER
    (108) queue -> . IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA
    (109) queue -> . IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
    (110) queue -> . IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA
    (111) queue -> . IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA
    (112) queue -> . IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (113) queue -> . IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (114) queue -> . IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (115) queue -> . IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
    (101) stack -> . IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA
    (102) stack -> . IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA
    (103) stack -> . IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA
    (104) stack -> . IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (105) stack -> . IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (106) stack -> . IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (107) stack -> . IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
    (116) array -> . IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA
    (117) array -> . IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA
    (118) array -> . IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA
    (119) array -> . IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA
    (120) array -> . ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA
    (121) array -> . IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA
    (42) comparacion -> . variable comparadorNum variable
    (43) comparacion -> . valor comparador valor
    (55) operacion -> . variable operadorAritmetico variable
    (38) variable -> . NUMERO
    (39) variable -> . IDENTIFICADOR
    (27) valor -> . NUMERO
    (28) valor -> . CADENA
    (29) valor -> . BOOLEAN
    (30) valor -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    SUMA            shift and go to state 5
    RESTA           shift and go to state 6
    MULT            shift and go to state 7
    DIVISION        shift and go to state 8
    DIVISIONENTERA  shift and go to state 9
    MODULO          shift and go to state 10
    POTENCIA        shift and go to state 11
    IDENTIFICADOR   shift and go to state 25
    COMENTARIO      shift and go to state 41
    LLAVEDER        shift and go to state 42
    PRINT           shift and go to state 43
    ECHO            shift and go to state 44
    FUNCTION        shift and go to state 45
    NAMEFUNCTION    shift and go to state 46
    RETURN          shift and go to state 47
    WHILE           shift and go to state 48
    FOR             shift and go to state 49
    IF              shift and go to state 51
    ELSEIF          shift and go to state 52
    ELSE            shift and go to state 53
    FOREACH         shift and go to state 54
    SWITCH          shift and go to state 55
    ARRAY_PUSH      shift and go to state 56
    CADENA          shift and go to state 59
    BOOLEAN         shift and go to state 60
    ENTERO          shift and go to state 50
    FLOTANTE        shift and go to state 61

    sentencias                     shift and go to state 1
    bloques                        shift and go to state 2
    operadorAritmetico             shift and go to state 3
    bloque                         shift and go to state 4
    impresion                      shift and go to state 12
    asignacion                     shift and go to state 13
    funciones                      shift and go to state 14
    estructurasControl             shift and go to state 15
    estructurasDeDatos             shift and go to state 16
    comparaciones                  shift and go to state 17
    operaciones                    shift and go to state 18
    comentario                     shift and go to state 19
    longitud                       shift and go to state 20
    cerrar                         shift and go to state 21
    print                          shift and go to state 22
    echo                           shift and go to state 23
    input                          shift and go to state 24
    valor                          shift and go to state 26
    funcion                        shift and go to state 27
    return                         shift and go to state 28
    while                          shift and go to state 29
    for                            shift and go to state 30
    if                             shift and go to state 31
    elseif                         shift and go to state 32
    else                           shift and go to state 33
    foreach                        shift and go to state 34
    switch                         shift and go to state 35
    queue                          shift and go to state 36
    stack                          shift and go to state 37
    array                          shift and go to state 38
    comparacion                    shift and go to state 39
    operacion                      shift and go to state 40
    variable                       shift and go to state 57
    NUMERO                         shift and go to state 58

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> bloques .

    $end            reduce using rule 1 (sentencias -> bloques .)


state 3

    (2) sentencias -> operadorAritmetico .

    $end            reduce using rule 2 (sentencias -> operadorAritmetico .)


state 4

    (3) bloques -> bloque .
    (4) bloques -> bloque . bloques
    (3) bloques -> . bloque
    (4) bloques -> . bloque bloques
    (5) bloque -> . impresion
    (6) bloque -> . asignacion
    (7) bloque -> . funciones
    (8) bloque -> . estructurasControl
    (9) bloque -> . estructurasDeDatos
    (10) bloque -> . comparaciones
    (11) bloque -> . operaciones
    (12) bloque -> . comentario
    (13) bloque -> . longitud
    (14) bloque -> . cerrar
    (15) impresion -> . print
    (16) impresion -> . echo
    (17) impresion -> . input
    (63) asignacion -> . IDENTIFICADOR ASIGNAR valor PUNTOCOMA
    (64) asignacion -> . IDENTIFICADOR PUNTOCOMA
    (20) funciones -> . funcion
    (21) funciones -> . return
    (76) estructurasControl -> . while
    (77) estructurasControl -> . for
    (78) estructurasControl -> . if
    (79) estructurasControl -> . elseif
    (80) estructurasControl -> . else
    (81) estructurasControl -> . foreach
    (82) estructurasControl -> . switch
    (98) estructurasDeDatos -> . queue
    (99) estructurasDeDatos -> . stack
    (100) estructurasDeDatos -> . array
    (40) comparaciones -> . comparacion
    (41) comparaciones -> . comparacion operadores comparaciones
    (52) operaciones -> . operacion
    (53) operaciones -> . operacion operadorAritmetico operaciones
    (54) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (18) comentario -> . COMENTARIO
    (51) longitud -> . IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA
    (19) cerrar -> . LLAVEDER
    (65) print -> . PRINT PARENIZ valores PARENDER PUNTOCOMA
    (66) print -> . PRINT valor PUNTOCOMA
    (67) print -> . PRINT PARENIZ PARENDER PUNTOCOMA
    (69) echo -> . ECHO valores PUNTOCOMA
    (68) input -> . IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA
    (70) funcion -> . FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ
    (73) funcion -> . NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (74) funcion -> . IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (75) return -> . RETURN IDENTIFICADOR PUNTOCOMA
    (83) while -> . WHILE PARENIZ comparaciones PARENDER LLAVEIZ
    (84) for -> . FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ
    (90) if -> . IF PARENIZ comparaciones PARENDER LLAVEIZ
    (91) if -> . IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (92) elseif -> . LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (93) elseif -> . LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (94) elseif -> . ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (95) elseif -> . ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (96) else -> . LLAVEDER ELSE LLAVEIZ
    (97) else -> . ELSE LLAVEIZ
    (85) foreach -> . FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ
    (86) switch -> . SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER
    (108) queue -> . IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA
    (109) queue -> . IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
    (110) queue -> . IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA
    (111) queue -> . IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA
    (112) queue -> . IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (113) queue -> . IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (114) queue -> . IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (115) queue -> . IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
    (101) stack -> . IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA
    (102) stack -> . IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA
    (103) stack -> . IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA
    (104) stack -> . IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (105) stack -> . IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (106) stack -> . IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (107) stack -> . IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
    (116) array -> . IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA
    (117) array -> . IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA
    (118) array -> . IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA
    (119) array -> . IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA
    (120) array -> . ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA
    (121) array -> . IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA
    (42) comparacion -> . variable comparadorNum variable
    (43) comparacion -> . valor comparador valor
    (55) operacion -> . variable operadorAritmetico variable
    (38) variable -> . NUMERO
    (39) variable -> . IDENTIFICADOR
    (27) valor -> . NUMERO
    (28) valor -> . CADENA
    (29) valor -> . BOOLEAN
    (30) valor -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    $end            reduce using rule 3 (bloques -> bloque .)
    IDENTIFICADOR   shift and go to state 25
    COMENTARIO      shift and go to state 41
    LLAVEDER        shift and go to state 42
    PRINT           shift and go to state 43
    ECHO            shift and go to state 44
    FUNCTION        shift and go to state 45
    NAMEFUNCTION    shift and go to state 46
    RETURN          shift and go to state 47
    WHILE           shift and go to state 48
    FOR             shift and go to state 49
    IF              shift and go to state 51
    ELSEIF          shift and go to state 52
    ELSE            shift and go to state 53
    FOREACH         shift and go to state 54
    SWITCH          shift and go to state 55
    ARRAY_PUSH      shift and go to state 56
    CADENA          shift and go to state 59
    BOOLEAN         shift and go to state 60
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    bloque                         shift and go to state 4
    bloques                        shift and go to state 62
    impresion                      shift and go to state 12
    asignacion                     shift and go to state 13
    funciones                      shift and go to state 14
    estructurasControl             shift and go to state 15
    estructurasDeDatos             shift and go to state 16
    comparaciones                  shift and go to state 17
    operaciones                    shift and go to state 18
    comentario                     shift and go to state 19
    longitud                       shift and go to state 20
    cerrar                         shift and go to state 21
    print                          shift and go to state 22
    echo                           shift and go to state 23
    input                          shift and go to state 24
    valor                          shift and go to state 26
    funcion                        shift and go to state 27
    return                         shift and go to state 28
    while                          shift and go to state 29
    for                            shift and go to state 30
    if                             shift and go to state 31
    elseif                         shift and go to state 32
    else                           shift and go to state 33
    foreach                        shift and go to state 34
    switch                         shift and go to state 35
    queue                          shift and go to state 36
    stack                          shift and go to state 37
    array                          shift and go to state 38
    comparacion                    shift and go to state 39
    operacion                      shift and go to state 40
    variable                       shift and go to state 57
    NUMERO                         shift and go to state 58

state 5

    (56) operadorAritmetico -> SUMA .

    $end            reduce using rule 56 (operadorAritmetico -> SUMA .)
    IDENTIFICADOR   reduce using rule 56 (operadorAritmetico -> SUMA .)
    ENTERO          reduce using rule 56 (operadorAritmetico -> SUMA .)
    RESTA           reduce using rule 56 (operadorAritmetico -> SUMA .)
    FLOTANTE        reduce using rule 56 (operadorAritmetico -> SUMA .)


state 6

    (57) operadorAritmetico -> RESTA .
    (25) NUMERO -> RESTA . ENTERO

    $end            reduce using rule 57 (operadorAritmetico -> RESTA .)
    ENTERO          shift and go to state 64


state 7

    (58) operadorAritmetico -> MULT .

    $end            reduce using rule 58 (operadorAritmetico -> MULT .)
    IDENTIFICADOR   reduce using rule 58 (operadorAritmetico -> MULT .)
    ENTERO          reduce using rule 58 (operadorAritmetico -> MULT .)
    RESTA           reduce using rule 58 (operadorAritmetico -> MULT .)
    FLOTANTE        reduce using rule 58 (operadorAritmetico -> MULT .)


state 8

    (59) operadorAritmetico -> DIVISION .

    $end            reduce using rule 59 (operadorAritmetico -> DIVISION .)
    IDENTIFICADOR   reduce using rule 59 (operadorAritmetico -> DIVISION .)
    ENTERO          reduce using rule 59 (operadorAritmetico -> DIVISION .)
    RESTA           reduce using rule 59 (operadorAritmetico -> DIVISION .)
    FLOTANTE        reduce using rule 59 (operadorAritmetico -> DIVISION .)


state 9

    (60) operadorAritmetico -> DIVISIONENTERA .

    $end            reduce using rule 60 (operadorAritmetico -> DIVISIONENTERA .)
    IDENTIFICADOR   reduce using rule 60 (operadorAritmetico -> DIVISIONENTERA .)
    ENTERO          reduce using rule 60 (operadorAritmetico -> DIVISIONENTERA .)
    RESTA           reduce using rule 60 (operadorAritmetico -> DIVISIONENTERA .)
    FLOTANTE        reduce using rule 60 (operadorAritmetico -> DIVISIONENTERA .)


state 10

    (61) operadorAritmetico -> MODULO .

    $end            reduce using rule 61 (operadorAritmetico -> MODULO .)
    IDENTIFICADOR   reduce using rule 61 (operadorAritmetico -> MODULO .)
    ENTERO          reduce using rule 61 (operadorAritmetico -> MODULO .)
    RESTA           reduce using rule 61 (operadorAritmetico -> MODULO .)
    FLOTANTE        reduce using rule 61 (operadorAritmetico -> MODULO .)


state 11

    (62) operadorAritmetico -> POTENCIA .

    $end            reduce using rule 62 (operadorAritmetico -> POTENCIA .)
    IDENTIFICADOR   reduce using rule 62 (operadorAritmetico -> POTENCIA .)
    ENTERO          reduce using rule 62 (operadorAritmetico -> POTENCIA .)
    RESTA           reduce using rule 62 (operadorAritmetico -> POTENCIA .)
    FLOTANTE        reduce using rule 62 (operadorAritmetico -> POTENCIA .)


state 12

    (5) bloque -> impresion .

    IDENTIFICADOR   reduce using rule 5 (bloque -> impresion .)
    COMENTARIO      reduce using rule 5 (bloque -> impresion .)
    LLAVEDER        reduce using rule 5 (bloque -> impresion .)
    PRINT           reduce using rule 5 (bloque -> impresion .)
    ECHO            reduce using rule 5 (bloque -> impresion .)
    FUNCTION        reduce using rule 5 (bloque -> impresion .)
    NAMEFUNCTION    reduce using rule 5 (bloque -> impresion .)
    RETURN          reduce using rule 5 (bloque -> impresion .)
    WHILE           reduce using rule 5 (bloque -> impresion .)
    FOR             reduce using rule 5 (bloque -> impresion .)
    IF              reduce using rule 5 (bloque -> impresion .)
    ELSEIF          reduce using rule 5 (bloque -> impresion .)
    ELSE            reduce using rule 5 (bloque -> impresion .)
    FOREACH         reduce using rule 5 (bloque -> impresion .)
    SWITCH          reduce using rule 5 (bloque -> impresion .)
    ARRAY_PUSH      reduce using rule 5 (bloque -> impresion .)
    CADENA          reduce using rule 5 (bloque -> impresion .)
    BOOLEAN         reduce using rule 5 (bloque -> impresion .)
    ENTERO          reduce using rule 5 (bloque -> impresion .)
    RESTA           reduce using rule 5 (bloque -> impresion .)
    FLOTANTE        reduce using rule 5 (bloque -> impresion .)
    $end            reduce using rule 5 (bloque -> impresion .)


state 13

    (6) bloque -> asignacion .

    IDENTIFICADOR   reduce using rule 6 (bloque -> asignacion .)
    COMENTARIO      reduce using rule 6 (bloque -> asignacion .)
    LLAVEDER        reduce using rule 6 (bloque -> asignacion .)
    PRINT           reduce using rule 6 (bloque -> asignacion .)
    ECHO            reduce using rule 6 (bloque -> asignacion .)
    FUNCTION        reduce using rule 6 (bloque -> asignacion .)
    NAMEFUNCTION    reduce using rule 6 (bloque -> asignacion .)
    RETURN          reduce using rule 6 (bloque -> asignacion .)
    WHILE           reduce using rule 6 (bloque -> asignacion .)
    FOR             reduce using rule 6 (bloque -> asignacion .)
    IF              reduce using rule 6 (bloque -> asignacion .)
    ELSEIF          reduce using rule 6 (bloque -> asignacion .)
    ELSE            reduce using rule 6 (bloque -> asignacion .)
    FOREACH         reduce using rule 6 (bloque -> asignacion .)
    SWITCH          reduce using rule 6 (bloque -> asignacion .)
    ARRAY_PUSH      reduce using rule 6 (bloque -> asignacion .)
    CADENA          reduce using rule 6 (bloque -> asignacion .)
    BOOLEAN         reduce using rule 6 (bloque -> asignacion .)
    ENTERO          reduce using rule 6 (bloque -> asignacion .)
    RESTA           reduce using rule 6 (bloque -> asignacion .)
    FLOTANTE        reduce using rule 6 (bloque -> asignacion .)
    $end            reduce using rule 6 (bloque -> asignacion .)


state 14

    (7) bloque -> funciones .

    IDENTIFICADOR   reduce using rule 7 (bloque -> funciones .)
    COMENTARIO      reduce using rule 7 (bloque -> funciones .)
    LLAVEDER        reduce using rule 7 (bloque -> funciones .)
    PRINT           reduce using rule 7 (bloque -> funciones .)
    ECHO            reduce using rule 7 (bloque -> funciones .)
    FUNCTION        reduce using rule 7 (bloque -> funciones .)
    NAMEFUNCTION    reduce using rule 7 (bloque -> funciones .)
    RETURN          reduce using rule 7 (bloque -> funciones .)
    WHILE           reduce using rule 7 (bloque -> funciones .)
    FOR             reduce using rule 7 (bloque -> funciones .)
    IF              reduce using rule 7 (bloque -> funciones .)
    ELSEIF          reduce using rule 7 (bloque -> funciones .)
    ELSE            reduce using rule 7 (bloque -> funciones .)
    FOREACH         reduce using rule 7 (bloque -> funciones .)
    SWITCH          reduce using rule 7 (bloque -> funciones .)
    ARRAY_PUSH      reduce using rule 7 (bloque -> funciones .)
    CADENA          reduce using rule 7 (bloque -> funciones .)
    BOOLEAN         reduce using rule 7 (bloque -> funciones .)
    ENTERO          reduce using rule 7 (bloque -> funciones .)
    RESTA           reduce using rule 7 (bloque -> funciones .)
    FLOTANTE        reduce using rule 7 (bloque -> funciones .)
    $end            reduce using rule 7 (bloque -> funciones .)


state 15

    (8) bloque -> estructurasControl .

    IDENTIFICADOR   reduce using rule 8 (bloque -> estructurasControl .)
    COMENTARIO      reduce using rule 8 (bloque -> estructurasControl .)
    LLAVEDER        reduce using rule 8 (bloque -> estructurasControl .)
    PRINT           reduce using rule 8 (bloque -> estructurasControl .)
    ECHO            reduce using rule 8 (bloque -> estructurasControl .)
    FUNCTION        reduce using rule 8 (bloque -> estructurasControl .)
    NAMEFUNCTION    reduce using rule 8 (bloque -> estructurasControl .)
    RETURN          reduce using rule 8 (bloque -> estructurasControl .)
    WHILE           reduce using rule 8 (bloque -> estructurasControl .)
    FOR             reduce using rule 8 (bloque -> estructurasControl .)
    IF              reduce using rule 8 (bloque -> estructurasControl .)
    ELSEIF          reduce using rule 8 (bloque -> estructurasControl .)
    ELSE            reduce using rule 8 (bloque -> estructurasControl .)
    FOREACH         reduce using rule 8 (bloque -> estructurasControl .)
    SWITCH          reduce using rule 8 (bloque -> estructurasControl .)
    ARRAY_PUSH      reduce using rule 8 (bloque -> estructurasControl .)
    CADENA          reduce using rule 8 (bloque -> estructurasControl .)
    BOOLEAN         reduce using rule 8 (bloque -> estructurasControl .)
    ENTERO          reduce using rule 8 (bloque -> estructurasControl .)
    RESTA           reduce using rule 8 (bloque -> estructurasControl .)
    FLOTANTE        reduce using rule 8 (bloque -> estructurasControl .)
    $end            reduce using rule 8 (bloque -> estructurasControl .)


state 16

    (9) bloque -> estructurasDeDatos .

    IDENTIFICADOR   reduce using rule 9 (bloque -> estructurasDeDatos .)
    COMENTARIO      reduce using rule 9 (bloque -> estructurasDeDatos .)
    LLAVEDER        reduce using rule 9 (bloque -> estructurasDeDatos .)
    PRINT           reduce using rule 9 (bloque -> estructurasDeDatos .)
    ECHO            reduce using rule 9 (bloque -> estructurasDeDatos .)
    FUNCTION        reduce using rule 9 (bloque -> estructurasDeDatos .)
    NAMEFUNCTION    reduce using rule 9 (bloque -> estructurasDeDatos .)
    RETURN          reduce using rule 9 (bloque -> estructurasDeDatos .)
    WHILE           reduce using rule 9 (bloque -> estructurasDeDatos .)
    FOR             reduce using rule 9 (bloque -> estructurasDeDatos .)
    IF              reduce using rule 9 (bloque -> estructurasDeDatos .)
    ELSEIF          reduce using rule 9 (bloque -> estructurasDeDatos .)
    ELSE            reduce using rule 9 (bloque -> estructurasDeDatos .)
    FOREACH         reduce using rule 9 (bloque -> estructurasDeDatos .)
    SWITCH          reduce using rule 9 (bloque -> estructurasDeDatos .)
    ARRAY_PUSH      reduce using rule 9 (bloque -> estructurasDeDatos .)
    CADENA          reduce using rule 9 (bloque -> estructurasDeDatos .)
    BOOLEAN         reduce using rule 9 (bloque -> estructurasDeDatos .)
    ENTERO          reduce using rule 9 (bloque -> estructurasDeDatos .)
    RESTA           reduce using rule 9 (bloque -> estructurasDeDatos .)
    FLOTANTE        reduce using rule 9 (bloque -> estructurasDeDatos .)
    $end            reduce using rule 9 (bloque -> estructurasDeDatos .)


state 17

    (10) bloque -> comparaciones .

    IDENTIFICADOR   reduce using rule 10 (bloque -> comparaciones .)
    COMENTARIO      reduce using rule 10 (bloque -> comparaciones .)
    LLAVEDER        reduce using rule 10 (bloque -> comparaciones .)
    PRINT           reduce using rule 10 (bloque -> comparaciones .)
    ECHO            reduce using rule 10 (bloque -> comparaciones .)
    FUNCTION        reduce using rule 10 (bloque -> comparaciones .)
    NAMEFUNCTION    reduce using rule 10 (bloque -> comparaciones .)
    RETURN          reduce using rule 10 (bloque -> comparaciones .)
    WHILE           reduce using rule 10 (bloque -> comparaciones .)
    FOR             reduce using rule 10 (bloque -> comparaciones .)
    IF              reduce using rule 10 (bloque -> comparaciones .)
    ELSEIF          reduce using rule 10 (bloque -> comparaciones .)
    ELSE            reduce using rule 10 (bloque -> comparaciones .)
    FOREACH         reduce using rule 10 (bloque -> comparaciones .)
    SWITCH          reduce using rule 10 (bloque -> comparaciones .)
    ARRAY_PUSH      reduce using rule 10 (bloque -> comparaciones .)
    CADENA          reduce using rule 10 (bloque -> comparaciones .)
    BOOLEAN         reduce using rule 10 (bloque -> comparaciones .)
    ENTERO          reduce using rule 10 (bloque -> comparaciones .)
    RESTA           reduce using rule 10 (bloque -> comparaciones .)
    FLOTANTE        reduce using rule 10 (bloque -> comparaciones .)
    $end            reduce using rule 10 (bloque -> comparaciones .)


state 18

    (11) bloque -> operaciones .

    IDENTIFICADOR   reduce using rule 11 (bloque -> operaciones .)
    COMENTARIO      reduce using rule 11 (bloque -> operaciones .)
    LLAVEDER        reduce using rule 11 (bloque -> operaciones .)
    PRINT           reduce using rule 11 (bloque -> operaciones .)
    ECHO            reduce using rule 11 (bloque -> operaciones .)
    FUNCTION        reduce using rule 11 (bloque -> operaciones .)
    NAMEFUNCTION    reduce using rule 11 (bloque -> operaciones .)
    RETURN          reduce using rule 11 (bloque -> operaciones .)
    WHILE           reduce using rule 11 (bloque -> operaciones .)
    FOR             reduce using rule 11 (bloque -> operaciones .)
    IF              reduce using rule 11 (bloque -> operaciones .)
    ELSEIF          reduce using rule 11 (bloque -> operaciones .)
    ELSE            reduce using rule 11 (bloque -> operaciones .)
    FOREACH         reduce using rule 11 (bloque -> operaciones .)
    SWITCH          reduce using rule 11 (bloque -> operaciones .)
    ARRAY_PUSH      reduce using rule 11 (bloque -> operaciones .)
    CADENA          reduce using rule 11 (bloque -> operaciones .)
    BOOLEAN         reduce using rule 11 (bloque -> operaciones .)
    ENTERO          reduce using rule 11 (bloque -> operaciones .)
    RESTA           reduce using rule 11 (bloque -> operaciones .)
    FLOTANTE        reduce using rule 11 (bloque -> operaciones .)
    $end            reduce using rule 11 (bloque -> operaciones .)


state 19

    (12) bloque -> comentario .

    IDENTIFICADOR   reduce using rule 12 (bloque -> comentario .)
    COMENTARIO      reduce using rule 12 (bloque -> comentario .)
    LLAVEDER        reduce using rule 12 (bloque -> comentario .)
    PRINT           reduce using rule 12 (bloque -> comentario .)
    ECHO            reduce using rule 12 (bloque -> comentario .)
    FUNCTION        reduce using rule 12 (bloque -> comentario .)
    NAMEFUNCTION    reduce using rule 12 (bloque -> comentario .)
    RETURN          reduce using rule 12 (bloque -> comentario .)
    WHILE           reduce using rule 12 (bloque -> comentario .)
    FOR             reduce using rule 12 (bloque -> comentario .)
    IF              reduce using rule 12 (bloque -> comentario .)
    ELSEIF          reduce using rule 12 (bloque -> comentario .)
    ELSE            reduce using rule 12 (bloque -> comentario .)
    FOREACH         reduce using rule 12 (bloque -> comentario .)
    SWITCH          reduce using rule 12 (bloque -> comentario .)
    ARRAY_PUSH      reduce using rule 12 (bloque -> comentario .)
    CADENA          reduce using rule 12 (bloque -> comentario .)
    BOOLEAN         reduce using rule 12 (bloque -> comentario .)
    ENTERO          reduce using rule 12 (bloque -> comentario .)
    RESTA           reduce using rule 12 (bloque -> comentario .)
    FLOTANTE        reduce using rule 12 (bloque -> comentario .)
    $end            reduce using rule 12 (bloque -> comentario .)


state 20

    (13) bloque -> longitud .

    IDENTIFICADOR   reduce using rule 13 (bloque -> longitud .)
    COMENTARIO      reduce using rule 13 (bloque -> longitud .)
    LLAVEDER        reduce using rule 13 (bloque -> longitud .)
    PRINT           reduce using rule 13 (bloque -> longitud .)
    ECHO            reduce using rule 13 (bloque -> longitud .)
    FUNCTION        reduce using rule 13 (bloque -> longitud .)
    NAMEFUNCTION    reduce using rule 13 (bloque -> longitud .)
    RETURN          reduce using rule 13 (bloque -> longitud .)
    WHILE           reduce using rule 13 (bloque -> longitud .)
    FOR             reduce using rule 13 (bloque -> longitud .)
    IF              reduce using rule 13 (bloque -> longitud .)
    ELSEIF          reduce using rule 13 (bloque -> longitud .)
    ELSE            reduce using rule 13 (bloque -> longitud .)
    FOREACH         reduce using rule 13 (bloque -> longitud .)
    SWITCH          reduce using rule 13 (bloque -> longitud .)
    ARRAY_PUSH      reduce using rule 13 (bloque -> longitud .)
    CADENA          reduce using rule 13 (bloque -> longitud .)
    BOOLEAN         reduce using rule 13 (bloque -> longitud .)
    ENTERO          reduce using rule 13 (bloque -> longitud .)
    RESTA           reduce using rule 13 (bloque -> longitud .)
    FLOTANTE        reduce using rule 13 (bloque -> longitud .)
    $end            reduce using rule 13 (bloque -> longitud .)


state 21

    (14) bloque -> cerrar .

    IDENTIFICADOR   reduce using rule 14 (bloque -> cerrar .)
    COMENTARIO      reduce using rule 14 (bloque -> cerrar .)
    LLAVEDER        reduce using rule 14 (bloque -> cerrar .)
    PRINT           reduce using rule 14 (bloque -> cerrar .)
    ECHO            reduce using rule 14 (bloque -> cerrar .)
    FUNCTION        reduce using rule 14 (bloque -> cerrar .)
    NAMEFUNCTION    reduce using rule 14 (bloque -> cerrar .)
    RETURN          reduce using rule 14 (bloque -> cerrar .)
    WHILE           reduce using rule 14 (bloque -> cerrar .)
    FOR             reduce using rule 14 (bloque -> cerrar .)
    IF              reduce using rule 14 (bloque -> cerrar .)
    ELSEIF          reduce using rule 14 (bloque -> cerrar .)
    ELSE            reduce using rule 14 (bloque -> cerrar .)
    FOREACH         reduce using rule 14 (bloque -> cerrar .)
    SWITCH          reduce using rule 14 (bloque -> cerrar .)
    ARRAY_PUSH      reduce using rule 14 (bloque -> cerrar .)
    CADENA          reduce using rule 14 (bloque -> cerrar .)
    BOOLEAN         reduce using rule 14 (bloque -> cerrar .)
    ENTERO          reduce using rule 14 (bloque -> cerrar .)
    RESTA           reduce using rule 14 (bloque -> cerrar .)
    FLOTANTE        reduce using rule 14 (bloque -> cerrar .)
    $end            reduce using rule 14 (bloque -> cerrar .)


state 22

    (15) impresion -> print .

    IDENTIFICADOR   reduce using rule 15 (impresion -> print .)
    COMENTARIO      reduce using rule 15 (impresion -> print .)
    LLAVEDER        reduce using rule 15 (impresion -> print .)
    PRINT           reduce using rule 15 (impresion -> print .)
    ECHO            reduce using rule 15 (impresion -> print .)
    FUNCTION        reduce using rule 15 (impresion -> print .)
    NAMEFUNCTION    reduce using rule 15 (impresion -> print .)
    RETURN          reduce using rule 15 (impresion -> print .)
    WHILE           reduce using rule 15 (impresion -> print .)
    FOR             reduce using rule 15 (impresion -> print .)
    IF              reduce using rule 15 (impresion -> print .)
    ELSEIF          reduce using rule 15 (impresion -> print .)
    ELSE            reduce using rule 15 (impresion -> print .)
    FOREACH         reduce using rule 15 (impresion -> print .)
    SWITCH          reduce using rule 15 (impresion -> print .)
    ARRAY_PUSH      reduce using rule 15 (impresion -> print .)
    CADENA          reduce using rule 15 (impresion -> print .)
    BOOLEAN         reduce using rule 15 (impresion -> print .)
    ENTERO          reduce using rule 15 (impresion -> print .)
    RESTA           reduce using rule 15 (impresion -> print .)
    FLOTANTE        reduce using rule 15 (impresion -> print .)
    $end            reduce using rule 15 (impresion -> print .)


state 23

    (16) impresion -> echo .

    IDENTIFICADOR   reduce using rule 16 (impresion -> echo .)
    COMENTARIO      reduce using rule 16 (impresion -> echo .)
    LLAVEDER        reduce using rule 16 (impresion -> echo .)
    PRINT           reduce using rule 16 (impresion -> echo .)
    ECHO            reduce using rule 16 (impresion -> echo .)
    FUNCTION        reduce using rule 16 (impresion -> echo .)
    NAMEFUNCTION    reduce using rule 16 (impresion -> echo .)
    RETURN          reduce using rule 16 (impresion -> echo .)
    WHILE           reduce using rule 16 (impresion -> echo .)
    FOR             reduce using rule 16 (impresion -> echo .)
    IF              reduce using rule 16 (impresion -> echo .)
    ELSEIF          reduce using rule 16 (impresion -> echo .)
    ELSE            reduce using rule 16 (impresion -> echo .)
    FOREACH         reduce using rule 16 (impresion -> echo .)
    SWITCH          reduce using rule 16 (impresion -> echo .)
    ARRAY_PUSH      reduce using rule 16 (impresion -> echo .)
    CADENA          reduce using rule 16 (impresion -> echo .)
    BOOLEAN         reduce using rule 16 (impresion -> echo .)
    ENTERO          reduce using rule 16 (impresion -> echo .)
    RESTA           reduce using rule 16 (impresion -> echo .)
    FLOTANTE        reduce using rule 16 (impresion -> echo .)
    $end            reduce using rule 16 (impresion -> echo .)


state 24

    (17) impresion -> input .

    IDENTIFICADOR   reduce using rule 17 (impresion -> input .)
    COMENTARIO      reduce using rule 17 (impresion -> input .)
    LLAVEDER        reduce using rule 17 (impresion -> input .)
    PRINT           reduce using rule 17 (impresion -> input .)
    ECHO            reduce using rule 17 (impresion -> input .)
    FUNCTION        reduce using rule 17 (impresion -> input .)
    NAMEFUNCTION    reduce using rule 17 (impresion -> input .)
    RETURN          reduce using rule 17 (impresion -> input .)
    WHILE           reduce using rule 17 (impresion -> input .)
    FOR             reduce using rule 17 (impresion -> input .)
    IF              reduce using rule 17 (impresion -> input .)
    ELSEIF          reduce using rule 17 (impresion -> input .)
    ELSE            reduce using rule 17 (impresion -> input .)
    FOREACH         reduce using rule 17 (impresion -> input .)
    SWITCH          reduce using rule 17 (impresion -> input .)
    ARRAY_PUSH      reduce using rule 17 (impresion -> input .)
    CADENA          reduce using rule 17 (impresion -> input .)
    BOOLEAN         reduce using rule 17 (impresion -> input .)
    ENTERO          reduce using rule 17 (impresion -> input .)
    RESTA           reduce using rule 17 (impresion -> input .)
    FLOTANTE        reduce using rule 17 (impresion -> input .)
    $end            reduce using rule 17 (impresion -> input .)


state 25

    (63) asignacion -> IDENTIFICADOR . ASIGNAR valor PUNTOCOMA
    (64) asignacion -> IDENTIFICADOR . PUNTOCOMA
    (54) operaciones -> IDENTIFICADOR . ASIGNAR operaciones
    (51) longitud -> IDENTIFICADOR . ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA
    (68) input -> IDENTIFICADOR . ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA
    (74) funcion -> IDENTIFICADOR . ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (108) queue -> IDENTIFICADOR . ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA
    (109) queue -> IDENTIFICADOR . FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
    (110) queue -> IDENTIFICADOR . FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA
    (111) queue -> IDENTIFICADOR . FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA
    (112) queue -> IDENTIFICADOR . FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (113) queue -> IDENTIFICADOR . FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (114) queue -> IDENTIFICADOR . FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (115) queue -> IDENTIFICADOR . FLECHASIMPLE VALID PARENIZ PARENDER
    (101) stack -> IDENTIFICADOR . FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA
    (102) stack -> IDENTIFICADOR . FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA
    (103) stack -> IDENTIFICADOR . ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA
    (104) stack -> IDENTIFICADOR . FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (105) stack -> IDENTIFICADOR . FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (106) stack -> IDENTIFICADOR . FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (107) stack -> IDENTIFICADOR . FLECHASIMPLE VALID PARENIZ PARENDER
    (116) array -> IDENTIFICADOR . ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA
    (117) array -> IDENTIFICADOR . ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA
    (118) array -> IDENTIFICADOR . ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA
    (119) array -> IDENTIFICADOR . ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA
    (121) array -> IDENTIFICADOR . ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA
    (39) variable -> IDENTIFICADOR .
    (30) valor -> IDENTIFICADOR .

    ASIGNAR         shift and go to state 65
    PUNTOCOMA       shift and go to state 66
    FLECHASIMPLE    shift and go to state 67
    MAYORQUE        reduce using rule 39 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 39 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 39 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 39 (variable -> IDENTIFICADOR .)
    SUMA            reduce using rule 39 (variable -> IDENTIFICADOR .)
    RESTA           reduce using rule 39 (variable -> IDENTIFICADOR .)
    MULT            reduce using rule 39 (variable -> IDENTIFICADOR .)
    DIVISION        reduce using rule 39 (variable -> IDENTIFICADOR .)
    DIVISIONENTERA  reduce using rule 39 (variable -> IDENTIFICADOR .)
    MODULO          reduce using rule 39 (variable -> IDENTIFICADOR .)
    POTENCIA        reduce using rule 39 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 30 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 30 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 30 (valor -> IDENTIFICADOR .)


state 26

    (43) comparacion -> valor . comparador valor
    (35) comparador -> . IDENTICO
    (36) comparador -> . NOIDENTICO
    (37) comparador -> . IGUAL

    IDENTICO        shift and go to state 69
    NOIDENTICO      shift and go to state 70
    IGUAL           shift and go to state 71

    comparador                     shift and go to state 68

state 27

    (20) funciones -> funcion .

    IDENTIFICADOR   reduce using rule 20 (funciones -> funcion .)
    COMENTARIO      reduce using rule 20 (funciones -> funcion .)
    LLAVEDER        reduce using rule 20 (funciones -> funcion .)
    PRINT           reduce using rule 20 (funciones -> funcion .)
    ECHO            reduce using rule 20 (funciones -> funcion .)
    FUNCTION        reduce using rule 20 (funciones -> funcion .)
    NAMEFUNCTION    reduce using rule 20 (funciones -> funcion .)
    RETURN          reduce using rule 20 (funciones -> funcion .)
    WHILE           reduce using rule 20 (funciones -> funcion .)
    FOR             reduce using rule 20 (funciones -> funcion .)
    IF              reduce using rule 20 (funciones -> funcion .)
    ELSEIF          reduce using rule 20 (funciones -> funcion .)
    ELSE            reduce using rule 20 (funciones -> funcion .)
    FOREACH         reduce using rule 20 (funciones -> funcion .)
    SWITCH          reduce using rule 20 (funciones -> funcion .)
    ARRAY_PUSH      reduce using rule 20 (funciones -> funcion .)
    CADENA          reduce using rule 20 (funciones -> funcion .)
    BOOLEAN         reduce using rule 20 (funciones -> funcion .)
    ENTERO          reduce using rule 20 (funciones -> funcion .)
    RESTA           reduce using rule 20 (funciones -> funcion .)
    FLOTANTE        reduce using rule 20 (funciones -> funcion .)
    $end            reduce using rule 20 (funciones -> funcion .)


state 28

    (21) funciones -> return .

    IDENTIFICADOR   reduce using rule 21 (funciones -> return .)
    COMENTARIO      reduce using rule 21 (funciones -> return .)
    LLAVEDER        reduce using rule 21 (funciones -> return .)
    PRINT           reduce using rule 21 (funciones -> return .)
    ECHO            reduce using rule 21 (funciones -> return .)
    FUNCTION        reduce using rule 21 (funciones -> return .)
    NAMEFUNCTION    reduce using rule 21 (funciones -> return .)
    RETURN          reduce using rule 21 (funciones -> return .)
    WHILE           reduce using rule 21 (funciones -> return .)
    FOR             reduce using rule 21 (funciones -> return .)
    IF              reduce using rule 21 (funciones -> return .)
    ELSEIF          reduce using rule 21 (funciones -> return .)
    ELSE            reduce using rule 21 (funciones -> return .)
    FOREACH         reduce using rule 21 (funciones -> return .)
    SWITCH          reduce using rule 21 (funciones -> return .)
    ARRAY_PUSH      reduce using rule 21 (funciones -> return .)
    CADENA          reduce using rule 21 (funciones -> return .)
    BOOLEAN         reduce using rule 21 (funciones -> return .)
    ENTERO          reduce using rule 21 (funciones -> return .)
    RESTA           reduce using rule 21 (funciones -> return .)
    FLOTANTE        reduce using rule 21 (funciones -> return .)
    $end            reduce using rule 21 (funciones -> return .)


state 29

    (76) estructurasControl -> while .

    IDENTIFICADOR   reduce using rule 76 (estructurasControl -> while .)
    COMENTARIO      reduce using rule 76 (estructurasControl -> while .)
    LLAVEDER        reduce using rule 76 (estructurasControl -> while .)
    PRINT           reduce using rule 76 (estructurasControl -> while .)
    ECHO            reduce using rule 76 (estructurasControl -> while .)
    FUNCTION        reduce using rule 76 (estructurasControl -> while .)
    NAMEFUNCTION    reduce using rule 76 (estructurasControl -> while .)
    RETURN          reduce using rule 76 (estructurasControl -> while .)
    WHILE           reduce using rule 76 (estructurasControl -> while .)
    FOR             reduce using rule 76 (estructurasControl -> while .)
    IF              reduce using rule 76 (estructurasControl -> while .)
    ELSEIF          reduce using rule 76 (estructurasControl -> while .)
    ELSE            reduce using rule 76 (estructurasControl -> while .)
    FOREACH         reduce using rule 76 (estructurasControl -> while .)
    SWITCH          reduce using rule 76 (estructurasControl -> while .)
    ARRAY_PUSH      reduce using rule 76 (estructurasControl -> while .)
    CADENA          reduce using rule 76 (estructurasControl -> while .)
    BOOLEAN         reduce using rule 76 (estructurasControl -> while .)
    ENTERO          reduce using rule 76 (estructurasControl -> while .)
    RESTA           reduce using rule 76 (estructurasControl -> while .)
    FLOTANTE        reduce using rule 76 (estructurasControl -> while .)
    $end            reduce using rule 76 (estructurasControl -> while .)


state 30

    (77) estructurasControl -> for .

    IDENTIFICADOR   reduce using rule 77 (estructurasControl -> for .)
    COMENTARIO      reduce using rule 77 (estructurasControl -> for .)
    LLAVEDER        reduce using rule 77 (estructurasControl -> for .)
    PRINT           reduce using rule 77 (estructurasControl -> for .)
    ECHO            reduce using rule 77 (estructurasControl -> for .)
    FUNCTION        reduce using rule 77 (estructurasControl -> for .)
    NAMEFUNCTION    reduce using rule 77 (estructurasControl -> for .)
    RETURN          reduce using rule 77 (estructurasControl -> for .)
    WHILE           reduce using rule 77 (estructurasControl -> for .)
    FOR             reduce using rule 77 (estructurasControl -> for .)
    IF              reduce using rule 77 (estructurasControl -> for .)
    ELSEIF          reduce using rule 77 (estructurasControl -> for .)
    ELSE            reduce using rule 77 (estructurasControl -> for .)
    FOREACH         reduce using rule 77 (estructurasControl -> for .)
    SWITCH          reduce using rule 77 (estructurasControl -> for .)
    ARRAY_PUSH      reduce using rule 77 (estructurasControl -> for .)
    CADENA          reduce using rule 77 (estructurasControl -> for .)
    BOOLEAN         reduce using rule 77 (estructurasControl -> for .)
    ENTERO          reduce using rule 77 (estructurasControl -> for .)
    RESTA           reduce using rule 77 (estructurasControl -> for .)
    FLOTANTE        reduce using rule 77 (estructurasControl -> for .)
    $end            reduce using rule 77 (estructurasControl -> for .)


state 31

    (78) estructurasControl -> if .

    IDENTIFICADOR   reduce using rule 78 (estructurasControl -> if .)
    COMENTARIO      reduce using rule 78 (estructurasControl -> if .)
    LLAVEDER        reduce using rule 78 (estructurasControl -> if .)
    PRINT           reduce using rule 78 (estructurasControl -> if .)
    ECHO            reduce using rule 78 (estructurasControl -> if .)
    FUNCTION        reduce using rule 78 (estructurasControl -> if .)
    NAMEFUNCTION    reduce using rule 78 (estructurasControl -> if .)
    RETURN          reduce using rule 78 (estructurasControl -> if .)
    WHILE           reduce using rule 78 (estructurasControl -> if .)
    FOR             reduce using rule 78 (estructurasControl -> if .)
    IF              reduce using rule 78 (estructurasControl -> if .)
    ELSEIF          reduce using rule 78 (estructurasControl -> if .)
    ELSE            reduce using rule 78 (estructurasControl -> if .)
    FOREACH         reduce using rule 78 (estructurasControl -> if .)
    SWITCH          reduce using rule 78 (estructurasControl -> if .)
    ARRAY_PUSH      reduce using rule 78 (estructurasControl -> if .)
    CADENA          reduce using rule 78 (estructurasControl -> if .)
    BOOLEAN         reduce using rule 78 (estructurasControl -> if .)
    ENTERO          reduce using rule 78 (estructurasControl -> if .)
    RESTA           reduce using rule 78 (estructurasControl -> if .)
    FLOTANTE        reduce using rule 78 (estructurasControl -> if .)
    $end            reduce using rule 78 (estructurasControl -> if .)


state 32

    (79) estructurasControl -> elseif .

    IDENTIFICADOR   reduce using rule 79 (estructurasControl -> elseif .)
    COMENTARIO      reduce using rule 79 (estructurasControl -> elseif .)
    LLAVEDER        reduce using rule 79 (estructurasControl -> elseif .)
    PRINT           reduce using rule 79 (estructurasControl -> elseif .)
    ECHO            reduce using rule 79 (estructurasControl -> elseif .)
    FUNCTION        reduce using rule 79 (estructurasControl -> elseif .)
    NAMEFUNCTION    reduce using rule 79 (estructurasControl -> elseif .)
    RETURN          reduce using rule 79 (estructurasControl -> elseif .)
    WHILE           reduce using rule 79 (estructurasControl -> elseif .)
    FOR             reduce using rule 79 (estructurasControl -> elseif .)
    IF              reduce using rule 79 (estructurasControl -> elseif .)
    ELSEIF          reduce using rule 79 (estructurasControl -> elseif .)
    ELSE            reduce using rule 79 (estructurasControl -> elseif .)
    FOREACH         reduce using rule 79 (estructurasControl -> elseif .)
    SWITCH          reduce using rule 79 (estructurasControl -> elseif .)
    ARRAY_PUSH      reduce using rule 79 (estructurasControl -> elseif .)
    CADENA          reduce using rule 79 (estructurasControl -> elseif .)
    BOOLEAN         reduce using rule 79 (estructurasControl -> elseif .)
    ENTERO          reduce using rule 79 (estructurasControl -> elseif .)
    RESTA           reduce using rule 79 (estructurasControl -> elseif .)
    FLOTANTE        reduce using rule 79 (estructurasControl -> elseif .)
    $end            reduce using rule 79 (estructurasControl -> elseif .)


state 33

    (80) estructurasControl -> else .

    IDENTIFICADOR   reduce using rule 80 (estructurasControl -> else .)
    COMENTARIO      reduce using rule 80 (estructurasControl -> else .)
    LLAVEDER        reduce using rule 80 (estructurasControl -> else .)
    PRINT           reduce using rule 80 (estructurasControl -> else .)
    ECHO            reduce using rule 80 (estructurasControl -> else .)
    FUNCTION        reduce using rule 80 (estructurasControl -> else .)
    NAMEFUNCTION    reduce using rule 80 (estructurasControl -> else .)
    RETURN          reduce using rule 80 (estructurasControl -> else .)
    WHILE           reduce using rule 80 (estructurasControl -> else .)
    FOR             reduce using rule 80 (estructurasControl -> else .)
    IF              reduce using rule 80 (estructurasControl -> else .)
    ELSEIF          reduce using rule 80 (estructurasControl -> else .)
    ELSE            reduce using rule 80 (estructurasControl -> else .)
    FOREACH         reduce using rule 80 (estructurasControl -> else .)
    SWITCH          reduce using rule 80 (estructurasControl -> else .)
    ARRAY_PUSH      reduce using rule 80 (estructurasControl -> else .)
    CADENA          reduce using rule 80 (estructurasControl -> else .)
    BOOLEAN         reduce using rule 80 (estructurasControl -> else .)
    ENTERO          reduce using rule 80 (estructurasControl -> else .)
    RESTA           reduce using rule 80 (estructurasControl -> else .)
    FLOTANTE        reduce using rule 80 (estructurasControl -> else .)
    $end            reduce using rule 80 (estructurasControl -> else .)


state 34

    (81) estructurasControl -> foreach .

    IDENTIFICADOR   reduce using rule 81 (estructurasControl -> foreach .)
    COMENTARIO      reduce using rule 81 (estructurasControl -> foreach .)
    LLAVEDER        reduce using rule 81 (estructurasControl -> foreach .)
    PRINT           reduce using rule 81 (estructurasControl -> foreach .)
    ECHO            reduce using rule 81 (estructurasControl -> foreach .)
    FUNCTION        reduce using rule 81 (estructurasControl -> foreach .)
    NAMEFUNCTION    reduce using rule 81 (estructurasControl -> foreach .)
    RETURN          reduce using rule 81 (estructurasControl -> foreach .)
    WHILE           reduce using rule 81 (estructurasControl -> foreach .)
    FOR             reduce using rule 81 (estructurasControl -> foreach .)
    IF              reduce using rule 81 (estructurasControl -> foreach .)
    ELSEIF          reduce using rule 81 (estructurasControl -> foreach .)
    ELSE            reduce using rule 81 (estructurasControl -> foreach .)
    FOREACH         reduce using rule 81 (estructurasControl -> foreach .)
    SWITCH          reduce using rule 81 (estructurasControl -> foreach .)
    ARRAY_PUSH      reduce using rule 81 (estructurasControl -> foreach .)
    CADENA          reduce using rule 81 (estructurasControl -> foreach .)
    BOOLEAN         reduce using rule 81 (estructurasControl -> foreach .)
    ENTERO          reduce using rule 81 (estructurasControl -> foreach .)
    RESTA           reduce using rule 81 (estructurasControl -> foreach .)
    FLOTANTE        reduce using rule 81 (estructurasControl -> foreach .)
    $end            reduce using rule 81 (estructurasControl -> foreach .)


state 35

    (82) estructurasControl -> switch .

    IDENTIFICADOR   reduce using rule 82 (estructurasControl -> switch .)
    COMENTARIO      reduce using rule 82 (estructurasControl -> switch .)
    LLAVEDER        reduce using rule 82 (estructurasControl -> switch .)
    PRINT           reduce using rule 82 (estructurasControl -> switch .)
    ECHO            reduce using rule 82 (estructurasControl -> switch .)
    FUNCTION        reduce using rule 82 (estructurasControl -> switch .)
    NAMEFUNCTION    reduce using rule 82 (estructurasControl -> switch .)
    RETURN          reduce using rule 82 (estructurasControl -> switch .)
    WHILE           reduce using rule 82 (estructurasControl -> switch .)
    FOR             reduce using rule 82 (estructurasControl -> switch .)
    IF              reduce using rule 82 (estructurasControl -> switch .)
    ELSEIF          reduce using rule 82 (estructurasControl -> switch .)
    ELSE            reduce using rule 82 (estructurasControl -> switch .)
    FOREACH         reduce using rule 82 (estructurasControl -> switch .)
    SWITCH          reduce using rule 82 (estructurasControl -> switch .)
    ARRAY_PUSH      reduce using rule 82 (estructurasControl -> switch .)
    CADENA          reduce using rule 82 (estructurasControl -> switch .)
    BOOLEAN         reduce using rule 82 (estructurasControl -> switch .)
    ENTERO          reduce using rule 82 (estructurasControl -> switch .)
    RESTA           reduce using rule 82 (estructurasControl -> switch .)
    FLOTANTE        reduce using rule 82 (estructurasControl -> switch .)
    $end            reduce using rule 82 (estructurasControl -> switch .)


state 36

    (98) estructurasDeDatos -> queue .

    IDENTIFICADOR   reduce using rule 98 (estructurasDeDatos -> queue .)
    COMENTARIO      reduce using rule 98 (estructurasDeDatos -> queue .)
    LLAVEDER        reduce using rule 98 (estructurasDeDatos -> queue .)
    PRINT           reduce using rule 98 (estructurasDeDatos -> queue .)
    ECHO            reduce using rule 98 (estructurasDeDatos -> queue .)
    FUNCTION        reduce using rule 98 (estructurasDeDatos -> queue .)
    NAMEFUNCTION    reduce using rule 98 (estructurasDeDatos -> queue .)
    RETURN          reduce using rule 98 (estructurasDeDatos -> queue .)
    WHILE           reduce using rule 98 (estructurasDeDatos -> queue .)
    FOR             reduce using rule 98 (estructurasDeDatos -> queue .)
    IF              reduce using rule 98 (estructurasDeDatos -> queue .)
    ELSEIF          reduce using rule 98 (estructurasDeDatos -> queue .)
    ELSE            reduce using rule 98 (estructurasDeDatos -> queue .)
    FOREACH         reduce using rule 98 (estructurasDeDatos -> queue .)
    SWITCH          reduce using rule 98 (estructurasDeDatos -> queue .)
    ARRAY_PUSH      reduce using rule 98 (estructurasDeDatos -> queue .)
    CADENA          reduce using rule 98 (estructurasDeDatos -> queue .)
    BOOLEAN         reduce using rule 98 (estructurasDeDatos -> queue .)
    ENTERO          reduce using rule 98 (estructurasDeDatos -> queue .)
    RESTA           reduce using rule 98 (estructurasDeDatos -> queue .)
    FLOTANTE        reduce using rule 98 (estructurasDeDatos -> queue .)
    $end            reduce using rule 98 (estructurasDeDatos -> queue .)


state 37

    (99) estructurasDeDatos -> stack .

    IDENTIFICADOR   reduce using rule 99 (estructurasDeDatos -> stack .)
    COMENTARIO      reduce using rule 99 (estructurasDeDatos -> stack .)
    LLAVEDER        reduce using rule 99 (estructurasDeDatos -> stack .)
    PRINT           reduce using rule 99 (estructurasDeDatos -> stack .)
    ECHO            reduce using rule 99 (estructurasDeDatos -> stack .)
    FUNCTION        reduce using rule 99 (estructurasDeDatos -> stack .)
    NAMEFUNCTION    reduce using rule 99 (estructurasDeDatos -> stack .)
    RETURN          reduce using rule 99 (estructurasDeDatos -> stack .)
    WHILE           reduce using rule 99 (estructurasDeDatos -> stack .)
    FOR             reduce using rule 99 (estructurasDeDatos -> stack .)
    IF              reduce using rule 99 (estructurasDeDatos -> stack .)
    ELSEIF          reduce using rule 99 (estructurasDeDatos -> stack .)
    ELSE            reduce using rule 99 (estructurasDeDatos -> stack .)
    FOREACH         reduce using rule 99 (estructurasDeDatos -> stack .)
    SWITCH          reduce using rule 99 (estructurasDeDatos -> stack .)
    ARRAY_PUSH      reduce using rule 99 (estructurasDeDatos -> stack .)
    CADENA          reduce using rule 99 (estructurasDeDatos -> stack .)
    BOOLEAN         reduce using rule 99 (estructurasDeDatos -> stack .)
    ENTERO          reduce using rule 99 (estructurasDeDatos -> stack .)
    RESTA           reduce using rule 99 (estructurasDeDatos -> stack .)
    FLOTANTE        reduce using rule 99 (estructurasDeDatos -> stack .)
    $end            reduce using rule 99 (estructurasDeDatos -> stack .)


state 38

    (100) estructurasDeDatos -> array .

    IDENTIFICADOR   reduce using rule 100 (estructurasDeDatos -> array .)
    COMENTARIO      reduce using rule 100 (estructurasDeDatos -> array .)
    LLAVEDER        reduce using rule 100 (estructurasDeDatos -> array .)
    PRINT           reduce using rule 100 (estructurasDeDatos -> array .)
    ECHO            reduce using rule 100 (estructurasDeDatos -> array .)
    FUNCTION        reduce using rule 100 (estructurasDeDatos -> array .)
    NAMEFUNCTION    reduce using rule 100 (estructurasDeDatos -> array .)
    RETURN          reduce using rule 100 (estructurasDeDatos -> array .)
    WHILE           reduce using rule 100 (estructurasDeDatos -> array .)
    FOR             reduce using rule 100 (estructurasDeDatos -> array .)
    IF              reduce using rule 100 (estructurasDeDatos -> array .)
    ELSEIF          reduce using rule 100 (estructurasDeDatos -> array .)
    ELSE            reduce using rule 100 (estructurasDeDatos -> array .)
    FOREACH         reduce using rule 100 (estructurasDeDatos -> array .)
    SWITCH          reduce using rule 100 (estructurasDeDatos -> array .)
    ARRAY_PUSH      reduce using rule 100 (estructurasDeDatos -> array .)
    CADENA          reduce using rule 100 (estructurasDeDatos -> array .)
    BOOLEAN         reduce using rule 100 (estructurasDeDatos -> array .)
    ENTERO          reduce using rule 100 (estructurasDeDatos -> array .)
    RESTA           reduce using rule 100 (estructurasDeDatos -> array .)
    FLOTANTE        reduce using rule 100 (estructurasDeDatos -> array .)
    $end            reduce using rule 100 (estructurasDeDatos -> array .)


state 39

    (40) comparaciones -> comparacion .
    (41) comparaciones -> comparacion . operadores comparaciones
    (48) operadores -> . OPERADOR
    (49) operadores -> . AND
    (50) operadores -> . OR

    IDENTIFICADOR   reduce using rule 40 (comparaciones -> comparacion .)
    COMENTARIO      reduce using rule 40 (comparaciones -> comparacion .)
    LLAVEDER        reduce using rule 40 (comparaciones -> comparacion .)
    PRINT           reduce using rule 40 (comparaciones -> comparacion .)
    ECHO            reduce using rule 40 (comparaciones -> comparacion .)
    FUNCTION        reduce using rule 40 (comparaciones -> comparacion .)
    NAMEFUNCTION    reduce using rule 40 (comparaciones -> comparacion .)
    RETURN          reduce using rule 40 (comparaciones -> comparacion .)
    WHILE           reduce using rule 40 (comparaciones -> comparacion .)
    FOR             reduce using rule 40 (comparaciones -> comparacion .)
    IF              reduce using rule 40 (comparaciones -> comparacion .)
    ELSEIF          reduce using rule 40 (comparaciones -> comparacion .)
    ELSE            reduce using rule 40 (comparaciones -> comparacion .)
    FOREACH         reduce using rule 40 (comparaciones -> comparacion .)
    SWITCH          reduce using rule 40 (comparaciones -> comparacion .)
    ARRAY_PUSH      reduce using rule 40 (comparaciones -> comparacion .)
    CADENA          reduce using rule 40 (comparaciones -> comparacion .)
    BOOLEAN         reduce using rule 40 (comparaciones -> comparacion .)
    ENTERO          reduce using rule 40 (comparaciones -> comparacion .)
    RESTA           reduce using rule 40 (comparaciones -> comparacion .)
    FLOTANTE        reduce using rule 40 (comparaciones -> comparacion .)
    $end            reduce using rule 40 (comparaciones -> comparacion .)
    PARENDER        reduce using rule 40 (comparaciones -> comparacion .)
    OPERADOR        shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75

    operadores                     shift and go to state 72

state 40

    (52) operaciones -> operacion .
    (53) operaciones -> operacion . operadorAritmetico operaciones
    (56) operadorAritmetico -> . SUMA
    (57) operadorAritmetico -> . RESTA
    (58) operadorAritmetico -> . MULT
    (59) operadorAritmetico -> . DIVISION
    (60) operadorAritmetico -> . DIVISIONENTERA
    (61) operadorAritmetico -> . MODULO
    (62) operadorAritmetico -> . POTENCIA

  ! shift/reduce conflict for RESTA resolved as shift
    IDENTIFICADOR   reduce using rule 52 (operaciones -> operacion .)
    COMENTARIO      reduce using rule 52 (operaciones -> operacion .)
    LLAVEDER        reduce using rule 52 (operaciones -> operacion .)
    PRINT           reduce using rule 52 (operaciones -> operacion .)
    ECHO            reduce using rule 52 (operaciones -> operacion .)
    FUNCTION        reduce using rule 52 (operaciones -> operacion .)
    NAMEFUNCTION    reduce using rule 52 (operaciones -> operacion .)
    RETURN          reduce using rule 52 (operaciones -> operacion .)
    WHILE           reduce using rule 52 (operaciones -> operacion .)
    FOR             reduce using rule 52 (operaciones -> operacion .)
    IF              reduce using rule 52 (operaciones -> operacion .)
    ELSEIF          reduce using rule 52 (operaciones -> operacion .)
    ELSE            reduce using rule 52 (operaciones -> operacion .)
    FOREACH         reduce using rule 52 (operaciones -> operacion .)
    SWITCH          reduce using rule 52 (operaciones -> operacion .)
    ARRAY_PUSH      reduce using rule 52 (operaciones -> operacion .)
    CADENA          reduce using rule 52 (operaciones -> operacion .)
    BOOLEAN         reduce using rule 52 (operaciones -> operacion .)
    ENTERO          reduce using rule 52 (operaciones -> operacion .)
    FLOTANTE        reduce using rule 52 (operaciones -> operacion .)
    $end            reduce using rule 52 (operaciones -> operacion .)
    SUMA            shift and go to state 5
    RESTA           shift and go to state 77
    MULT            shift and go to state 7
    DIVISION        shift and go to state 8
    DIVISIONENTERA  shift and go to state 9
    MODULO          shift and go to state 10
    POTENCIA        shift and go to state 11

  ! RESTA           [ reduce using rule 52 (operaciones -> operacion .) ]

    operadorAritmetico             shift and go to state 76

state 41

    (18) comentario -> COMENTARIO .

    IDENTIFICADOR   reduce using rule 18 (comentario -> COMENTARIO .)
    COMENTARIO      reduce using rule 18 (comentario -> COMENTARIO .)
    LLAVEDER        reduce using rule 18 (comentario -> COMENTARIO .)
    PRINT           reduce using rule 18 (comentario -> COMENTARIO .)
    ECHO            reduce using rule 18 (comentario -> COMENTARIO .)
    FUNCTION        reduce using rule 18 (comentario -> COMENTARIO .)
    NAMEFUNCTION    reduce using rule 18 (comentario -> COMENTARIO .)
    RETURN          reduce using rule 18 (comentario -> COMENTARIO .)
    WHILE           reduce using rule 18 (comentario -> COMENTARIO .)
    FOR             reduce using rule 18 (comentario -> COMENTARIO .)
    IF              reduce using rule 18 (comentario -> COMENTARIO .)
    ELSEIF          reduce using rule 18 (comentario -> COMENTARIO .)
    ELSE            reduce using rule 18 (comentario -> COMENTARIO .)
    FOREACH         reduce using rule 18 (comentario -> COMENTARIO .)
    SWITCH          reduce using rule 18 (comentario -> COMENTARIO .)
    ARRAY_PUSH      reduce using rule 18 (comentario -> COMENTARIO .)
    CADENA          reduce using rule 18 (comentario -> COMENTARIO .)
    BOOLEAN         reduce using rule 18 (comentario -> COMENTARIO .)
    ENTERO          reduce using rule 18 (comentario -> COMENTARIO .)
    RESTA           reduce using rule 18 (comentario -> COMENTARIO .)
    FLOTANTE        reduce using rule 18 (comentario -> COMENTARIO .)
    $end            reduce using rule 18 (comentario -> COMENTARIO .)


state 42

    (19) cerrar -> LLAVEDER .
    (92) elseif -> LLAVEDER . ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (93) elseif -> LLAVEDER . ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (96) else -> LLAVEDER . ELSE LLAVEIZ

  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    IDENTIFICADOR   reduce using rule 19 (cerrar -> LLAVEDER .)
    COMENTARIO      reduce using rule 19 (cerrar -> LLAVEDER .)
    LLAVEDER        reduce using rule 19 (cerrar -> LLAVEDER .)
    PRINT           reduce using rule 19 (cerrar -> LLAVEDER .)
    ECHO            reduce using rule 19 (cerrar -> LLAVEDER .)
    FUNCTION        reduce using rule 19 (cerrar -> LLAVEDER .)
    NAMEFUNCTION    reduce using rule 19 (cerrar -> LLAVEDER .)
    RETURN          reduce using rule 19 (cerrar -> LLAVEDER .)
    WHILE           reduce using rule 19 (cerrar -> LLAVEDER .)
    FOR             reduce using rule 19 (cerrar -> LLAVEDER .)
    IF              reduce using rule 19 (cerrar -> LLAVEDER .)
    FOREACH         reduce using rule 19 (cerrar -> LLAVEDER .)
    SWITCH          reduce using rule 19 (cerrar -> LLAVEDER .)
    ARRAY_PUSH      reduce using rule 19 (cerrar -> LLAVEDER .)
    CADENA          reduce using rule 19 (cerrar -> LLAVEDER .)
    BOOLEAN         reduce using rule 19 (cerrar -> LLAVEDER .)
    ENTERO          reduce using rule 19 (cerrar -> LLAVEDER .)
    RESTA           reduce using rule 19 (cerrar -> LLAVEDER .)
    FLOTANTE        reduce using rule 19 (cerrar -> LLAVEDER .)
    $end            reduce using rule 19 (cerrar -> LLAVEDER .)
    ELSEIF          shift and go to state 78
    ELSE            shift and go to state 79

  ! ELSEIF          [ reduce using rule 19 (cerrar -> LLAVEDER .) ]
  ! ELSE            [ reduce using rule 19 (cerrar -> LLAVEDER .) ]


state 43

    (65) print -> PRINT . PARENIZ valores PARENDER PUNTOCOMA
    (66) print -> PRINT . valor PUNTOCOMA
    (67) print -> PRINT . PARENIZ PARENDER PUNTOCOMA
    (27) valor -> . NUMERO
    (28) valor -> . CADENA
    (29) valor -> . BOOLEAN
    (30) valor -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    PARENIZ         shift and go to state 80
    CADENA          shift and go to state 59
    BOOLEAN         shift and go to state 60
    IDENTIFICADOR   shift and go to state 83
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    valor                          shift and go to state 81
    NUMERO                         shift and go to state 82

state 44

    (69) echo -> ECHO . valores PUNTOCOMA
    (22) valores -> . valor
    (23) valores -> . valor COMA valores
    (27) valor -> . NUMERO
    (28) valor -> . CADENA
    (29) valor -> . BOOLEAN
    (30) valor -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 59
    BOOLEAN         shift and go to state 60
    IDENTIFICADOR   shift and go to state 83
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    valores                        shift and go to state 84
    valor                          shift and go to state 85
    NUMERO                         shift and go to state 82

state 45

    (70) funcion -> FUNCTION . NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ

    NAMEFUNCTION    shift and go to state 86


state 46

    (73) funcion -> NAMEFUNCTION . PARENIZ parametro PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 87


state 47

    (75) return -> RETURN . IDENTIFICADOR PUNTOCOMA

    IDENTIFICADOR   shift and go to state 88


state 48

    (83) while -> WHILE . PARENIZ comparaciones PARENDER LLAVEIZ

    PARENIZ         shift and go to state 89


state 49

    (84) for -> FOR . PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    PARENIZ         shift and go to state 90


state 50

    (24) NUMERO -> ENTERO .

    MAYORQUE        reduce using rule 24 (NUMERO -> ENTERO .)
    MAYORIGUALQUE   reduce using rule 24 (NUMERO -> ENTERO .)
    MENORQUE        reduce using rule 24 (NUMERO -> ENTERO .)
    MENORIGUALQUE   reduce using rule 24 (NUMERO -> ENTERO .)
    SUMA            reduce using rule 24 (NUMERO -> ENTERO .)
    RESTA           reduce using rule 24 (NUMERO -> ENTERO .)
    MULT            reduce using rule 24 (NUMERO -> ENTERO .)
    DIVISION        reduce using rule 24 (NUMERO -> ENTERO .)
    DIVISIONENTERA  reduce using rule 24 (NUMERO -> ENTERO .)
    MODULO          reduce using rule 24 (NUMERO -> ENTERO .)
    POTENCIA        reduce using rule 24 (NUMERO -> ENTERO .)
    IDENTICO        reduce using rule 24 (NUMERO -> ENTERO .)
    NOIDENTICO      reduce using rule 24 (NUMERO -> ENTERO .)
    IGUAL           reduce using rule 24 (NUMERO -> ENTERO .)
    PUNTOCOMA       reduce using rule 24 (NUMERO -> ENTERO .)
    COMA            reduce using rule 24 (NUMERO -> ENTERO .)
    OPERADOR        reduce using rule 24 (NUMERO -> ENTERO .)
    AND             reduce using rule 24 (NUMERO -> ENTERO .)
    OR              reduce using rule 24 (NUMERO -> ENTERO .)
    IDENTIFICADOR   reduce using rule 24 (NUMERO -> ENTERO .)
    COMENTARIO      reduce using rule 24 (NUMERO -> ENTERO .)
    LLAVEDER        reduce using rule 24 (NUMERO -> ENTERO .)
    PRINT           reduce using rule 24 (NUMERO -> ENTERO .)
    ECHO            reduce using rule 24 (NUMERO -> ENTERO .)
    FUNCTION        reduce using rule 24 (NUMERO -> ENTERO .)
    NAMEFUNCTION    reduce using rule 24 (NUMERO -> ENTERO .)
    RETURN          reduce using rule 24 (NUMERO -> ENTERO .)
    WHILE           reduce using rule 24 (NUMERO -> ENTERO .)
    FOR             reduce using rule 24 (NUMERO -> ENTERO .)
    IF              reduce using rule 24 (NUMERO -> ENTERO .)
    ELSEIF          reduce using rule 24 (NUMERO -> ENTERO .)
    ELSE            reduce using rule 24 (NUMERO -> ENTERO .)
    FOREACH         reduce using rule 24 (NUMERO -> ENTERO .)
    SWITCH          reduce using rule 24 (NUMERO -> ENTERO .)
    ARRAY_PUSH      reduce using rule 24 (NUMERO -> ENTERO .)
    CADENA          reduce using rule 24 (NUMERO -> ENTERO .)
    BOOLEAN         reduce using rule 24 (NUMERO -> ENTERO .)
    ENTERO          reduce using rule 24 (NUMERO -> ENTERO .)
    FLOTANTE        reduce using rule 24 (NUMERO -> ENTERO .)
    $end            reduce using rule 24 (NUMERO -> ENTERO .)
    PARENDER        reduce using rule 24 (NUMERO -> ENTERO .)
    CORCHETEDER     reduce using rule 24 (NUMERO -> ENTERO .)
    DOSPUNTOS       reduce using rule 24 (NUMERO -> ENTERO .)


state 51

    (90) if -> IF . PARENIZ comparaciones PARENDER LLAVEIZ
    (91) if -> IF . PARENIZ IDENTIFICADOR PARENDER LLAVEIZ

    PARENIZ         shift and go to state 91


state 52

    (94) elseif -> ELSEIF . PARENIZ comparaciones PARENDER LLAVEIZ
    (95) elseif -> ELSEIF . PARENIZ IDENTIFICADOR PARENDER LLAVEIZ

    PARENIZ         shift and go to state 92


state 53

    (97) else -> ELSE . LLAVEIZ

    LLAVEIZ         shift and go to state 93


state 54

    (85) foreach -> FOREACH . PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ

    PARENIZ         shift and go to state 94


state 55

    (86) switch -> SWITCH . PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER

    PARENIZ         shift and go to state 95


state 56

    (120) array -> ARRAY_PUSH . PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 96


state 57

    (42) comparacion -> variable . comparadorNum variable
    (55) operacion -> variable . operadorAritmetico variable
    (31) comparadorNum -> . MAYORQUE
    (32) comparadorNum -> . MAYORIGUALQUE
    (33) comparadorNum -> . MENORQUE
    (34) comparadorNum -> . MENORIGUALQUE
    (56) operadorAritmetico -> . SUMA
    (57) operadorAritmetico -> . RESTA
    (58) operadorAritmetico -> . MULT
    (59) operadorAritmetico -> . DIVISION
    (60) operadorAritmetico -> . DIVISIONENTERA
    (61) operadorAritmetico -> . MODULO
    (62) operadorAritmetico -> . POTENCIA

    MAYORQUE        shift and go to state 99
    MAYORIGUALQUE   shift and go to state 100
    MENORQUE        shift and go to state 101
    MENORIGUALQUE   shift and go to state 102
    SUMA            shift and go to state 5
    RESTA           shift and go to state 77
    MULT            shift and go to state 7
    DIVISION        shift and go to state 8
    DIVISIONENTERA  shift and go to state 9
    MODULO          shift and go to state 10
    POTENCIA        shift and go to state 11

    comparadorNum                  shift and go to state 97
    operadorAritmetico             shift and go to state 98

state 58

    (38) variable -> NUMERO .
    (27) valor -> NUMERO .

    MAYORQUE        reduce using rule 38 (variable -> NUMERO .)
    MAYORIGUALQUE   reduce using rule 38 (variable -> NUMERO .)
    MENORQUE        reduce using rule 38 (variable -> NUMERO .)
    MENORIGUALQUE   reduce using rule 38 (variable -> NUMERO .)
    SUMA            reduce using rule 38 (variable -> NUMERO .)
    RESTA           reduce using rule 38 (variable -> NUMERO .)
    MULT            reduce using rule 38 (variable -> NUMERO .)
    DIVISION        reduce using rule 38 (variable -> NUMERO .)
    DIVISIONENTERA  reduce using rule 38 (variable -> NUMERO .)
    MODULO          reduce using rule 38 (variable -> NUMERO .)
    POTENCIA        reduce using rule 38 (variable -> NUMERO .)
    IDENTICO        reduce using rule 27 (valor -> NUMERO .)
    NOIDENTICO      reduce using rule 27 (valor -> NUMERO .)
    IGUAL           reduce using rule 27 (valor -> NUMERO .)


state 59

    (28) valor -> CADENA .

    IDENTICO        reduce using rule 28 (valor -> CADENA .)
    NOIDENTICO      reduce using rule 28 (valor -> CADENA .)
    IGUAL           reduce using rule 28 (valor -> CADENA .)
    PUNTOCOMA       reduce using rule 28 (valor -> CADENA .)
    COMA            reduce using rule 28 (valor -> CADENA .)
    OPERADOR        reduce using rule 28 (valor -> CADENA .)
    AND             reduce using rule 28 (valor -> CADENA .)
    OR              reduce using rule 28 (valor -> CADENA .)
    IDENTIFICADOR   reduce using rule 28 (valor -> CADENA .)
    COMENTARIO      reduce using rule 28 (valor -> CADENA .)
    LLAVEDER        reduce using rule 28 (valor -> CADENA .)
    PRINT           reduce using rule 28 (valor -> CADENA .)
    ECHO            reduce using rule 28 (valor -> CADENA .)
    FUNCTION        reduce using rule 28 (valor -> CADENA .)
    NAMEFUNCTION    reduce using rule 28 (valor -> CADENA .)
    RETURN          reduce using rule 28 (valor -> CADENA .)
    WHILE           reduce using rule 28 (valor -> CADENA .)
    FOR             reduce using rule 28 (valor -> CADENA .)
    IF              reduce using rule 28 (valor -> CADENA .)
    ELSEIF          reduce using rule 28 (valor -> CADENA .)
    ELSE            reduce using rule 28 (valor -> CADENA .)
    FOREACH         reduce using rule 28 (valor -> CADENA .)
    SWITCH          reduce using rule 28 (valor -> CADENA .)
    ARRAY_PUSH      reduce using rule 28 (valor -> CADENA .)
    CADENA          reduce using rule 28 (valor -> CADENA .)
    BOOLEAN         reduce using rule 28 (valor -> CADENA .)
    ENTERO          reduce using rule 28 (valor -> CADENA .)
    RESTA           reduce using rule 28 (valor -> CADENA .)
    FLOTANTE        reduce using rule 28 (valor -> CADENA .)
    $end            reduce using rule 28 (valor -> CADENA .)
    PARENDER        reduce using rule 28 (valor -> CADENA .)
    CORCHETEDER     reduce using rule 28 (valor -> CADENA .)
    DOSPUNTOS       reduce using rule 28 (valor -> CADENA .)


state 60

    (29) valor -> BOOLEAN .

    IDENTICO        reduce using rule 29 (valor -> BOOLEAN .)
    NOIDENTICO      reduce using rule 29 (valor -> BOOLEAN .)
    IGUAL           reduce using rule 29 (valor -> BOOLEAN .)
    PUNTOCOMA       reduce using rule 29 (valor -> BOOLEAN .)
    COMA            reduce using rule 29 (valor -> BOOLEAN .)
    OPERADOR        reduce using rule 29 (valor -> BOOLEAN .)
    AND             reduce using rule 29 (valor -> BOOLEAN .)
    OR              reduce using rule 29 (valor -> BOOLEAN .)
    IDENTIFICADOR   reduce using rule 29 (valor -> BOOLEAN .)
    COMENTARIO      reduce using rule 29 (valor -> BOOLEAN .)
    LLAVEDER        reduce using rule 29 (valor -> BOOLEAN .)
    PRINT           reduce using rule 29 (valor -> BOOLEAN .)
    ECHO            reduce using rule 29 (valor -> BOOLEAN .)
    FUNCTION        reduce using rule 29 (valor -> BOOLEAN .)
    NAMEFUNCTION    reduce using rule 29 (valor -> BOOLEAN .)
    RETURN          reduce using rule 29 (valor -> BOOLEAN .)
    WHILE           reduce using rule 29 (valor -> BOOLEAN .)
    FOR             reduce using rule 29 (valor -> BOOLEAN .)
    IF              reduce using rule 29 (valor -> BOOLEAN .)
    ELSEIF          reduce using rule 29 (valor -> BOOLEAN .)
    ELSE            reduce using rule 29 (valor -> BOOLEAN .)
    FOREACH         reduce using rule 29 (valor -> BOOLEAN .)
    SWITCH          reduce using rule 29 (valor -> BOOLEAN .)
    ARRAY_PUSH      reduce using rule 29 (valor -> BOOLEAN .)
    CADENA          reduce using rule 29 (valor -> BOOLEAN .)
    BOOLEAN         reduce using rule 29 (valor -> BOOLEAN .)
    ENTERO          reduce using rule 29 (valor -> BOOLEAN .)
    RESTA           reduce using rule 29 (valor -> BOOLEAN .)
    FLOTANTE        reduce using rule 29 (valor -> BOOLEAN .)
    $end            reduce using rule 29 (valor -> BOOLEAN .)
    PARENDER        reduce using rule 29 (valor -> BOOLEAN .)
    CORCHETEDER     reduce using rule 29 (valor -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 29 (valor -> BOOLEAN .)


state 61

    (26) NUMERO -> FLOTANTE .

    MAYORQUE        reduce using rule 26 (NUMERO -> FLOTANTE .)
    MAYORIGUALQUE   reduce using rule 26 (NUMERO -> FLOTANTE .)
    MENORQUE        reduce using rule 26 (NUMERO -> FLOTANTE .)
    MENORIGUALQUE   reduce using rule 26 (NUMERO -> FLOTANTE .)
    SUMA            reduce using rule 26 (NUMERO -> FLOTANTE .)
    RESTA           reduce using rule 26 (NUMERO -> FLOTANTE .)
    MULT            reduce using rule 26 (NUMERO -> FLOTANTE .)
    DIVISION        reduce using rule 26 (NUMERO -> FLOTANTE .)
    DIVISIONENTERA  reduce using rule 26 (NUMERO -> FLOTANTE .)
    MODULO          reduce using rule 26 (NUMERO -> FLOTANTE .)
    POTENCIA        reduce using rule 26 (NUMERO -> FLOTANTE .)
    IDENTICO        reduce using rule 26 (NUMERO -> FLOTANTE .)
    NOIDENTICO      reduce using rule 26 (NUMERO -> FLOTANTE .)
    IGUAL           reduce using rule 26 (NUMERO -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 26 (NUMERO -> FLOTANTE .)
    COMA            reduce using rule 26 (NUMERO -> FLOTANTE .)
    OPERADOR        reduce using rule 26 (NUMERO -> FLOTANTE .)
    AND             reduce using rule 26 (NUMERO -> FLOTANTE .)
    OR              reduce using rule 26 (NUMERO -> FLOTANTE .)
    IDENTIFICADOR   reduce using rule 26 (NUMERO -> FLOTANTE .)
    COMENTARIO      reduce using rule 26 (NUMERO -> FLOTANTE .)
    LLAVEDER        reduce using rule 26 (NUMERO -> FLOTANTE .)
    PRINT           reduce using rule 26 (NUMERO -> FLOTANTE .)
    ECHO            reduce using rule 26 (NUMERO -> FLOTANTE .)
    FUNCTION        reduce using rule 26 (NUMERO -> FLOTANTE .)
    NAMEFUNCTION    reduce using rule 26 (NUMERO -> FLOTANTE .)
    RETURN          reduce using rule 26 (NUMERO -> FLOTANTE .)
    WHILE           reduce using rule 26 (NUMERO -> FLOTANTE .)
    FOR             reduce using rule 26 (NUMERO -> FLOTANTE .)
    IF              reduce using rule 26 (NUMERO -> FLOTANTE .)
    ELSEIF          reduce using rule 26 (NUMERO -> FLOTANTE .)
    ELSE            reduce using rule 26 (NUMERO -> FLOTANTE .)
    FOREACH         reduce using rule 26 (NUMERO -> FLOTANTE .)
    SWITCH          reduce using rule 26 (NUMERO -> FLOTANTE .)
    ARRAY_PUSH      reduce using rule 26 (NUMERO -> FLOTANTE .)
    CADENA          reduce using rule 26 (NUMERO -> FLOTANTE .)
    BOOLEAN         reduce using rule 26 (NUMERO -> FLOTANTE .)
    ENTERO          reduce using rule 26 (NUMERO -> FLOTANTE .)
    FLOTANTE        reduce using rule 26 (NUMERO -> FLOTANTE .)
    $end            reduce using rule 26 (NUMERO -> FLOTANTE .)
    PARENDER        reduce using rule 26 (NUMERO -> FLOTANTE .)
    CORCHETEDER     reduce using rule 26 (NUMERO -> FLOTANTE .)
    DOSPUNTOS       reduce using rule 26 (NUMERO -> FLOTANTE .)


state 62

    (4) bloques -> bloque bloques .

    $end            reduce using rule 4 (bloques -> bloque bloques .)


state 63

    (25) NUMERO -> RESTA . ENTERO

    ENTERO          shift and go to state 64


state 64

    (25) NUMERO -> RESTA ENTERO .

    MAYORQUE        reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    MAYORIGUALQUE   reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    MENORQUE        reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    MENORIGUALQUE   reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    SUMA            reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    RESTA           reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    MULT            reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    DIVISION        reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    DIVISIONENTERA  reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    MODULO          reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    POTENCIA        reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    IDENTICO        reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    NOIDENTICO      reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    IGUAL           reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    PUNTOCOMA       reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    COMA            reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    OPERADOR        reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    AND             reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    OR              reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    IDENTIFICADOR   reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    COMENTARIO      reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    LLAVEDER        reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    PRINT           reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    ECHO            reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    FUNCTION        reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    NAMEFUNCTION    reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    RETURN          reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    WHILE           reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    FOR             reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    IF              reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    ELSEIF          reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    ELSE            reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    FOREACH         reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    SWITCH          reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    ARRAY_PUSH      reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    CADENA          reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    BOOLEAN         reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    ENTERO          reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    FLOTANTE        reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    $end            reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    PARENDER        reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    CORCHETEDER     reduce using rule 25 (NUMERO -> RESTA ENTERO .)
    DOSPUNTOS       reduce using rule 25 (NUMERO -> RESTA ENTERO .)


state 65

    (63) asignacion -> IDENTIFICADOR ASIGNAR . valor PUNTOCOMA
    (54) operaciones -> IDENTIFICADOR ASIGNAR . operaciones
    (51) longitud -> IDENTIFICADOR ASIGNAR . STRLEN PARENIZ valor PARENDER PUNTOCOMA
    (68) input -> IDENTIFICADOR ASIGNAR . FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA
    (74) funcion -> IDENTIFICADOR ASIGNAR . NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (108) queue -> IDENTIFICADOR ASIGNAR . NEW QUEUE PARENIZ PARENDER PUNTOCOMA
    (103) stack -> IDENTIFICADOR ASIGNAR . NEW STACK PARENIZ PARENDER PUNTOCOMA
    (116) array -> IDENTIFICADOR ASIGNAR . ARRAY PARENIZ PARENDER PUNTOCOMA
    (117) array -> IDENTIFICADOR ASIGNAR . ARRAY PARENIZ valores PARENDER PUNTOCOMA
    (118) array -> IDENTIFICADOR ASIGNAR . CORCHETEIZ valores CORCHETEDER PUNTOCOMA
    (119) array -> IDENTIFICADOR ASIGNAR . ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA
    (121) array -> IDENTIFICADOR ASIGNAR . IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA
    (27) valor -> . NUMERO
    (28) valor -> . CADENA
    (29) valor -> . BOOLEAN
    (30) valor -> . IDENTIFICADOR
    (52) operaciones -> . operacion
    (53) operaciones -> . operacion operadorAritmetico operaciones
    (54) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE
    (55) operacion -> . variable operadorAritmetico variable
    (38) variable -> . NUMERO
    (39) variable -> . IDENTIFICADOR

    STRLEN          shift and go to state 106
    FGETS           shift and go to state 107
    NAMEFUNCTION    shift and go to state 108
    NEW             shift and go to state 109
    ARRAY           shift and go to state 110
    CORCHETEIZ      shift and go to state 111
    ARRAY_SHIFT     shift and go to state 112
    IN_ARRAY        shift and go to state 113
    CADENA          shift and go to state 59
    BOOLEAN         shift and go to state 60
    IDENTIFICADOR   shift and go to state 103
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    valor                          shift and go to state 104
    operaciones                    shift and go to state 105
    NUMERO                         shift and go to state 114
    operacion                      shift and go to state 40
    variable                       shift and go to state 115

state 66

    (64) asignacion -> IDENTIFICADOR PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 64 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    COMENTARIO      reduce using rule 64 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    LLAVEDER        reduce using rule 64 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    PRINT           reduce using rule 64 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    ECHO            reduce using rule 64 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    FUNCTION        reduce using rule 64 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 64 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    RETURN          reduce using rule 64 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    WHILE           reduce using rule 64 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    FOR             reduce using rule 64 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    IF              reduce using rule 64 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    ELSEIF          reduce using rule 64 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    ELSE            reduce using rule 64 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    FOREACH         reduce using rule 64 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    SWITCH          reduce using rule 64 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 64 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    CADENA          reduce using rule 64 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    BOOLEAN         reduce using rule 64 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    ENTERO          reduce using rule 64 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    RESTA           reduce using rule 64 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    FLOTANTE        reduce using rule 64 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    $end            reduce using rule 64 (asignacion -> IDENTIFICADOR PUNTOCOMA .)


state 67

    (109) queue -> IDENTIFICADOR FLECHASIMPLE . ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
    (110) queue -> IDENTIFICADOR FLECHASIMPLE . COUNT PARENIZ PARENDER PUNTOCOMA
    (111) queue -> IDENTIFICADOR FLECHASIMPLE . DEQUEUE PARENIZ PARENDER PUNTOCOMA
    (112) queue -> IDENTIFICADOR FLECHASIMPLE . NEXT PARENIZ PARENDER PUNTOCOMA
    (113) queue -> IDENTIFICADOR FLECHASIMPLE . REWIND PARENIZ PARENDER PUNTOCOMA
    (114) queue -> IDENTIFICADOR FLECHASIMPLE . CURRENT PARENIZ PARENDER PUNTOCOMA
    (115) queue -> IDENTIFICADOR FLECHASIMPLE . VALID PARENIZ PARENDER
    (101) stack -> IDENTIFICADOR FLECHASIMPLE . PUSH PARENIZ valor PARENDER PUNTOCOMA
    (102) stack -> IDENTIFICADOR FLECHASIMPLE . POP PARENIZ PARENDER PUNTOCOMA
    (104) stack -> IDENTIFICADOR FLECHASIMPLE . NEXT PARENIZ PARENDER PUNTOCOMA
    (105) stack -> IDENTIFICADOR FLECHASIMPLE . REWIND PARENIZ PARENDER PUNTOCOMA
    (106) stack -> IDENTIFICADOR FLECHASIMPLE . CURRENT PARENIZ PARENDER PUNTOCOMA
    (107) stack -> IDENTIFICADOR FLECHASIMPLE . VALID PARENIZ PARENDER

    ENQUEUE         shift and go to state 116
    COUNT           shift and go to state 117
    DEQUEUE         shift and go to state 118
    NEXT            shift and go to state 119
    REWIND          shift and go to state 120
    CURRENT         shift and go to state 121
    VALID           shift and go to state 122
    PUSH            shift and go to state 123
    POP             shift and go to state 124


state 68

    (43) comparacion -> valor comparador . valor
    (27) valor -> . NUMERO
    (28) valor -> . CADENA
    (29) valor -> . BOOLEAN
    (30) valor -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 59
    BOOLEAN         shift and go to state 60
    IDENTIFICADOR   shift and go to state 83
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    valor                          shift and go to state 125
    NUMERO                         shift and go to state 82

state 69

    (35) comparador -> IDENTICO .

    CADENA          reduce using rule 35 (comparador -> IDENTICO .)
    BOOLEAN         reduce using rule 35 (comparador -> IDENTICO .)
    IDENTIFICADOR   reduce using rule 35 (comparador -> IDENTICO .)
    ENTERO          reduce using rule 35 (comparador -> IDENTICO .)
    RESTA           reduce using rule 35 (comparador -> IDENTICO .)
    FLOTANTE        reduce using rule 35 (comparador -> IDENTICO .)


state 70

    (36) comparador -> NOIDENTICO .

    CADENA          reduce using rule 36 (comparador -> NOIDENTICO .)
    BOOLEAN         reduce using rule 36 (comparador -> NOIDENTICO .)
    IDENTIFICADOR   reduce using rule 36 (comparador -> NOIDENTICO .)
    ENTERO          reduce using rule 36 (comparador -> NOIDENTICO .)
    RESTA           reduce using rule 36 (comparador -> NOIDENTICO .)
    FLOTANTE        reduce using rule 36 (comparador -> NOIDENTICO .)


state 71

    (37) comparador -> IGUAL .

    CADENA          reduce using rule 37 (comparador -> IGUAL .)
    BOOLEAN         reduce using rule 37 (comparador -> IGUAL .)
    IDENTIFICADOR   reduce using rule 37 (comparador -> IGUAL .)
    ENTERO          reduce using rule 37 (comparador -> IGUAL .)
    RESTA           reduce using rule 37 (comparador -> IGUAL .)
    FLOTANTE        reduce using rule 37 (comparador -> IGUAL .)


state 72

    (41) comparaciones -> comparacion operadores . comparaciones
    (40) comparaciones -> . comparacion
    (41) comparaciones -> . comparacion operadores comparaciones
    (42) comparacion -> . variable comparadorNum variable
    (43) comparacion -> . valor comparador valor
    (38) variable -> . NUMERO
    (39) variable -> . IDENTIFICADOR
    (27) valor -> . NUMERO
    (28) valor -> . CADENA
    (29) valor -> . BOOLEAN
    (30) valor -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 128
    CADENA          shift and go to state 59
    BOOLEAN         shift and go to state 60
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    comparacion                    shift and go to state 39
    comparaciones                  shift and go to state 126
    variable                       shift and go to state 127
    valor                          shift and go to state 26
    NUMERO                         shift and go to state 58

state 73

    (48) operadores -> OPERADOR .

    IDENTIFICADOR   reduce using rule 48 (operadores -> OPERADOR .)
    CADENA          reduce using rule 48 (operadores -> OPERADOR .)
    BOOLEAN         reduce using rule 48 (operadores -> OPERADOR .)
    ENTERO          reduce using rule 48 (operadores -> OPERADOR .)
    RESTA           reduce using rule 48 (operadores -> OPERADOR .)
    FLOTANTE        reduce using rule 48 (operadores -> OPERADOR .)


state 74

    (49) operadores -> AND .

    IDENTIFICADOR   reduce using rule 49 (operadores -> AND .)
    CADENA          reduce using rule 49 (operadores -> AND .)
    BOOLEAN         reduce using rule 49 (operadores -> AND .)
    ENTERO          reduce using rule 49 (operadores -> AND .)
    RESTA           reduce using rule 49 (operadores -> AND .)
    FLOTANTE        reduce using rule 49 (operadores -> AND .)


state 75

    (50) operadores -> OR .

    IDENTIFICADOR   reduce using rule 50 (operadores -> OR .)
    CADENA          reduce using rule 50 (operadores -> OR .)
    BOOLEAN         reduce using rule 50 (operadores -> OR .)
    ENTERO          reduce using rule 50 (operadores -> OR .)
    RESTA           reduce using rule 50 (operadores -> OR .)
    FLOTANTE        reduce using rule 50 (operadores -> OR .)


state 76

    (53) operaciones -> operacion operadorAritmetico . operaciones
    (52) operaciones -> . operacion
    (53) operaciones -> . operacion operadorAritmetico operaciones
    (54) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (55) operacion -> . variable operadorAritmetico variable
    (38) variable -> . NUMERO
    (39) variable -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 130
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    operacion                      shift and go to state 40
    operaciones                    shift and go to state 129
    variable                       shift and go to state 115
    NUMERO                         shift and go to state 131

state 77

    (57) operadorAritmetico -> RESTA .

    IDENTIFICADOR   reduce using rule 57 (operadorAritmetico -> RESTA .)
    ENTERO          reduce using rule 57 (operadorAritmetico -> RESTA .)
    RESTA           reduce using rule 57 (operadorAritmetico -> RESTA .)
    FLOTANTE        reduce using rule 57 (operadorAritmetico -> RESTA .)


state 78

    (92) elseif -> LLAVEDER ELSEIF . PARENIZ comparaciones PARENDER LLAVEIZ
    (93) elseif -> LLAVEDER ELSEIF . PARENIZ IDENTIFICADOR PARENDER LLAVEIZ

    PARENIZ         shift and go to state 132


state 79

    (96) else -> LLAVEDER ELSE . LLAVEIZ

    LLAVEIZ         shift and go to state 133


state 80

    (65) print -> PRINT PARENIZ . valores PARENDER PUNTOCOMA
    (67) print -> PRINT PARENIZ . PARENDER PUNTOCOMA
    (22) valores -> . valor
    (23) valores -> . valor COMA valores
    (27) valor -> . NUMERO
    (28) valor -> . CADENA
    (29) valor -> . BOOLEAN
    (30) valor -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    PARENDER        shift and go to state 135
    CADENA          shift and go to state 59
    BOOLEAN         shift and go to state 60
    IDENTIFICADOR   shift and go to state 83
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    valores                        shift and go to state 134
    valor                          shift and go to state 85
    NUMERO                         shift and go to state 82

state 81

    (66) print -> PRINT valor . PUNTOCOMA

    PUNTOCOMA       shift and go to state 136


state 82

    (27) valor -> NUMERO .

    PUNTOCOMA       reduce using rule 27 (valor -> NUMERO .)
    COMA            reduce using rule 27 (valor -> NUMERO .)
    OPERADOR        reduce using rule 27 (valor -> NUMERO .)
    AND             reduce using rule 27 (valor -> NUMERO .)
    OR              reduce using rule 27 (valor -> NUMERO .)
    IDENTIFICADOR   reduce using rule 27 (valor -> NUMERO .)
    COMENTARIO      reduce using rule 27 (valor -> NUMERO .)
    LLAVEDER        reduce using rule 27 (valor -> NUMERO .)
    PRINT           reduce using rule 27 (valor -> NUMERO .)
    ECHO            reduce using rule 27 (valor -> NUMERO .)
    FUNCTION        reduce using rule 27 (valor -> NUMERO .)
    NAMEFUNCTION    reduce using rule 27 (valor -> NUMERO .)
    RETURN          reduce using rule 27 (valor -> NUMERO .)
    WHILE           reduce using rule 27 (valor -> NUMERO .)
    FOR             reduce using rule 27 (valor -> NUMERO .)
    IF              reduce using rule 27 (valor -> NUMERO .)
    ELSEIF          reduce using rule 27 (valor -> NUMERO .)
    ELSE            reduce using rule 27 (valor -> NUMERO .)
    FOREACH         reduce using rule 27 (valor -> NUMERO .)
    SWITCH          reduce using rule 27 (valor -> NUMERO .)
    ARRAY_PUSH      reduce using rule 27 (valor -> NUMERO .)
    CADENA          reduce using rule 27 (valor -> NUMERO .)
    BOOLEAN         reduce using rule 27 (valor -> NUMERO .)
    ENTERO          reduce using rule 27 (valor -> NUMERO .)
    RESTA           reduce using rule 27 (valor -> NUMERO .)
    FLOTANTE        reduce using rule 27 (valor -> NUMERO .)
    $end            reduce using rule 27 (valor -> NUMERO .)
    PARENDER        reduce using rule 27 (valor -> NUMERO .)
    CORCHETEDER     reduce using rule 27 (valor -> NUMERO .)
    DOSPUNTOS       reduce using rule 27 (valor -> NUMERO .)


state 83

    (30) valor -> IDENTIFICADOR .

    PUNTOCOMA       reduce using rule 30 (valor -> IDENTIFICADOR .)
    COMA            reduce using rule 30 (valor -> IDENTIFICADOR .)
    OPERADOR        reduce using rule 30 (valor -> IDENTIFICADOR .)
    AND             reduce using rule 30 (valor -> IDENTIFICADOR .)
    OR              reduce using rule 30 (valor -> IDENTIFICADOR .)
    IDENTIFICADOR   reduce using rule 30 (valor -> IDENTIFICADOR .)
    COMENTARIO      reduce using rule 30 (valor -> IDENTIFICADOR .)
    LLAVEDER        reduce using rule 30 (valor -> IDENTIFICADOR .)
    PRINT           reduce using rule 30 (valor -> IDENTIFICADOR .)
    ECHO            reduce using rule 30 (valor -> IDENTIFICADOR .)
    FUNCTION        reduce using rule 30 (valor -> IDENTIFICADOR .)
    NAMEFUNCTION    reduce using rule 30 (valor -> IDENTIFICADOR .)
    RETURN          reduce using rule 30 (valor -> IDENTIFICADOR .)
    WHILE           reduce using rule 30 (valor -> IDENTIFICADOR .)
    FOR             reduce using rule 30 (valor -> IDENTIFICADOR .)
    IF              reduce using rule 30 (valor -> IDENTIFICADOR .)
    ELSEIF          reduce using rule 30 (valor -> IDENTIFICADOR .)
    ELSE            reduce using rule 30 (valor -> IDENTIFICADOR .)
    FOREACH         reduce using rule 30 (valor -> IDENTIFICADOR .)
    SWITCH          reduce using rule 30 (valor -> IDENTIFICADOR .)
    ARRAY_PUSH      reduce using rule 30 (valor -> IDENTIFICADOR .)
    CADENA          reduce using rule 30 (valor -> IDENTIFICADOR .)
    BOOLEAN         reduce using rule 30 (valor -> IDENTIFICADOR .)
    ENTERO          reduce using rule 30 (valor -> IDENTIFICADOR .)
    RESTA           reduce using rule 30 (valor -> IDENTIFICADOR .)
    FLOTANTE        reduce using rule 30 (valor -> IDENTIFICADOR .)
    $end            reduce using rule 30 (valor -> IDENTIFICADOR .)
    PARENDER        reduce using rule 30 (valor -> IDENTIFICADOR .)
    CORCHETEDER     reduce using rule 30 (valor -> IDENTIFICADOR .)
    DOSPUNTOS       reduce using rule 30 (valor -> IDENTIFICADOR .)


state 84

    (69) echo -> ECHO valores . PUNTOCOMA

    PUNTOCOMA       shift and go to state 137


state 85

    (22) valores -> valor .
    (23) valores -> valor . COMA valores

    PUNTOCOMA       reduce using rule 22 (valores -> valor .)
    PARENDER        reduce using rule 22 (valores -> valor .)
    CORCHETEDER     reduce using rule 22 (valores -> valor .)
    COMA            shift and go to state 138


state 86

    (70) funcion -> FUNCTION NAMEFUNCTION . PARENIZ parametro PARENDER LLAVEIZ

    PARENIZ         shift and go to state 139


state 87

    (73) funcion -> NAMEFUNCTION PARENIZ . parametro PARENDER PUNTOCOMA
    (71) parametro -> . IDENTIFICADOR
    (72) parametro -> . IDENTIFICADOR COMA parametro

    IDENTIFICADOR   shift and go to state 141

    parametro                      shift and go to state 140

state 88

    (75) return -> RETURN IDENTIFICADOR . PUNTOCOMA

    PUNTOCOMA       shift and go to state 142


state 89

    (83) while -> WHILE PARENIZ . comparaciones PARENDER LLAVEIZ
    (40) comparaciones -> . comparacion
    (41) comparaciones -> . comparacion operadores comparaciones
    (42) comparacion -> . variable comparadorNum variable
    (43) comparacion -> . valor comparador valor
    (38) variable -> . NUMERO
    (39) variable -> . IDENTIFICADOR
    (27) valor -> . NUMERO
    (28) valor -> . CADENA
    (29) valor -> . BOOLEAN
    (30) valor -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 128
    CADENA          shift and go to state 59
    BOOLEAN         shift and go to state 60
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    comparaciones                  shift and go to state 143
    comparacion                    shift and go to state 39
    variable                       shift and go to state 127
    valor                          shift and go to state 26
    NUMERO                         shift and go to state 58

state 90

    (84) for -> FOR PARENIZ . IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 144


state 91

    (90) if -> IF PARENIZ . comparaciones PARENDER LLAVEIZ
    (91) if -> IF PARENIZ . IDENTIFICADOR PARENDER LLAVEIZ
    (40) comparaciones -> . comparacion
    (41) comparaciones -> . comparacion operadores comparaciones
    (42) comparacion -> . variable comparadorNum variable
    (43) comparacion -> . valor comparador valor
    (38) variable -> . NUMERO
    (39) variable -> . IDENTIFICADOR
    (27) valor -> . NUMERO
    (28) valor -> . CADENA
    (29) valor -> . BOOLEAN
    (30) valor -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 146
    CADENA          shift and go to state 59
    BOOLEAN         shift and go to state 60
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    comparaciones                  shift and go to state 145
    comparacion                    shift and go to state 39
    variable                       shift and go to state 127
    valor                          shift and go to state 26
    NUMERO                         shift and go to state 58

state 92

    (94) elseif -> ELSEIF PARENIZ . comparaciones PARENDER LLAVEIZ
    (95) elseif -> ELSEIF PARENIZ . IDENTIFICADOR PARENDER LLAVEIZ
    (40) comparaciones -> . comparacion
    (41) comparaciones -> . comparacion operadores comparaciones
    (42) comparacion -> . variable comparadorNum variable
    (43) comparacion -> . valor comparador valor
    (38) variable -> . NUMERO
    (39) variable -> . IDENTIFICADOR
    (27) valor -> . NUMERO
    (28) valor -> . CADENA
    (29) valor -> . BOOLEAN
    (30) valor -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 148
    CADENA          shift and go to state 59
    BOOLEAN         shift and go to state 60
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    comparaciones                  shift and go to state 147
    comparacion                    shift and go to state 39
    variable                       shift and go to state 127
    valor                          shift and go to state 26
    NUMERO                         shift and go to state 58

state 93

    (97) else -> ELSE LLAVEIZ .

    IDENTIFICADOR   reduce using rule 97 (else -> ELSE LLAVEIZ .)
    COMENTARIO      reduce using rule 97 (else -> ELSE LLAVEIZ .)
    LLAVEDER        reduce using rule 97 (else -> ELSE LLAVEIZ .)
    PRINT           reduce using rule 97 (else -> ELSE LLAVEIZ .)
    ECHO            reduce using rule 97 (else -> ELSE LLAVEIZ .)
    FUNCTION        reduce using rule 97 (else -> ELSE LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 97 (else -> ELSE LLAVEIZ .)
    RETURN          reduce using rule 97 (else -> ELSE LLAVEIZ .)
    WHILE           reduce using rule 97 (else -> ELSE LLAVEIZ .)
    FOR             reduce using rule 97 (else -> ELSE LLAVEIZ .)
    IF              reduce using rule 97 (else -> ELSE LLAVEIZ .)
    ELSEIF          reduce using rule 97 (else -> ELSE LLAVEIZ .)
    ELSE            reduce using rule 97 (else -> ELSE LLAVEIZ .)
    FOREACH         reduce using rule 97 (else -> ELSE LLAVEIZ .)
    SWITCH          reduce using rule 97 (else -> ELSE LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 97 (else -> ELSE LLAVEIZ .)
    CADENA          reduce using rule 97 (else -> ELSE LLAVEIZ .)
    BOOLEAN         reduce using rule 97 (else -> ELSE LLAVEIZ .)
    ENTERO          reduce using rule 97 (else -> ELSE LLAVEIZ .)
    RESTA           reduce using rule 97 (else -> ELSE LLAVEIZ .)
    FLOTANTE        reduce using rule 97 (else -> ELSE LLAVEIZ .)
    $end            reduce using rule 97 (else -> ELSE LLAVEIZ .)


state 94

    (85) foreach -> FOREACH PARENIZ . IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 149


state 95

    (86) switch -> SWITCH PARENIZ . valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER
    (27) valor -> . NUMERO
    (28) valor -> . CADENA
    (29) valor -> . BOOLEAN
    (30) valor -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 59
    BOOLEAN         shift and go to state 60
    IDENTIFICADOR   shift and go to state 83
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    valor                          shift and go to state 150
    NUMERO                         shift and go to state 82

state 96

    (120) array -> ARRAY_PUSH PARENIZ . IDENTIFICADOR PARENDER PUNTOCOMA

    IDENTIFICADOR   shift and go to state 151


state 97

    (42) comparacion -> variable comparadorNum . variable
    (38) variable -> . NUMERO
    (39) variable -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 153
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    variable                       shift and go to state 152
    NUMERO                         shift and go to state 131

state 98

    (55) operacion -> variable operadorAritmetico . variable
    (38) variable -> . NUMERO
    (39) variable -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 153
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    variable                       shift and go to state 154
    NUMERO                         shift and go to state 131

state 99

    (31) comparadorNum -> MAYORQUE .

    IDENTIFICADOR   reduce using rule 31 (comparadorNum -> MAYORQUE .)
    ENTERO          reduce using rule 31 (comparadorNum -> MAYORQUE .)
    RESTA           reduce using rule 31 (comparadorNum -> MAYORQUE .)
    FLOTANTE        reduce using rule 31 (comparadorNum -> MAYORQUE .)


state 100

    (32) comparadorNum -> MAYORIGUALQUE .

    IDENTIFICADOR   reduce using rule 32 (comparadorNum -> MAYORIGUALQUE .)
    ENTERO          reduce using rule 32 (comparadorNum -> MAYORIGUALQUE .)
    RESTA           reduce using rule 32 (comparadorNum -> MAYORIGUALQUE .)
    FLOTANTE        reduce using rule 32 (comparadorNum -> MAYORIGUALQUE .)


state 101

    (33) comparadorNum -> MENORQUE .

    IDENTIFICADOR   reduce using rule 33 (comparadorNum -> MENORQUE .)
    ENTERO          reduce using rule 33 (comparadorNum -> MENORQUE .)
    RESTA           reduce using rule 33 (comparadorNum -> MENORQUE .)
    FLOTANTE        reduce using rule 33 (comparadorNum -> MENORQUE .)


state 102

    (34) comparadorNum -> MENORIGUALQUE .

    IDENTIFICADOR   reduce using rule 34 (comparadorNum -> MENORIGUALQUE .)
    ENTERO          reduce using rule 34 (comparadorNum -> MENORIGUALQUE .)
    RESTA           reduce using rule 34 (comparadorNum -> MENORIGUALQUE .)
    FLOTANTE        reduce using rule 34 (comparadorNum -> MENORIGUALQUE .)


state 103

    (30) valor -> IDENTIFICADOR .
    (54) operaciones -> IDENTIFICADOR . ASIGNAR operaciones
    (39) variable -> IDENTIFICADOR .

    PUNTOCOMA       reduce using rule 30 (valor -> IDENTIFICADOR .)
    ASIGNAR         shift and go to state 155
    SUMA            reduce using rule 39 (variable -> IDENTIFICADOR .)
    RESTA           reduce using rule 39 (variable -> IDENTIFICADOR .)
    MULT            reduce using rule 39 (variable -> IDENTIFICADOR .)
    DIVISION        reduce using rule 39 (variable -> IDENTIFICADOR .)
    DIVISIONENTERA  reduce using rule 39 (variable -> IDENTIFICADOR .)
    MODULO          reduce using rule 39 (variable -> IDENTIFICADOR .)
    POTENCIA        reduce using rule 39 (variable -> IDENTIFICADOR .)


state 104

    (63) asignacion -> IDENTIFICADOR ASIGNAR valor . PUNTOCOMA

    PUNTOCOMA       shift and go to state 156


state 105

    (54) operaciones -> IDENTIFICADOR ASIGNAR operaciones .

    IDENTIFICADOR   reduce using rule 54 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    COMENTARIO      reduce using rule 54 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    LLAVEDER        reduce using rule 54 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    PRINT           reduce using rule 54 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    ECHO            reduce using rule 54 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    FUNCTION        reduce using rule 54 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    NAMEFUNCTION    reduce using rule 54 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    RETURN          reduce using rule 54 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    WHILE           reduce using rule 54 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    FOR             reduce using rule 54 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    IF              reduce using rule 54 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    ELSEIF          reduce using rule 54 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    ELSE            reduce using rule 54 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    FOREACH         reduce using rule 54 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    SWITCH          reduce using rule 54 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    ARRAY_PUSH      reduce using rule 54 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    CADENA          reduce using rule 54 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    BOOLEAN         reduce using rule 54 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    ENTERO          reduce using rule 54 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    RESTA           reduce using rule 54 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    FLOTANTE        reduce using rule 54 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    $end            reduce using rule 54 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)


state 106

    (51) longitud -> IDENTIFICADOR ASIGNAR STRLEN . PARENIZ valor PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 157


state 107

    (68) input -> IDENTIFICADOR ASIGNAR FGETS . PARENIZ FLUJOS PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 158


state 108

    (74) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION . PARENIZ parametro PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 159


state 109

    (108) queue -> IDENTIFICADOR ASIGNAR NEW . QUEUE PARENIZ PARENDER PUNTOCOMA
    (103) stack -> IDENTIFICADOR ASIGNAR NEW . STACK PARENIZ PARENDER PUNTOCOMA

    QUEUE           shift and go to state 160
    STACK           shift and go to state 161


state 110

    (116) array -> IDENTIFICADOR ASIGNAR ARRAY . PARENIZ PARENDER PUNTOCOMA
    (117) array -> IDENTIFICADOR ASIGNAR ARRAY . PARENIZ valores PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 162


state 111

    (118) array -> IDENTIFICADOR ASIGNAR CORCHETEIZ . valores CORCHETEDER PUNTOCOMA
    (22) valores -> . valor
    (23) valores -> . valor COMA valores
    (27) valor -> . NUMERO
    (28) valor -> . CADENA
    (29) valor -> . BOOLEAN
    (30) valor -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 59
    BOOLEAN         shift and go to state 60
    IDENTIFICADOR   shift and go to state 83
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    valores                        shift and go to state 163
    valor                          shift and go to state 85
    NUMERO                         shift and go to state 82

state 112

    (119) array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT . PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 164


state 113

    (121) array -> IDENTIFICADOR ASIGNAR IN_ARRAY . PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 165


state 114

    (27) valor -> NUMERO .
    (38) variable -> NUMERO .

    PUNTOCOMA       reduce using rule 27 (valor -> NUMERO .)
    SUMA            reduce using rule 38 (variable -> NUMERO .)
    RESTA           reduce using rule 38 (variable -> NUMERO .)
    MULT            reduce using rule 38 (variable -> NUMERO .)
    DIVISION        reduce using rule 38 (variable -> NUMERO .)
    DIVISIONENTERA  reduce using rule 38 (variable -> NUMERO .)
    MODULO          reduce using rule 38 (variable -> NUMERO .)
    POTENCIA        reduce using rule 38 (variable -> NUMERO .)


state 115

    (55) operacion -> variable . operadorAritmetico variable
    (56) operadorAritmetico -> . SUMA
    (57) operadorAritmetico -> . RESTA
    (58) operadorAritmetico -> . MULT
    (59) operadorAritmetico -> . DIVISION
    (60) operadorAritmetico -> . DIVISIONENTERA
    (61) operadorAritmetico -> . MODULO
    (62) operadorAritmetico -> . POTENCIA

    SUMA            shift and go to state 5
    RESTA           shift and go to state 77
    MULT            shift and go to state 7
    DIVISION        shift and go to state 8
    DIVISIONENTERA  shift and go to state 9
    MODULO          shift and go to state 10
    POTENCIA        shift and go to state 11

    operadorAritmetico             shift and go to state 98

state 116

    (109) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE . PARENIZ valor PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 166


state 117

    (110) queue -> IDENTIFICADOR FLECHASIMPLE COUNT . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 167


state 118

    (111) queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 168


state 119

    (112) queue -> IDENTIFICADOR FLECHASIMPLE NEXT . PARENIZ PARENDER PUNTOCOMA
    (104) stack -> IDENTIFICADOR FLECHASIMPLE NEXT . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 169


state 120

    (113) queue -> IDENTIFICADOR FLECHASIMPLE REWIND . PARENIZ PARENDER PUNTOCOMA
    (105) stack -> IDENTIFICADOR FLECHASIMPLE REWIND . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 170


state 121

    (114) queue -> IDENTIFICADOR FLECHASIMPLE CURRENT . PARENIZ PARENDER PUNTOCOMA
    (106) stack -> IDENTIFICADOR FLECHASIMPLE CURRENT . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 171


state 122

    (115) queue -> IDENTIFICADOR FLECHASIMPLE VALID . PARENIZ PARENDER
    (107) stack -> IDENTIFICADOR FLECHASIMPLE VALID . PARENIZ PARENDER

    PARENIZ         shift and go to state 172


state 123

    (101) stack -> IDENTIFICADOR FLECHASIMPLE PUSH . PARENIZ valor PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 173


state 124

    (102) stack -> IDENTIFICADOR FLECHASIMPLE POP . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 174


state 125

    (43) comparacion -> valor comparador valor .

    OPERADOR        reduce using rule 43 (comparacion -> valor comparador valor .)
    AND             reduce using rule 43 (comparacion -> valor comparador valor .)
    OR              reduce using rule 43 (comparacion -> valor comparador valor .)
    IDENTIFICADOR   reduce using rule 43 (comparacion -> valor comparador valor .)
    COMENTARIO      reduce using rule 43 (comparacion -> valor comparador valor .)
    LLAVEDER        reduce using rule 43 (comparacion -> valor comparador valor .)
    PRINT           reduce using rule 43 (comparacion -> valor comparador valor .)
    ECHO            reduce using rule 43 (comparacion -> valor comparador valor .)
    FUNCTION        reduce using rule 43 (comparacion -> valor comparador valor .)
    NAMEFUNCTION    reduce using rule 43 (comparacion -> valor comparador valor .)
    RETURN          reduce using rule 43 (comparacion -> valor comparador valor .)
    WHILE           reduce using rule 43 (comparacion -> valor comparador valor .)
    FOR             reduce using rule 43 (comparacion -> valor comparador valor .)
    IF              reduce using rule 43 (comparacion -> valor comparador valor .)
    ELSEIF          reduce using rule 43 (comparacion -> valor comparador valor .)
    ELSE            reduce using rule 43 (comparacion -> valor comparador valor .)
    FOREACH         reduce using rule 43 (comparacion -> valor comparador valor .)
    SWITCH          reduce using rule 43 (comparacion -> valor comparador valor .)
    ARRAY_PUSH      reduce using rule 43 (comparacion -> valor comparador valor .)
    CADENA          reduce using rule 43 (comparacion -> valor comparador valor .)
    BOOLEAN         reduce using rule 43 (comparacion -> valor comparador valor .)
    ENTERO          reduce using rule 43 (comparacion -> valor comparador valor .)
    RESTA           reduce using rule 43 (comparacion -> valor comparador valor .)
    FLOTANTE        reduce using rule 43 (comparacion -> valor comparador valor .)
    $end            reduce using rule 43 (comparacion -> valor comparador valor .)
    PARENDER        reduce using rule 43 (comparacion -> valor comparador valor .)


state 126

    (41) comparaciones -> comparacion operadores comparaciones .

    IDENTIFICADOR   reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)
    COMENTARIO      reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)
    LLAVEDER        reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)
    PRINT           reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)
    ECHO            reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)
    FUNCTION        reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)
    NAMEFUNCTION    reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)
    RETURN          reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)
    WHILE           reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)
    FOR             reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)
    IF              reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)
    ELSEIF          reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)
    ELSE            reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)
    FOREACH         reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)
    SWITCH          reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)
    ARRAY_PUSH      reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)
    CADENA          reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)
    BOOLEAN         reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)
    ENTERO          reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)
    RESTA           reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)
    FLOTANTE        reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)
    $end            reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)
    PARENDER        reduce using rule 41 (comparaciones -> comparacion operadores comparaciones .)


state 127

    (42) comparacion -> variable . comparadorNum variable
    (31) comparadorNum -> . MAYORQUE
    (32) comparadorNum -> . MAYORIGUALQUE
    (33) comparadorNum -> . MENORQUE
    (34) comparadorNum -> . MENORIGUALQUE

    MAYORQUE        shift and go to state 99
    MAYORIGUALQUE   shift and go to state 100
    MENORQUE        shift and go to state 101
    MENORIGUALQUE   shift and go to state 102

    comparadorNum                  shift and go to state 97

state 128

    (39) variable -> IDENTIFICADOR .
    (30) valor -> IDENTIFICADOR .

    MAYORQUE        reduce using rule 39 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 39 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 39 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 39 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 30 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 30 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 30 (valor -> IDENTIFICADOR .)


state 129

    (53) operaciones -> operacion operadorAritmetico operaciones .

    IDENTIFICADOR   reduce using rule 53 (operaciones -> operacion operadorAritmetico operaciones .)
    COMENTARIO      reduce using rule 53 (operaciones -> operacion operadorAritmetico operaciones .)
    LLAVEDER        reduce using rule 53 (operaciones -> operacion operadorAritmetico operaciones .)
    PRINT           reduce using rule 53 (operaciones -> operacion operadorAritmetico operaciones .)
    ECHO            reduce using rule 53 (operaciones -> operacion operadorAritmetico operaciones .)
    FUNCTION        reduce using rule 53 (operaciones -> operacion operadorAritmetico operaciones .)
    NAMEFUNCTION    reduce using rule 53 (operaciones -> operacion operadorAritmetico operaciones .)
    RETURN          reduce using rule 53 (operaciones -> operacion operadorAritmetico operaciones .)
    WHILE           reduce using rule 53 (operaciones -> operacion operadorAritmetico operaciones .)
    FOR             reduce using rule 53 (operaciones -> operacion operadorAritmetico operaciones .)
    IF              reduce using rule 53 (operaciones -> operacion operadorAritmetico operaciones .)
    ELSEIF          reduce using rule 53 (operaciones -> operacion operadorAritmetico operaciones .)
    ELSE            reduce using rule 53 (operaciones -> operacion operadorAritmetico operaciones .)
    FOREACH         reduce using rule 53 (operaciones -> operacion operadorAritmetico operaciones .)
    SWITCH          reduce using rule 53 (operaciones -> operacion operadorAritmetico operaciones .)
    ARRAY_PUSH      reduce using rule 53 (operaciones -> operacion operadorAritmetico operaciones .)
    CADENA          reduce using rule 53 (operaciones -> operacion operadorAritmetico operaciones .)
    BOOLEAN         reduce using rule 53 (operaciones -> operacion operadorAritmetico operaciones .)
    ENTERO          reduce using rule 53 (operaciones -> operacion operadorAritmetico operaciones .)
    RESTA           reduce using rule 53 (operaciones -> operacion operadorAritmetico operaciones .)
    FLOTANTE        reduce using rule 53 (operaciones -> operacion operadorAritmetico operaciones .)
    $end            reduce using rule 53 (operaciones -> operacion operadorAritmetico operaciones .)


state 130

    (54) operaciones -> IDENTIFICADOR . ASIGNAR operaciones
    (39) variable -> IDENTIFICADOR .

    ASIGNAR         shift and go to state 155
    SUMA            reduce using rule 39 (variable -> IDENTIFICADOR .)
    RESTA           reduce using rule 39 (variable -> IDENTIFICADOR .)
    MULT            reduce using rule 39 (variable -> IDENTIFICADOR .)
    DIVISION        reduce using rule 39 (variable -> IDENTIFICADOR .)
    DIVISIONENTERA  reduce using rule 39 (variable -> IDENTIFICADOR .)
    MODULO          reduce using rule 39 (variable -> IDENTIFICADOR .)
    POTENCIA        reduce using rule 39 (variable -> IDENTIFICADOR .)


state 131

    (38) variable -> NUMERO .

    SUMA            reduce using rule 38 (variable -> NUMERO .)
    RESTA           reduce using rule 38 (variable -> NUMERO .)
    MULT            reduce using rule 38 (variable -> NUMERO .)
    DIVISION        reduce using rule 38 (variable -> NUMERO .)
    DIVISIONENTERA  reduce using rule 38 (variable -> NUMERO .)
    MODULO          reduce using rule 38 (variable -> NUMERO .)
    POTENCIA        reduce using rule 38 (variable -> NUMERO .)
    OPERADOR        reduce using rule 38 (variable -> NUMERO .)
    AND             reduce using rule 38 (variable -> NUMERO .)
    OR              reduce using rule 38 (variable -> NUMERO .)
    IDENTIFICADOR   reduce using rule 38 (variable -> NUMERO .)
    COMENTARIO      reduce using rule 38 (variable -> NUMERO .)
    LLAVEDER        reduce using rule 38 (variable -> NUMERO .)
    PRINT           reduce using rule 38 (variable -> NUMERO .)
    ECHO            reduce using rule 38 (variable -> NUMERO .)
    FUNCTION        reduce using rule 38 (variable -> NUMERO .)
    NAMEFUNCTION    reduce using rule 38 (variable -> NUMERO .)
    RETURN          reduce using rule 38 (variable -> NUMERO .)
    WHILE           reduce using rule 38 (variable -> NUMERO .)
    FOR             reduce using rule 38 (variable -> NUMERO .)
    IF              reduce using rule 38 (variable -> NUMERO .)
    ELSEIF          reduce using rule 38 (variable -> NUMERO .)
    ELSE            reduce using rule 38 (variable -> NUMERO .)
    FOREACH         reduce using rule 38 (variable -> NUMERO .)
    SWITCH          reduce using rule 38 (variable -> NUMERO .)
    ARRAY_PUSH      reduce using rule 38 (variable -> NUMERO .)
    CADENA          reduce using rule 38 (variable -> NUMERO .)
    BOOLEAN         reduce using rule 38 (variable -> NUMERO .)
    ENTERO          reduce using rule 38 (variable -> NUMERO .)
    FLOTANTE        reduce using rule 38 (variable -> NUMERO .)
    $end            reduce using rule 38 (variable -> NUMERO .)
    PARENDER        reduce using rule 38 (variable -> NUMERO .)


state 132

    (92) elseif -> LLAVEDER ELSEIF PARENIZ . comparaciones PARENDER LLAVEIZ
    (93) elseif -> LLAVEDER ELSEIF PARENIZ . IDENTIFICADOR PARENDER LLAVEIZ
    (40) comparaciones -> . comparacion
    (41) comparaciones -> . comparacion operadores comparaciones
    (42) comparacion -> . variable comparadorNum variable
    (43) comparacion -> . valor comparador valor
    (38) variable -> . NUMERO
    (39) variable -> . IDENTIFICADOR
    (27) valor -> . NUMERO
    (28) valor -> . CADENA
    (29) valor -> . BOOLEAN
    (30) valor -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 176
    CADENA          shift and go to state 59
    BOOLEAN         shift and go to state 60
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    comparaciones                  shift and go to state 175
    comparacion                    shift and go to state 39
    variable                       shift and go to state 127
    valor                          shift and go to state 26
    NUMERO                         shift and go to state 58

state 133

    (96) else -> LLAVEDER ELSE LLAVEIZ .

    IDENTIFICADOR   reduce using rule 96 (else -> LLAVEDER ELSE LLAVEIZ .)
    COMENTARIO      reduce using rule 96 (else -> LLAVEDER ELSE LLAVEIZ .)
    LLAVEDER        reduce using rule 96 (else -> LLAVEDER ELSE LLAVEIZ .)
    PRINT           reduce using rule 96 (else -> LLAVEDER ELSE LLAVEIZ .)
    ECHO            reduce using rule 96 (else -> LLAVEDER ELSE LLAVEIZ .)
    FUNCTION        reduce using rule 96 (else -> LLAVEDER ELSE LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 96 (else -> LLAVEDER ELSE LLAVEIZ .)
    RETURN          reduce using rule 96 (else -> LLAVEDER ELSE LLAVEIZ .)
    WHILE           reduce using rule 96 (else -> LLAVEDER ELSE LLAVEIZ .)
    FOR             reduce using rule 96 (else -> LLAVEDER ELSE LLAVEIZ .)
    IF              reduce using rule 96 (else -> LLAVEDER ELSE LLAVEIZ .)
    ELSEIF          reduce using rule 96 (else -> LLAVEDER ELSE LLAVEIZ .)
    ELSE            reduce using rule 96 (else -> LLAVEDER ELSE LLAVEIZ .)
    FOREACH         reduce using rule 96 (else -> LLAVEDER ELSE LLAVEIZ .)
    SWITCH          reduce using rule 96 (else -> LLAVEDER ELSE LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 96 (else -> LLAVEDER ELSE LLAVEIZ .)
    CADENA          reduce using rule 96 (else -> LLAVEDER ELSE LLAVEIZ .)
    BOOLEAN         reduce using rule 96 (else -> LLAVEDER ELSE LLAVEIZ .)
    ENTERO          reduce using rule 96 (else -> LLAVEDER ELSE LLAVEIZ .)
    RESTA           reduce using rule 96 (else -> LLAVEDER ELSE LLAVEIZ .)
    FLOTANTE        reduce using rule 96 (else -> LLAVEDER ELSE LLAVEIZ .)
    $end            reduce using rule 96 (else -> LLAVEDER ELSE LLAVEIZ .)


state 134

    (65) print -> PRINT PARENIZ valores . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 177


state 135

    (67) print -> PRINT PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 178


state 136

    (66) print -> PRINT valor PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 66 (print -> PRINT valor PUNTOCOMA .)
    COMENTARIO      reduce using rule 66 (print -> PRINT valor PUNTOCOMA .)
    LLAVEDER        reduce using rule 66 (print -> PRINT valor PUNTOCOMA .)
    PRINT           reduce using rule 66 (print -> PRINT valor PUNTOCOMA .)
    ECHO            reduce using rule 66 (print -> PRINT valor PUNTOCOMA .)
    FUNCTION        reduce using rule 66 (print -> PRINT valor PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 66 (print -> PRINT valor PUNTOCOMA .)
    RETURN          reduce using rule 66 (print -> PRINT valor PUNTOCOMA .)
    WHILE           reduce using rule 66 (print -> PRINT valor PUNTOCOMA .)
    FOR             reduce using rule 66 (print -> PRINT valor PUNTOCOMA .)
    IF              reduce using rule 66 (print -> PRINT valor PUNTOCOMA .)
    ELSEIF          reduce using rule 66 (print -> PRINT valor PUNTOCOMA .)
    ELSE            reduce using rule 66 (print -> PRINT valor PUNTOCOMA .)
    FOREACH         reduce using rule 66 (print -> PRINT valor PUNTOCOMA .)
    SWITCH          reduce using rule 66 (print -> PRINT valor PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 66 (print -> PRINT valor PUNTOCOMA .)
    CADENA          reduce using rule 66 (print -> PRINT valor PUNTOCOMA .)
    BOOLEAN         reduce using rule 66 (print -> PRINT valor PUNTOCOMA .)
    ENTERO          reduce using rule 66 (print -> PRINT valor PUNTOCOMA .)
    RESTA           reduce using rule 66 (print -> PRINT valor PUNTOCOMA .)
    FLOTANTE        reduce using rule 66 (print -> PRINT valor PUNTOCOMA .)
    $end            reduce using rule 66 (print -> PRINT valor PUNTOCOMA .)


state 137

    (69) echo -> ECHO valores PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 69 (echo -> ECHO valores PUNTOCOMA .)
    COMENTARIO      reduce using rule 69 (echo -> ECHO valores PUNTOCOMA .)
    LLAVEDER        reduce using rule 69 (echo -> ECHO valores PUNTOCOMA .)
    PRINT           reduce using rule 69 (echo -> ECHO valores PUNTOCOMA .)
    ECHO            reduce using rule 69 (echo -> ECHO valores PUNTOCOMA .)
    FUNCTION        reduce using rule 69 (echo -> ECHO valores PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 69 (echo -> ECHO valores PUNTOCOMA .)
    RETURN          reduce using rule 69 (echo -> ECHO valores PUNTOCOMA .)
    WHILE           reduce using rule 69 (echo -> ECHO valores PUNTOCOMA .)
    FOR             reduce using rule 69 (echo -> ECHO valores PUNTOCOMA .)
    IF              reduce using rule 69 (echo -> ECHO valores PUNTOCOMA .)
    ELSEIF          reduce using rule 69 (echo -> ECHO valores PUNTOCOMA .)
    ELSE            reduce using rule 69 (echo -> ECHO valores PUNTOCOMA .)
    FOREACH         reduce using rule 69 (echo -> ECHO valores PUNTOCOMA .)
    SWITCH          reduce using rule 69 (echo -> ECHO valores PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 69 (echo -> ECHO valores PUNTOCOMA .)
    CADENA          reduce using rule 69 (echo -> ECHO valores PUNTOCOMA .)
    BOOLEAN         reduce using rule 69 (echo -> ECHO valores PUNTOCOMA .)
    ENTERO          reduce using rule 69 (echo -> ECHO valores PUNTOCOMA .)
    RESTA           reduce using rule 69 (echo -> ECHO valores PUNTOCOMA .)
    FLOTANTE        reduce using rule 69 (echo -> ECHO valores PUNTOCOMA .)
    $end            reduce using rule 69 (echo -> ECHO valores PUNTOCOMA .)
    BREAK           reduce using rule 69 (echo -> ECHO valores PUNTOCOMA .)


state 138

    (23) valores -> valor COMA . valores
    (22) valores -> . valor
    (23) valores -> . valor COMA valores
    (27) valor -> . NUMERO
    (28) valor -> . CADENA
    (29) valor -> . BOOLEAN
    (30) valor -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 59
    BOOLEAN         shift and go to state 60
    IDENTIFICADOR   shift and go to state 83
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    valor                          shift and go to state 85
    valores                        shift and go to state 179
    NUMERO                         shift and go to state 82

state 139

    (70) funcion -> FUNCTION NAMEFUNCTION PARENIZ . parametro PARENDER LLAVEIZ
    (71) parametro -> . IDENTIFICADOR
    (72) parametro -> . IDENTIFICADOR COMA parametro

    IDENTIFICADOR   shift and go to state 141

    parametro                      shift and go to state 180

state 140

    (73) funcion -> NAMEFUNCTION PARENIZ parametro . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 181


state 141

    (71) parametro -> IDENTIFICADOR .
    (72) parametro -> IDENTIFICADOR . COMA parametro

    PARENDER        reduce using rule 71 (parametro -> IDENTIFICADOR .)
    COMA            shift and go to state 182


state 142

    (75) return -> RETURN IDENTIFICADOR PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 75 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    COMENTARIO      reduce using rule 75 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    LLAVEDER        reduce using rule 75 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    PRINT           reduce using rule 75 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    ECHO            reduce using rule 75 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    FUNCTION        reduce using rule 75 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 75 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    RETURN          reduce using rule 75 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    WHILE           reduce using rule 75 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    FOR             reduce using rule 75 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    IF              reduce using rule 75 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    ELSEIF          reduce using rule 75 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    ELSE            reduce using rule 75 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    FOREACH         reduce using rule 75 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    SWITCH          reduce using rule 75 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 75 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    CADENA          reduce using rule 75 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    BOOLEAN         reduce using rule 75 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    ENTERO          reduce using rule 75 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    RESTA           reduce using rule 75 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    FLOTANTE        reduce using rule 75 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    $end            reduce using rule 75 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)


state 143

    (83) while -> WHILE PARENIZ comparaciones . PARENDER LLAVEIZ

    PARENDER        shift and go to state 183


state 144

    (84) for -> FOR PARENIZ IDENTIFICADOR . ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    ASIGNAR         shift and go to state 184


state 145

    (90) if -> IF PARENIZ comparaciones . PARENDER LLAVEIZ

    PARENDER        shift and go to state 185


state 146

    (91) if -> IF PARENIZ IDENTIFICADOR . PARENDER LLAVEIZ
    (39) variable -> IDENTIFICADOR .
    (30) valor -> IDENTIFICADOR .

    PARENDER        shift and go to state 186
    MAYORQUE        reduce using rule 39 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 39 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 39 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 39 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 30 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 30 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 30 (valor -> IDENTIFICADOR .)


state 147

    (94) elseif -> ELSEIF PARENIZ comparaciones . PARENDER LLAVEIZ

    PARENDER        shift and go to state 187


state 148

    (95) elseif -> ELSEIF PARENIZ IDENTIFICADOR . PARENDER LLAVEIZ
    (39) variable -> IDENTIFICADOR .
    (30) valor -> IDENTIFICADOR .

    PARENDER        shift and go to state 188
    MAYORQUE        reduce using rule 39 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 39 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 39 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 39 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 30 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 30 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 30 (valor -> IDENTIFICADOR .)


state 149

    (85) foreach -> FOREACH PARENIZ IDENTIFICADOR . AS IDENTIFICADOR PARENDER LLAVEIZ

    AS              shift and go to state 189


state 150

    (86) switch -> SWITCH PARENIZ valor . PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER

    PARENDER        shift and go to state 190


state 151

    (120) array -> ARRAY_PUSH PARENIZ IDENTIFICADOR . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 191


state 152

    (42) comparacion -> variable comparadorNum variable .

    OPERADOR        reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    AND             reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    OR              reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    IDENTIFICADOR   reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    COMENTARIO      reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    LLAVEDER        reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    PRINT           reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    ECHO            reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    FUNCTION        reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    NAMEFUNCTION    reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    RETURN          reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    WHILE           reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    FOR             reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    IF              reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    ELSEIF          reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    ELSE            reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    FOREACH         reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    SWITCH          reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    ARRAY_PUSH      reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    CADENA          reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    BOOLEAN         reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    ENTERO          reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    RESTA           reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    FLOTANTE        reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    $end            reduce using rule 42 (comparacion -> variable comparadorNum variable .)
    PARENDER        reduce using rule 42 (comparacion -> variable comparadorNum variable .)


state 153

    (39) variable -> IDENTIFICADOR .

    OPERADOR        reduce using rule 39 (variable -> IDENTIFICADOR .)
    AND             reduce using rule 39 (variable -> IDENTIFICADOR .)
    OR              reduce using rule 39 (variable -> IDENTIFICADOR .)
    IDENTIFICADOR   reduce using rule 39 (variable -> IDENTIFICADOR .)
    COMENTARIO      reduce using rule 39 (variable -> IDENTIFICADOR .)
    LLAVEDER        reduce using rule 39 (variable -> IDENTIFICADOR .)
    PRINT           reduce using rule 39 (variable -> IDENTIFICADOR .)
    ECHO            reduce using rule 39 (variable -> IDENTIFICADOR .)
    FUNCTION        reduce using rule 39 (variable -> IDENTIFICADOR .)
    NAMEFUNCTION    reduce using rule 39 (variable -> IDENTIFICADOR .)
    RETURN          reduce using rule 39 (variable -> IDENTIFICADOR .)
    WHILE           reduce using rule 39 (variable -> IDENTIFICADOR .)
    FOR             reduce using rule 39 (variable -> IDENTIFICADOR .)
    IF              reduce using rule 39 (variable -> IDENTIFICADOR .)
    ELSEIF          reduce using rule 39 (variable -> IDENTIFICADOR .)
    ELSE            reduce using rule 39 (variable -> IDENTIFICADOR .)
    FOREACH         reduce using rule 39 (variable -> IDENTIFICADOR .)
    SWITCH          reduce using rule 39 (variable -> IDENTIFICADOR .)
    ARRAY_PUSH      reduce using rule 39 (variable -> IDENTIFICADOR .)
    CADENA          reduce using rule 39 (variable -> IDENTIFICADOR .)
    BOOLEAN         reduce using rule 39 (variable -> IDENTIFICADOR .)
    ENTERO          reduce using rule 39 (variable -> IDENTIFICADOR .)
    RESTA           reduce using rule 39 (variable -> IDENTIFICADOR .)
    FLOTANTE        reduce using rule 39 (variable -> IDENTIFICADOR .)
    $end            reduce using rule 39 (variable -> IDENTIFICADOR .)
    PARENDER        reduce using rule 39 (variable -> IDENTIFICADOR .)
    SUMA            reduce using rule 39 (variable -> IDENTIFICADOR .)
    MULT            reduce using rule 39 (variable -> IDENTIFICADOR .)
    DIVISION        reduce using rule 39 (variable -> IDENTIFICADOR .)
    DIVISIONENTERA  reduce using rule 39 (variable -> IDENTIFICADOR .)
    MODULO          reduce using rule 39 (variable -> IDENTIFICADOR .)
    POTENCIA        reduce using rule 39 (variable -> IDENTIFICADOR .)


state 154

    (55) operacion -> variable operadorAritmetico variable .

    SUMA            reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    RESTA           reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    MULT            reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    DIVISION        reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    DIVISIONENTERA  reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    MODULO          reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    POTENCIA        reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    IDENTIFICADOR   reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    COMENTARIO      reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    LLAVEDER        reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    PRINT           reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    ECHO            reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    FUNCTION        reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    NAMEFUNCTION    reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    RETURN          reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    WHILE           reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    FOR             reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    IF              reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    ELSEIF          reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    ELSE            reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    FOREACH         reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    SWITCH          reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    ARRAY_PUSH      reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    CADENA          reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    BOOLEAN         reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    ENTERO          reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    FLOTANTE        reduce using rule 55 (operacion -> variable operadorAritmetico variable .)
    $end            reduce using rule 55 (operacion -> variable operadorAritmetico variable .)


state 155

    (54) operaciones -> IDENTIFICADOR ASIGNAR . operaciones
    (52) operaciones -> . operacion
    (53) operaciones -> . operacion operadorAritmetico operaciones
    (54) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (55) operacion -> . variable operadorAritmetico variable
    (38) variable -> . NUMERO
    (39) variable -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 130
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    operaciones                    shift and go to state 105
    operacion                      shift and go to state 40
    variable                       shift and go to state 115
    NUMERO                         shift and go to state 131

state 156

    (63) asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 63 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    COMENTARIO      reduce using rule 63 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    LLAVEDER        reduce using rule 63 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    PRINT           reduce using rule 63 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    ECHO            reduce using rule 63 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    FUNCTION        reduce using rule 63 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 63 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    RETURN          reduce using rule 63 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    WHILE           reduce using rule 63 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    FOR             reduce using rule 63 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    IF              reduce using rule 63 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    ELSEIF          reduce using rule 63 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    ELSE            reduce using rule 63 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    FOREACH         reduce using rule 63 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    SWITCH          reduce using rule 63 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 63 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    CADENA          reduce using rule 63 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    BOOLEAN         reduce using rule 63 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    ENTERO          reduce using rule 63 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    RESTA           reduce using rule 63 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    FLOTANTE        reduce using rule 63 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    $end            reduce using rule 63 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)


state 157

    (51) longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ . valor PARENDER PUNTOCOMA
    (27) valor -> . NUMERO
    (28) valor -> . CADENA
    (29) valor -> . BOOLEAN
    (30) valor -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 59
    BOOLEAN         shift and go to state 60
    IDENTIFICADOR   shift and go to state 83
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    valor                          shift and go to state 192
    NUMERO                         shift and go to state 82

state 158

    (68) input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ . FLUJOS PARENDER PUNTOCOMA

    FLUJOS          shift and go to state 193


state 159

    (74) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ . parametro PARENDER PUNTOCOMA
    (71) parametro -> . IDENTIFICADOR
    (72) parametro -> . IDENTIFICADOR COMA parametro

    IDENTIFICADOR   shift and go to state 141

    parametro                      shift and go to state 194

state 160

    (108) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 195


state 161

    (103) stack -> IDENTIFICADOR ASIGNAR NEW STACK . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 196


state 162

    (116) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ . PARENDER PUNTOCOMA
    (117) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ . valores PARENDER PUNTOCOMA
    (22) valores -> . valor
    (23) valores -> . valor COMA valores
    (27) valor -> . NUMERO
    (28) valor -> . CADENA
    (29) valor -> . BOOLEAN
    (30) valor -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    PARENDER        shift and go to state 197
    CADENA          shift and go to state 59
    BOOLEAN         shift and go to state 60
    IDENTIFICADOR   shift and go to state 83
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    valores                        shift and go to state 198
    valor                          shift and go to state 85
    NUMERO                         shift and go to state 82

state 163

    (118) array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores . CORCHETEDER PUNTOCOMA

    CORCHETEDER     shift and go to state 199


state 164

    (119) array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ . IDENTIFICADOR PARENDER PUNTOCOMA

    IDENTIFICADOR   shift and go to state 200


state 165

    (121) array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ . valor COMA IDENTIFICADOR PARENDER PUNTOCOMA
    (27) valor -> . NUMERO
    (28) valor -> . CADENA
    (29) valor -> . BOOLEAN
    (30) valor -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 59
    BOOLEAN         shift and go to state 60
    IDENTIFICADOR   shift and go to state 83
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    valor                          shift and go to state 201
    NUMERO                         shift and go to state 82

state 166

    (109) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ . valor PARENDER PUNTOCOMA
    (27) valor -> . NUMERO
    (28) valor -> . CADENA
    (29) valor -> . BOOLEAN
    (30) valor -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 59
    BOOLEAN         shift and go to state 60
    IDENTIFICADOR   shift and go to state 83
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    valor                          shift and go to state 202
    NUMERO                         shift and go to state 82

state 167

    (110) queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 203


state 168

    (111) queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 204


state 169

    (112) queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ . PARENDER PUNTOCOMA
    (104) stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 205


state 170

    (113) queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ . PARENDER PUNTOCOMA
    (105) stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 206


state 171

    (114) queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ . PARENDER PUNTOCOMA
    (106) stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 207


state 172

    (115) queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ . PARENDER
    (107) stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ . PARENDER

    PARENDER        shift and go to state 208


state 173

    (101) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ . valor PARENDER PUNTOCOMA
    (27) valor -> . NUMERO
    (28) valor -> . CADENA
    (29) valor -> . BOOLEAN
    (30) valor -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 59
    BOOLEAN         shift and go to state 60
    IDENTIFICADOR   shift and go to state 83
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    valor                          shift and go to state 209
    NUMERO                         shift and go to state 82

state 174

    (102) stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 210


state 175

    (92) elseif -> LLAVEDER ELSEIF PARENIZ comparaciones . PARENDER LLAVEIZ

    PARENDER        shift and go to state 211


state 176

    (93) elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR . PARENDER LLAVEIZ
    (39) variable -> IDENTIFICADOR .
    (30) valor -> IDENTIFICADOR .

    PARENDER        shift and go to state 212
    MAYORQUE        reduce using rule 39 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 39 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 39 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 39 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 30 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 30 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 30 (valor -> IDENTIFICADOR .)


state 177

    (65) print -> PRINT PARENIZ valores PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 213


state 178

    (67) print -> PRINT PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 67 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 67 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 67 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 67 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 67 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 67 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 67 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 67 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 67 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 67 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 67 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 67 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 67 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 67 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 67 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 67 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 67 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 67 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 67 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 67 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 67 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 67 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)


state 179

    (23) valores -> valor COMA valores .

    PUNTOCOMA       reduce using rule 23 (valores -> valor COMA valores .)
    PARENDER        reduce using rule 23 (valores -> valor COMA valores .)
    CORCHETEDER     reduce using rule 23 (valores -> valor COMA valores .)


state 180

    (70) funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro . PARENDER LLAVEIZ

    PARENDER        shift and go to state 214


state 181

    (73) funcion -> NAMEFUNCTION PARENIZ parametro PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 215


state 182

    (72) parametro -> IDENTIFICADOR COMA . parametro
    (71) parametro -> . IDENTIFICADOR
    (72) parametro -> . IDENTIFICADOR COMA parametro

    IDENTIFICADOR   shift and go to state 141

    parametro                      shift and go to state 216

state 183

    (83) while -> WHILE PARENIZ comparaciones PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 217


state 184

    (84) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR . ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    ENTERO          shift and go to state 218


state 185

    (90) if -> IF PARENIZ comparaciones PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 219


state 186

    (91) if -> IF PARENIZ IDENTIFICADOR PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 220


state 187

    (94) elseif -> ELSEIF PARENIZ comparaciones PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 221


state 188

    (95) elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 222


state 189

    (85) foreach -> FOREACH PARENIZ IDENTIFICADOR AS . IDENTIFICADOR PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 223


state 190

    (86) switch -> SWITCH PARENIZ valor PARENDER . LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER

    LLAVEIZ         shift and go to state 224


state 191

    (120) array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 225


state 192

    (51) longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 226


state 193

    (68) input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 227


state 194

    (74) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 228


state 195

    (108) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 229


state 196

    (103) stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 230


state 197

    (116) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 231


state 198

    (117) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 232


state 199

    (118) array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 233


state 200

    (119) array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 234


state 201

    (121) array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor . COMA IDENTIFICADOR PARENDER PUNTOCOMA

    COMA            shift and go to state 235


state 202

    (109) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 236


state 203

    (110) queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 237


state 204

    (111) queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 238


state 205

    (112) queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER . PUNTOCOMA
    (104) stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 239


state 206

    (113) queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER . PUNTOCOMA
    (105) stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 240


state 207

    (114) queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER . PUNTOCOMA
    (106) stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 241


state 208

    (115) queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .
    (107) stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for PRINT resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for ECHO resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for NAMEFUNCTION resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for RETURN resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for WHILE resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for FOR resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for IF resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for ELSE resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for FOREACH resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for SWITCH resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for ARRAY_PUSH resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for CADENA resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for ENTERO resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for RESTA resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for $end resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    IDENTIFICADOR   reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    COMENTARIO      reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    LLAVEDER        reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    PRINT           reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    ECHO            reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    FUNCTION        reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    NAMEFUNCTION    reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    RETURN          reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    WHILE           reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    FOR             reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    IF              reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    ELSEIF          reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    ELSE            reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    FOREACH         reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    SWITCH          reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    ARRAY_PUSH      reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    CADENA          reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    BOOLEAN         reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    ENTERO          reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    RESTA           reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    FLOTANTE        reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    $end            reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)

  ! IDENTIFICADOR   [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! COMENTARIO      [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! LLAVEDER        [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! PRINT           [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! ECHO            [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! FUNCTION        [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! NAMEFUNCTION    [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! RETURN          [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! WHILE           [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! FOR             [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! IF              [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! ELSEIF          [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! ELSE            [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! FOREACH         [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! SWITCH          [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! ARRAY_PUSH      [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! CADENA          [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! BOOLEAN         [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! ENTERO          [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! RESTA           [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! FLOTANTE        [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! $end            [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]


state 209

    (101) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 242


state 210

    (102) stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 243


state 211

    (92) elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 244


state 212

    (93) elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 245


state 213

    (65) print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 65 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 65 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 65 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 65 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 65 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 65 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 65 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 65 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 65 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    FOR             reduce using rule 65 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    IF              reduce using rule 65 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 65 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 65 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 65 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 65 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 65 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 65 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 65 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 65 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 65 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 65 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    $end            reduce using rule 65 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)


state 214

    (70) funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 246


state 215

    (73) funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 73 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 73 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 73 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 73 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 73 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 73 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 73 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 73 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 73 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FOR             reduce using rule 73 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    IF              reduce using rule 73 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 73 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 73 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 73 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 73 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 73 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 73 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 73 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 73 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 73 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 73 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    $end            reduce using rule 73 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)


state 216

    (72) parametro -> IDENTIFICADOR COMA parametro .

    PARENDER        reduce using rule 72 (parametro -> IDENTIFICADOR COMA parametro .)


state 217

    (83) while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 83 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 83 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 83 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    PRINT           reduce using rule 83 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    ECHO            reduce using rule 83 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 83 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 83 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    RETURN          reduce using rule 83 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    WHILE           reduce using rule 83 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOR             reduce using rule 83 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    IF              reduce using rule 83 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 83 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSE            reduce using rule 83 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 83 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 83 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 83 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    CADENA          reduce using rule 83 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 83 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 83 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    RESTA           reduce using rule 83 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 83 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    $end            reduce using rule 83 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)


state 218

    (84) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO . PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    PUNTOCOMA       shift and go to state 247


state 219

    (90) if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 90 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 90 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 90 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    PRINT           reduce using rule 90 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ECHO            reduce using rule 90 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 90 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 90 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RETURN          reduce using rule 90 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    WHILE           reduce using rule 90 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOR             reduce using rule 90 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    IF              reduce using rule 90 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 90 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSE            reduce using rule 90 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 90 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 90 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 90 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    CADENA          reduce using rule 90 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 90 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 90 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RESTA           reduce using rule 90 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 90 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    $end            reduce using rule 90 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)


state 220

    (91) if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 91 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 91 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 91 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    PRINT           reduce using rule 91 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ECHO            reduce using rule 91 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 91 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 91 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RETURN          reduce using rule 91 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    WHILE           reduce using rule 91 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOR             reduce using rule 91 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    IF              reduce using rule 91 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 91 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSE            reduce using rule 91 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 91 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 91 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 91 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    CADENA          reduce using rule 91 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 91 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 91 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RESTA           reduce using rule 91 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 91 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    $end            reduce using rule 91 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)


state 221

    (94) elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 94 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 94 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 94 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    PRINT           reduce using rule 94 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ECHO            reduce using rule 94 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 94 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 94 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RETURN          reduce using rule 94 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    WHILE           reduce using rule 94 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOR             reduce using rule 94 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    IF              reduce using rule 94 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 94 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSE            reduce using rule 94 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 94 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 94 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 94 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    CADENA          reduce using rule 94 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 94 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 94 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RESTA           reduce using rule 94 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 94 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    $end            reduce using rule 94 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)


state 222

    (95) elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 95 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 95 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 95 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    PRINT           reduce using rule 95 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ECHO            reduce using rule 95 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 95 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 95 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RETURN          reduce using rule 95 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    WHILE           reduce using rule 95 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOR             reduce using rule 95 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    IF              reduce using rule 95 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 95 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSE            reduce using rule 95 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 95 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 95 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 95 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    CADENA          reduce using rule 95 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 95 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 95 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RESTA           reduce using rule 95 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 95 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    $end            reduce using rule 95 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)


state 223

    (85) foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR . PARENDER LLAVEIZ

    PARENDER        shift and go to state 248


state 224

    (86) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ . casos DEFAULT DOSPUNTOS echo LLAVEDER
    (87) casos -> . caso
    (88) casos -> . caso casos
    (89) caso -> . CASE valor DOSPUNTOS echo BREAK PUNTOCOMA

    CASE            shift and go to state 251

    casos                          shift and go to state 249
    caso                           shift and go to state 250

state 225

    (120) array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 120 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 120 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 120 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 120 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 120 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 120 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 120 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 120 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 120 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    FOR             reduce using rule 120 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    IF              reduce using rule 120 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 120 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 120 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 120 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 120 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 120 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 120 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 120 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 120 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 120 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 120 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    $end            reduce using rule 120 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)


state 226

    (51) longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 252


state 227

    (68) input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 253


state 228

    (74) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 254


state 229

    (108) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 255


state 230

    (103) stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 256


state 231

    (116) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)


state 232

    (117) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 257


state 233

    (118) array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    PRINT           reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    ECHO            reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    FUNCTION        reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    RETURN          reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    WHILE           reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    FOR             reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    IF              reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    ELSEIF          reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    ELSE            reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    FOREACH         reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    SWITCH          reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    CADENA          reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    ENTERO          reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    RESTA           reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    $end            reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)


state 234

    (119) array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 258


state 235

    (121) array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA . IDENTIFICADOR PARENDER PUNTOCOMA

    IDENTIFICADOR   shift and go to state 259


state 236

    (109) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 260


state 237

    (110) queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)


state 238

    (111) queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)


state 239

    (112) queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .
    (104) stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ECHO resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for NAMEFUNCTION resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RETURN resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOREACH resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for SWITCH resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ARRAY_PUSH resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for CADENA resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RESTA resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for $end resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)

  ! IDENTIFICADOR   [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! COMENTARIO      [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! LLAVEDER        [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! PRINT           [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ECHO            [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FUNCTION        [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! NAMEFUNCTION    [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! RETURN          [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! WHILE           [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOR             [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! IF              [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSEIF          [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSE            [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOREACH         [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! SWITCH          [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ARRAY_PUSH      [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! CADENA          [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! BOOLEAN         [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ENTERO          [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! RESTA           [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FLOTANTE        [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! $end            [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]


state 240

    (113) queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .
    (105) stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ECHO resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for NAMEFUNCTION resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RETURN resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOREACH resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for SWITCH resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ARRAY_PUSH resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for CADENA resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RESTA resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for $end resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)

  ! IDENTIFICADOR   [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! COMENTARIO      [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! LLAVEDER        [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! PRINT           [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! ECHO            [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! FUNCTION        [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! NAMEFUNCTION    [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! RETURN          [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! WHILE           [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOR             [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! IF              [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSEIF          [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSE            [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOREACH         [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! SWITCH          [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! ARRAY_PUSH      [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! CADENA          [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! BOOLEAN         [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! ENTERO          [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! RESTA           [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! FLOTANTE        [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! $end            [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]


state 241

    (114) queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .
    (106) stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ECHO resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for NAMEFUNCTION resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RETURN resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOREACH resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for SWITCH resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ARRAY_PUSH resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for CADENA resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RESTA resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for $end resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)

  ! IDENTIFICADOR   [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! COMENTARIO      [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! LLAVEDER        [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! PRINT           [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ECHO            [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FUNCTION        [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! NAMEFUNCTION    [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! RETURN          [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! WHILE           [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOR             [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! IF              [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSEIF          [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSE            [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOREACH         [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! SWITCH          [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ARRAY_PUSH      [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! CADENA          [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! BOOLEAN         [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ENTERO          [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! RESTA           [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FLOTANTE        [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! $end            [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]


state 242

    (101) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 261


state 243

    (102) stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)


state 244

    (92) elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 92 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 92 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 92 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    PRINT           reduce using rule 92 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ECHO            reduce using rule 92 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 92 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 92 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RETURN          reduce using rule 92 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    WHILE           reduce using rule 92 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOR             reduce using rule 92 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    IF              reduce using rule 92 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 92 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSE            reduce using rule 92 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 92 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 92 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 92 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    CADENA          reduce using rule 92 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 92 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 92 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RESTA           reduce using rule 92 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 92 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    $end            reduce using rule 92 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)


state 245

    (93) elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 93 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 93 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 93 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    PRINT           reduce using rule 93 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ECHO            reduce using rule 93 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 93 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 93 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RETURN          reduce using rule 93 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    WHILE           reduce using rule 93 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOR             reduce using rule 93 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    IF              reduce using rule 93 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 93 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSE            reduce using rule 93 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 93 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 93 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 93 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    CADENA          reduce using rule 93 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 93 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 93 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RESTA           reduce using rule 93 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 93 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    $end            reduce using rule 93 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)


state 246

    (70) funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 70 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 70 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 70 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    PRINT           reduce using rule 70 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    ECHO            reduce using rule 70 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 70 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 70 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    RETURN          reduce using rule 70 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    WHILE           reduce using rule 70 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    FOR             reduce using rule 70 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    IF              reduce using rule 70 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 70 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    ELSE            reduce using rule 70 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 70 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 70 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 70 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    CADENA          reduce using rule 70 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 70 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 70 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    RESTA           reduce using rule 70 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 70 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    $end            reduce using rule 70 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)


state 247

    (84) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA . IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 262


state 248

    (85) foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 263


state 249

    (86) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos . DEFAULT DOSPUNTOS echo LLAVEDER

    DEFAULT         shift and go to state 264


state 250

    (87) casos -> caso .
    (88) casos -> caso . casos
    (87) casos -> . caso
    (88) casos -> . caso casos
    (89) caso -> . CASE valor DOSPUNTOS echo BREAK PUNTOCOMA

    DEFAULT         reduce using rule 87 (casos -> caso .)
    CASE            shift and go to state 251

    caso                           shift and go to state 250
    casos                          shift and go to state 265

state 251

    (89) caso -> CASE . valor DOSPUNTOS echo BREAK PUNTOCOMA
    (27) valor -> . NUMERO
    (28) valor -> . CADENA
    (29) valor -> . BOOLEAN
    (30) valor -> . IDENTIFICADOR
    (24) NUMERO -> . ENTERO
    (25) NUMERO -> . RESTA ENTERO
    (26) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 59
    BOOLEAN         shift and go to state 60
    IDENTIFICADOR   shift and go to state 83
    ENTERO          shift and go to state 50
    RESTA           shift and go to state 63
    FLOTANTE        shift and go to state 61

    valor                          shift and go to state 266
    NUMERO                         shift and go to state 82

state 252

    (51) longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 51 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 51 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 51 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 51 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 51 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 51 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 51 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 51 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 51 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    FOR             reduce using rule 51 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    IF              reduce using rule 51 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 51 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 51 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 51 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 51 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 51 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 51 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 51 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 51 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 51 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 51 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    $end            reduce using rule 51 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)


state 253

    (68) input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 68 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 68 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 68 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 68 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 68 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 68 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 68 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 68 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 68 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    FOR             reduce using rule 68 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    IF              reduce using rule 68 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 68 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 68 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 68 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 68 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 68 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 68 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 68 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 68 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 68 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 68 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    $end            reduce using rule 68 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)


state 254

    (74) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 74 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 74 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 74 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 74 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 74 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 74 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 74 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 74 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 74 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FOR             reduce using rule 74 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    IF              reduce using rule 74 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 74 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 74 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 74 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 74 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 74 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 74 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 74 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 74 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 74 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 74 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    $end            reduce using rule 74 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)


state 255

    (108) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 108 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 108 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 108 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 108 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 108 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 108 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 108 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 108 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 108 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 108 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 108 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 108 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 108 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 108 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 108 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 108 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 108 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 108 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 108 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 108 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 108 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 108 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)


state 256

    (103) stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 103 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 103 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 103 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 103 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 103 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 103 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 103 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 103 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 103 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 103 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 103 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 103 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 103 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 103 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 103 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 103 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 103 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 103 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 103 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 103 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 103 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 103 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)


state 257

    (117) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 117 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 117 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 117 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 117 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 117 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 117 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 117 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 117 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 117 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    FOR             reduce using rule 117 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    IF              reduce using rule 117 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 117 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 117 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 117 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 117 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 117 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 117 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 117 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 117 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 117 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 117 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    $end            reduce using rule 117 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)


state 258

    (119) array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    FOR             reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    IF              reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    $end            reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)


state 259

    (121) array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 267


state 260

    (109) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    FOR             reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    IF              reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    $end            reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)


state 261

    (101) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    FOR             reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    IF              reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    $end            reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)


state 262

    (84) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR . comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ
    (31) comparadorNum -> . MAYORQUE
    (32) comparadorNum -> . MAYORIGUALQUE
    (33) comparadorNum -> . MENORQUE
    (34) comparadorNum -> . MENORIGUALQUE

    MAYORQUE        shift and go to state 99
    MAYORIGUALQUE   shift and go to state 100
    MENORQUE        shift and go to state 101
    MENORIGUALQUE   shift and go to state 102

    comparadorNum                  shift and go to state 268

state 263

    (85) foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 85 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 85 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 85 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    PRINT           reduce using rule 85 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    ECHO            reduce using rule 85 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 85 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 85 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    RETURN          reduce using rule 85 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    WHILE           reduce using rule 85 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    FOR             reduce using rule 85 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    IF              reduce using rule 85 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 85 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSE            reduce using rule 85 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 85 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 85 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 85 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    CADENA          reduce using rule 85 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 85 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 85 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    RESTA           reduce using rule 85 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 85 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    $end            reduce using rule 85 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)


state 264

    (86) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT . DOSPUNTOS echo LLAVEDER

    DOSPUNTOS       shift and go to state 269


state 265

    (88) casos -> caso casos .

    DEFAULT         reduce using rule 88 (casos -> caso casos .)


state 266

    (89) caso -> CASE valor . DOSPUNTOS echo BREAK PUNTOCOMA

    DOSPUNTOS       shift and go to state 270


state 267

    (121) array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 271


state 268

    (84) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum . ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    ENTERO          shift and go to state 272


state 269

    (86) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS . echo LLAVEDER
    (69) echo -> . ECHO valores PUNTOCOMA

    ECHO            shift and go to state 44

    echo                           shift and go to state 273

state 270

    (89) caso -> CASE valor DOSPUNTOS . echo BREAK PUNTOCOMA
    (69) echo -> . ECHO valores PUNTOCOMA

    ECHO            shift and go to state 44

    echo                           shift and go to state 274

state 271

    (121) array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    FOR             reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    IF              reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    $end            reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)


state 272

    (84) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO . PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    PUNTOCOMA       shift and go to state 275


state 273

    (86) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo . LLAVEDER

    LLAVEDER        shift and go to state 276


state 274

    (89) caso -> CASE valor DOSPUNTOS echo . BREAK PUNTOCOMA

    BREAK           shift and go to state 277


state 275

    (84) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA . IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 278


state 276

    (86) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .

    IDENTIFICADOR   reduce using rule 86 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    COMENTARIO      reduce using rule 86 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    LLAVEDER        reduce using rule 86 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    PRINT           reduce using rule 86 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    ECHO            reduce using rule 86 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    FUNCTION        reduce using rule 86 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    NAMEFUNCTION    reduce using rule 86 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    RETURN          reduce using rule 86 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    WHILE           reduce using rule 86 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    FOR             reduce using rule 86 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    IF              reduce using rule 86 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    ELSEIF          reduce using rule 86 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    ELSE            reduce using rule 86 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    FOREACH         reduce using rule 86 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    SWITCH          reduce using rule 86 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    ARRAY_PUSH      reduce using rule 86 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    CADENA          reduce using rule 86 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    BOOLEAN         reduce using rule 86 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    ENTERO          reduce using rule 86 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    RESTA           reduce using rule 86 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    FLOTANTE        reduce using rule 86 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    $end            reduce using rule 86 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)


state 277

    (89) caso -> CASE valor DOSPUNTOS echo BREAK . PUNTOCOMA

    PUNTOCOMA       shift and go to state 279


state 278

    (84) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR . incrementoDecremento PARENDER LLAVEIZ
    (44) incrementoDecremento -> . INCREMENTO
    (45) incrementoDecremento -> . DECREMENTO
    (46) incrementoDecremento -> . SUMA ENTERO
    (47) incrementoDecremento -> . RESTA ENTERO

    INCREMENTO      shift and go to state 281
    DECREMENTO      shift and go to state 282
    SUMA            shift and go to state 283
    RESTA           shift and go to state 284

    incrementoDecremento           shift and go to state 280

state 279

    (89) caso -> CASE valor DOSPUNTOS echo BREAK PUNTOCOMA .

    CASE            reduce using rule 89 (caso -> CASE valor DOSPUNTOS echo BREAK PUNTOCOMA .)
    DEFAULT         reduce using rule 89 (caso -> CASE valor DOSPUNTOS echo BREAK PUNTOCOMA .)


state 280

    (84) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento . PARENDER LLAVEIZ

    PARENDER        shift and go to state 285


state 281

    (44) incrementoDecremento -> INCREMENTO .

    PARENDER        reduce using rule 44 (incrementoDecremento -> INCREMENTO .)


state 282

    (45) incrementoDecremento -> DECREMENTO .

    PARENDER        reduce using rule 45 (incrementoDecremento -> DECREMENTO .)


state 283

    (46) incrementoDecremento -> SUMA . ENTERO

    ENTERO          shift and go to state 286


state 284

    (47) incrementoDecremento -> RESTA . ENTERO

    ENTERO          shift and go to state 287


state 285

    (84) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 288


state 286

    (46) incrementoDecremento -> SUMA ENTERO .

    PARENDER        reduce using rule 46 (incrementoDecremento -> SUMA ENTERO .)


state 287

    (47) incrementoDecremento -> RESTA ENTERO .

    PARENDER        reduce using rule 47 (incrementoDecremento -> RESTA ENTERO .)


state 288

    (84) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 84 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 84 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 84 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    PRINT           reduce using rule 84 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    ECHO            reduce using rule 84 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 84 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 84 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    RETURN          reduce using rule 84 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    WHILE           reduce using rule 84 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    FOR             reduce using rule 84 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    IF              reduce using rule 84 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 84 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    ELSE            reduce using rule 84 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 84 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 84 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 84 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    CADENA          reduce using rule 84 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 84 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 84 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    RESTA           reduce using rule 84 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 84 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    $end            reduce using rule 84 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RESTA in state 40 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 42 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 42 resolved as shift
WARNING: reduce/reduce conflict in state 208 resolved using rule (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER)
WARNING: rejected rule (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER) in state 208
WARNING: reduce/reduce conflict in state 239 resolved using rule (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA)
WARNING: rejected rule (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA) in state 239
WARNING: reduce/reduce conflict in state 240 resolved using rule (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA)
WARNING: rejected rule (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA) in state 240
WARNING: reduce/reduce conflict in state 241 resolved using rule (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA)
WARNING: rejected rule (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA) in state 241
WARNING: Rule (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER) is never reduced
WARNING: Rule (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA) is never reduced
WARNING: Rule (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA) is never reduced
WARNING: Rule (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA) is never reduced
