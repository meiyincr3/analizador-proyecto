Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ANDEQUAL
    ASIGNACION
    PUNTO
    SIGNOID

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> bloques
Rule 2     sentencias -> operadorAritmetico
Rule 3     bloques -> bloque
Rule 4     bloques -> bloque bloques
Rule 5     bloque -> impresion
Rule 6     bloque -> asignacion
Rule 7     bloque -> funciones
Rule 8     bloque -> estructurasControl
Rule 9     bloque -> estructurasDeDatos
Rule 10    bloque -> comparaciones
Rule 11    bloque -> operaciones
Rule 12    bloque -> comentario
Rule 13    impresion -> print
Rule 14    impresion -> echo
Rule 15    impresion -> input
Rule 16    funciones -> funcion
Rule 17    funciones -> return
Rule 18    comentario -> COMENTARIO
Rule 19    comentario -> LLAVEDER
Rule 20    valores -> valor
Rule 21    valores -> valor COMA valores
Rule 22    NUMERO -> ENTERO
Rule 23    NUMERO -> FLOTANTE
Rule 24    valor -> NUMERO
Rule 25    valor -> CADENA
Rule 26    valor -> BOOLEAN
Rule 27    valor -> IDENTIFICADOR
Rule 28    comparadorNum -> MAYORQUE
Rule 29    comparadorNum -> MAYORIGUALQUE
Rule 30    comparadorNum -> MENORQUE
Rule 31    comparadorNum -> MENORIGUALQUE
Rule 32    comparador -> IDENTICO
Rule 33    comparador -> NOIDENTICO
Rule 34    comparador -> IGUAL
Rule 35    variable -> NUMERO
Rule 36    variable -> IDENTIFICADOR
Rule 37    comparaciones -> comparacion
Rule 38    comparaciones -> comparacion operadores comparaciones
Rule 39    comparacion -> variable comparadorNum variable
Rule 40    comparacion -> valor comparador valor
Rule 41    incrementoDecremento -> INCREMENTO
Rule 42    incrementoDecremento -> DECREMENTO
Rule 43    incrementoDecremento -> SUMA ENTERO
Rule 44    incrementoDecremento -> RESTA ENTERO
Rule 45    operadores -> OPERADOR
Rule 46    operadores -> AND
Rule 47    operadores -> OR
Rule 48    operaciones -> operacion
Rule 49    operaciones -> operacion operadorAritmetico operaciones
Rule 50    operaciones -> IDENTIFICADOR ASIGNAR operaciones
Rule 51    operacion -> variable operadorAritmetico variable
Rule 52    operadorAritmetico -> SUMA
Rule 53    operadorAritmetico -> RESTA
Rule 54    operadorAritmetico -> MULT
Rule 55    operadorAritmetico -> DIVISION
Rule 56    operadorAritmetico -> DIVISIONENTERA
Rule 57    operadorAritmetico -> MODULO
Rule 58    operadorAritmetico -> POTENCIA
Rule 59    asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA
Rule 60    print -> PRINT PARENIZ valores PARENDER PUNTOCOMA
Rule 61    print -> PRINT valor PUNTOCOMA
Rule 62    print -> PRINT PARENIZ PARENDER PUNTOCOMA
Rule 63    input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA
Rule 64    echo -> ECHO valores PUNTOCOMA
Rule 65    funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ
Rule 66    parametro -> IDENTIFICADOR
Rule 67    parametro -> IDENTIFICADOR COMA parametro
Rule 68    funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
Rule 69    funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
Rule 70    return -> RETURN IDENTIFICADOR PUNTOCOMA
Rule 71    estructurasControl -> while
Rule 72    estructurasControl -> for
Rule 73    estructurasControl -> if
Rule 74    estructurasControl -> elseif
Rule 75    estructurasControl -> else
Rule 76    estructurasControl -> foreach
Rule 77    estructurasControl -> switch
Rule 78    while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ
Rule 79    for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ
Rule 80    foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ
Rule 81    switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER
Rule 82    casos -> caso
Rule 83    casos -> caso casos
Rule 84    caso -> CASE valor DOSPUNTOS echo BREAK PUNTOCOMA
Rule 85    if -> IF PARENIZ comparaciones PARENDER LLAVEIZ
Rule 86    if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
Rule 87    elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
Rule 88    elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
Rule 89    elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
Rule 90    elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
Rule 91    else -> LLAVEDER ELSE LLAVEIZ
Rule 92    else -> ELSE LLAVEIZ
Rule 93    estructurasDeDatos -> queue
Rule 94    estructurasDeDatos -> stack
Rule 95    estructurasDeDatos -> array
Rule 96    stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA
Rule 97    stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA
Rule 98    stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA
Rule 99    stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
Rule 100   stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
Rule 101   stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
Rule 102   stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
Rule 103   queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA
Rule 104   queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
Rule 105   queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA
Rule 106   queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA
Rule 107   queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
Rule 108   queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
Rule 109   queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
Rule 110   queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
Rule 111   array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA
Rule 112   array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA
Rule 113   array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA
Rule 114   empty -> <empty>

Terminals, with rules where they appear

AND                  : 46
ANDEQUAL             : 
ARRAY                : 111 112
AS                   : 80
ASIGNACION           : 
ASIGNAR              : 50 59 63 69 79 98 103 111 112 113
BOOLEAN              : 26
BREAK                : 84
CADENA               : 25
CASE                 : 84
COMA                 : 21 67
COMENTARIO           : 18
CORCHETEDER          : 113
CORCHETEIZ           : 113
COUNT                : 105
CURRENT              : 101 109
DECREMENTO           : 42
DEFAULT              : 81
DEQUEUE              : 106
DIVISION             : 55
DIVISIONENTERA       : 56
DOSPUNTOS            : 81 84
ECHO                 : 64
ELSE                 : 91 92
ELSEIF               : 87 88 89 90
ENQUEUE              : 104
ENTERO               : 22 43 44 79 79
FGETS                : 63
FLECHASIMPLE         : 96 97 99 100 101 102 104 105 106 107 108 109 110
FLOTANTE             : 23
FLUJOS               : 63
FOR                  : 79
FOREACH              : 80
FUNCTION             : 65
IDENTICO             : 32
IDENTIFICADOR        : 27 36 50 59 63 66 67 69 70 79 79 79 80 80 86 88 90 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113
IF                   : 85 86
IGUAL                : 34
INCREMENTO           : 41
LLAVEDER             : 19 81 87 88 91
LLAVEIZ              : 65 78 79 80 81 85 86 87 88 89 90 91 92
MAYORIGUALQUE        : 29
MAYORQUE             : 28
MENORIGUALQUE        : 31
MENORQUE             : 30
MODULO               : 57
MULT                 : 54
NAMEFUNCTION         : 65 68 69
NEW                  : 98 103
NEXT                 : 99 107
NOIDENTICO           : 33
OPERADOR             : 45
OR                   : 47
PARENDER             : 60 62 63 65 68 69 78 79 80 81 85 86 87 88 89 90 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112
PARENIZ              : 60 62 63 65 68 69 78 79 80 81 85 86 87 88 89 90 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112
POP                  : 97
POTENCIA             : 58
PRINT                : 60 61 62
PUNTO                : 
PUNTOCOMA            : 59 60 61 62 63 64 68 69 70 79 79 84 96 97 98 99 100 101 103 104 105 106 107 108 109 111 112 113
PUSH                 : 96
QUEUE                : 103
RESTA                : 44 53
RETURN               : 70
REWIND               : 100 108
SIGNOID              : 
STACK                : 98
SUMA                 : 43 52
SWITCH               : 81
VALID                : 102 110
WHILE                : 78
error                : 

Nonterminals, with rules where they appear

NUMERO               : 24 35
array                : 95
asignacion           : 6
bloque               : 3 4
bloques              : 1 4
caso                 : 82 83
casos                : 81 83
comentario           : 12
comparacion          : 37 38
comparaciones        : 10 38 78 85 87 89
comparador           : 40
comparadorNum        : 39 79
echo                 : 14 81 84
else                 : 75
elseif               : 74
empty                : 
estructurasControl   : 8
estructurasDeDatos   : 9
for                  : 72
foreach              : 76
funcion              : 16
funciones            : 7
if                   : 73
impresion            : 5
incrementoDecremento : 79
input                : 15
operacion            : 48 49
operaciones          : 11 49 50
operadorAritmetico   : 2 49 51
operadores           : 38
parametro            : 65 67 68 69
print                : 13
queue                : 93
return               : 17
sentencias           : 0
stack                : 94
switch               : 77
valor                : 20 21 40 40 59 61 81 84 96 104
valores              : 21 60 64 112 113
variable             : 39 39 51 51
while                : 71

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . bloques
    (2) sentencias -> . operadorAritmetico
    (3) bloques -> . bloque
    (4) bloques -> . bloque bloques
    (52) operadorAritmetico -> . SUMA
    (53) operadorAritmetico -> . RESTA
    (54) operadorAritmetico -> . MULT
    (55) operadorAritmetico -> . DIVISION
    (56) operadorAritmetico -> . DIVISIONENTERA
    (57) operadorAritmetico -> . MODULO
    (58) operadorAritmetico -> . POTENCIA
    (5) bloque -> . impresion
    (6) bloque -> . asignacion
    (7) bloque -> . funciones
    (8) bloque -> . estructurasControl
    (9) bloque -> . estructurasDeDatos
    (10) bloque -> . comparaciones
    (11) bloque -> . operaciones
    (12) bloque -> . comentario
    (13) impresion -> . print
    (14) impresion -> . echo
    (15) impresion -> . input
    (59) asignacion -> . IDENTIFICADOR ASIGNAR valor PUNTOCOMA
    (16) funciones -> . funcion
    (17) funciones -> . return
    (71) estructurasControl -> . while
    (72) estructurasControl -> . for
    (73) estructurasControl -> . if
    (74) estructurasControl -> . elseif
    (75) estructurasControl -> . else
    (76) estructurasControl -> . foreach
    (77) estructurasControl -> . switch
    (93) estructurasDeDatos -> . queue
    (94) estructurasDeDatos -> . stack
    (95) estructurasDeDatos -> . array
    (37) comparaciones -> . comparacion
    (38) comparaciones -> . comparacion operadores comparaciones
    (48) operaciones -> . operacion
    (49) operaciones -> . operacion operadorAritmetico operaciones
    (50) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (18) comentario -> . COMENTARIO
    (19) comentario -> . LLAVEDER
    (60) print -> . PRINT PARENIZ valores PARENDER PUNTOCOMA
    (61) print -> . PRINT valor PUNTOCOMA
    (62) print -> . PRINT PARENIZ PARENDER PUNTOCOMA
    (64) echo -> . ECHO valores PUNTOCOMA
    (63) input -> . IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA
    (65) funcion -> . FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ
    (68) funcion -> . NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (69) funcion -> . IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (70) return -> . RETURN IDENTIFICADOR PUNTOCOMA
    (78) while -> . WHILE PARENIZ comparaciones PARENDER LLAVEIZ
    (79) for -> . FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ
    (85) if -> . IF PARENIZ comparaciones PARENDER LLAVEIZ
    (86) if -> . IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (87) elseif -> . LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (88) elseif -> . LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (89) elseif -> . ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (90) elseif -> . ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (91) else -> . LLAVEDER ELSE LLAVEIZ
    (92) else -> . ELSE LLAVEIZ
    (80) foreach -> . FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ
    (81) switch -> . SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER
    (103) queue -> . IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA
    (104) queue -> . IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
    (105) queue -> . IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA
    (106) queue -> . IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA
    (107) queue -> . IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (108) queue -> . IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (109) queue -> . IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (110) queue -> . IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
    (96) stack -> . IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA
    (97) stack -> . IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA
    (98) stack -> . IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA
    (99) stack -> . IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (100) stack -> . IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (101) stack -> . IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (102) stack -> . IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
    (111) array -> . IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA
    (112) array -> . IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA
    (113) array -> . IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA
    (39) comparacion -> . variable comparadorNum variable
    (40) comparacion -> . valor comparador valor
    (51) operacion -> . variable operadorAritmetico variable
    (35) variable -> . NUMERO
    (36) variable -> . IDENTIFICADOR
    (24) valor -> . NUMERO
    (25) valor -> . CADENA
    (26) valor -> . BOOLEAN
    (27) valor -> . IDENTIFICADOR
    (22) NUMERO -> . ENTERO
    (23) NUMERO -> . FLOTANTE

    SUMA            shift and go to state 5
    RESTA           shift and go to state 6
    MULT            shift and go to state 7
    DIVISION        shift and go to state 8
    DIVISIONENTERA  shift and go to state 9
    MODULO          shift and go to state 10
    POTENCIA        shift and go to state 11
    IDENTIFICADOR   shift and go to state 23
    COMENTARIO      shift and go to state 39
    LLAVEDER        shift and go to state 40
    PRINT           shift and go to state 41
    ECHO            shift and go to state 42
    FUNCTION        shift and go to state 43
    NAMEFUNCTION    shift and go to state 44
    RETURN          shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    IF              shift and go to state 49
    ELSEIF          shift and go to state 50
    ELSE            shift and go to state 51
    FOREACH         shift and go to state 52
    SWITCH          shift and go to state 53
    CADENA          shift and go to state 56
    BOOLEAN         shift and go to state 57
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 58

    sentencias                     shift and go to state 1
    bloques                        shift and go to state 2
    operadorAritmetico             shift and go to state 3
    bloque                         shift and go to state 4
    impresion                      shift and go to state 12
    asignacion                     shift and go to state 13
    funciones                      shift and go to state 14
    estructurasControl             shift and go to state 15
    estructurasDeDatos             shift and go to state 16
    comparaciones                  shift and go to state 17
    operaciones                    shift and go to state 18
    comentario                     shift and go to state 19
    print                          shift and go to state 20
    echo                           shift and go to state 21
    input                          shift and go to state 22
    valor                          shift and go to state 24
    funcion                        shift and go to state 25
    return                         shift and go to state 26
    while                          shift and go to state 27
    for                            shift and go to state 28
    if                             shift and go to state 29
    elseif                         shift and go to state 30
    else                           shift and go to state 31
    foreach                        shift and go to state 32
    switch                         shift and go to state 33
    queue                          shift and go to state 34
    stack                          shift and go to state 35
    array                          shift and go to state 36
    comparacion                    shift and go to state 37
    operacion                      shift and go to state 38
    variable                       shift and go to state 54
    NUMERO                         shift and go to state 55

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> bloques .

    $end            reduce using rule 1 (sentencias -> bloques .)


state 3

    (2) sentencias -> operadorAritmetico .

    $end            reduce using rule 2 (sentencias -> operadorAritmetico .)


state 4

    (3) bloques -> bloque .
    (4) bloques -> bloque . bloques
    (3) bloques -> . bloque
    (4) bloques -> . bloque bloques
    (5) bloque -> . impresion
    (6) bloque -> . asignacion
    (7) bloque -> . funciones
    (8) bloque -> . estructurasControl
    (9) bloque -> . estructurasDeDatos
    (10) bloque -> . comparaciones
    (11) bloque -> . operaciones
    (12) bloque -> . comentario
    (13) impresion -> . print
    (14) impresion -> . echo
    (15) impresion -> . input
    (59) asignacion -> . IDENTIFICADOR ASIGNAR valor PUNTOCOMA
    (16) funciones -> . funcion
    (17) funciones -> . return
    (71) estructurasControl -> . while
    (72) estructurasControl -> . for
    (73) estructurasControl -> . if
    (74) estructurasControl -> . elseif
    (75) estructurasControl -> . else
    (76) estructurasControl -> . foreach
    (77) estructurasControl -> . switch
    (93) estructurasDeDatos -> . queue
    (94) estructurasDeDatos -> . stack
    (95) estructurasDeDatos -> . array
    (37) comparaciones -> . comparacion
    (38) comparaciones -> . comparacion operadores comparaciones
    (48) operaciones -> . operacion
    (49) operaciones -> . operacion operadorAritmetico operaciones
    (50) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (18) comentario -> . COMENTARIO
    (19) comentario -> . LLAVEDER
    (60) print -> . PRINT PARENIZ valores PARENDER PUNTOCOMA
    (61) print -> . PRINT valor PUNTOCOMA
    (62) print -> . PRINT PARENIZ PARENDER PUNTOCOMA
    (64) echo -> . ECHO valores PUNTOCOMA
    (63) input -> . IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA
    (65) funcion -> . FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ
    (68) funcion -> . NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (69) funcion -> . IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (70) return -> . RETURN IDENTIFICADOR PUNTOCOMA
    (78) while -> . WHILE PARENIZ comparaciones PARENDER LLAVEIZ
    (79) for -> . FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ
    (85) if -> . IF PARENIZ comparaciones PARENDER LLAVEIZ
    (86) if -> . IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (87) elseif -> . LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (88) elseif -> . LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (89) elseif -> . ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (90) elseif -> . ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (91) else -> . LLAVEDER ELSE LLAVEIZ
    (92) else -> . ELSE LLAVEIZ
    (80) foreach -> . FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ
    (81) switch -> . SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER
    (103) queue -> . IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA
    (104) queue -> . IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
    (105) queue -> . IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA
    (106) queue -> . IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA
    (107) queue -> . IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (108) queue -> . IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (109) queue -> . IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (110) queue -> . IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
    (96) stack -> . IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA
    (97) stack -> . IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA
    (98) stack -> . IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA
    (99) stack -> . IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (100) stack -> . IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (101) stack -> . IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (102) stack -> . IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
    (111) array -> . IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA
    (112) array -> . IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA
    (113) array -> . IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA
    (39) comparacion -> . variable comparadorNum variable
    (40) comparacion -> . valor comparador valor
    (51) operacion -> . variable operadorAritmetico variable
    (35) variable -> . NUMERO
    (36) variable -> . IDENTIFICADOR
    (24) valor -> . NUMERO
    (25) valor -> . CADENA
    (26) valor -> . BOOLEAN
    (27) valor -> . IDENTIFICADOR
    (22) NUMERO -> . ENTERO
    (23) NUMERO -> . FLOTANTE

    $end            reduce using rule 3 (bloques -> bloque .)
    IDENTIFICADOR   shift and go to state 23
    COMENTARIO      shift and go to state 39
    LLAVEDER        shift and go to state 40
    PRINT           shift and go to state 41
    ECHO            shift and go to state 42
    FUNCTION        shift and go to state 43
    NAMEFUNCTION    shift and go to state 44
    RETURN          shift and go to state 45
    WHILE           shift and go to state 46
    FOR             shift and go to state 47
    IF              shift and go to state 49
    ELSEIF          shift and go to state 50
    ELSE            shift and go to state 51
    FOREACH         shift and go to state 52
    SWITCH          shift and go to state 53
    CADENA          shift and go to state 56
    BOOLEAN         shift and go to state 57
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 58

    bloque                         shift and go to state 4
    bloques                        shift and go to state 59
    impresion                      shift and go to state 12
    asignacion                     shift and go to state 13
    funciones                      shift and go to state 14
    estructurasControl             shift and go to state 15
    estructurasDeDatos             shift and go to state 16
    comparaciones                  shift and go to state 17
    operaciones                    shift and go to state 18
    comentario                     shift and go to state 19
    print                          shift and go to state 20
    echo                           shift and go to state 21
    input                          shift and go to state 22
    valor                          shift and go to state 24
    funcion                        shift and go to state 25
    return                         shift and go to state 26
    while                          shift and go to state 27
    for                            shift and go to state 28
    if                             shift and go to state 29
    elseif                         shift and go to state 30
    else                           shift and go to state 31
    foreach                        shift and go to state 32
    switch                         shift and go to state 33
    queue                          shift and go to state 34
    stack                          shift and go to state 35
    array                          shift and go to state 36
    comparacion                    shift and go to state 37
    operacion                      shift and go to state 38
    variable                       shift and go to state 54
    NUMERO                         shift and go to state 55

state 5

    (52) operadorAritmetico -> SUMA .

    $end            reduce using rule 52 (operadorAritmetico -> SUMA .)
    IDENTIFICADOR   reduce using rule 52 (operadorAritmetico -> SUMA .)
    ENTERO          reduce using rule 52 (operadorAritmetico -> SUMA .)
    FLOTANTE        reduce using rule 52 (operadorAritmetico -> SUMA .)


state 6

    (53) operadorAritmetico -> RESTA .

    $end            reduce using rule 53 (operadorAritmetico -> RESTA .)
    IDENTIFICADOR   reduce using rule 53 (operadorAritmetico -> RESTA .)
    ENTERO          reduce using rule 53 (operadorAritmetico -> RESTA .)
    FLOTANTE        reduce using rule 53 (operadorAritmetico -> RESTA .)


state 7

    (54) operadorAritmetico -> MULT .

    $end            reduce using rule 54 (operadorAritmetico -> MULT .)
    IDENTIFICADOR   reduce using rule 54 (operadorAritmetico -> MULT .)
    ENTERO          reduce using rule 54 (operadorAritmetico -> MULT .)
    FLOTANTE        reduce using rule 54 (operadorAritmetico -> MULT .)


state 8

    (55) operadorAritmetico -> DIVISION .

    $end            reduce using rule 55 (operadorAritmetico -> DIVISION .)
    IDENTIFICADOR   reduce using rule 55 (operadorAritmetico -> DIVISION .)
    ENTERO          reduce using rule 55 (operadorAritmetico -> DIVISION .)
    FLOTANTE        reduce using rule 55 (operadorAritmetico -> DIVISION .)


state 9

    (56) operadorAritmetico -> DIVISIONENTERA .

    $end            reduce using rule 56 (operadorAritmetico -> DIVISIONENTERA .)
    IDENTIFICADOR   reduce using rule 56 (operadorAritmetico -> DIVISIONENTERA .)
    ENTERO          reduce using rule 56 (operadorAritmetico -> DIVISIONENTERA .)
    FLOTANTE        reduce using rule 56 (operadorAritmetico -> DIVISIONENTERA .)


state 10

    (57) operadorAritmetico -> MODULO .

    $end            reduce using rule 57 (operadorAritmetico -> MODULO .)
    IDENTIFICADOR   reduce using rule 57 (operadorAritmetico -> MODULO .)
    ENTERO          reduce using rule 57 (operadorAritmetico -> MODULO .)
    FLOTANTE        reduce using rule 57 (operadorAritmetico -> MODULO .)


state 11

    (58) operadorAritmetico -> POTENCIA .

    $end            reduce using rule 58 (operadorAritmetico -> POTENCIA .)
    IDENTIFICADOR   reduce using rule 58 (operadorAritmetico -> POTENCIA .)
    ENTERO          reduce using rule 58 (operadorAritmetico -> POTENCIA .)
    FLOTANTE        reduce using rule 58 (operadorAritmetico -> POTENCIA .)


state 12

    (5) bloque -> impresion .

    IDENTIFICADOR   reduce using rule 5 (bloque -> impresion .)
    COMENTARIO      reduce using rule 5 (bloque -> impresion .)
    LLAVEDER        reduce using rule 5 (bloque -> impresion .)
    PRINT           reduce using rule 5 (bloque -> impresion .)
    ECHO            reduce using rule 5 (bloque -> impresion .)
    FUNCTION        reduce using rule 5 (bloque -> impresion .)
    NAMEFUNCTION    reduce using rule 5 (bloque -> impresion .)
    RETURN          reduce using rule 5 (bloque -> impresion .)
    WHILE           reduce using rule 5 (bloque -> impresion .)
    FOR             reduce using rule 5 (bloque -> impresion .)
    IF              reduce using rule 5 (bloque -> impresion .)
    ELSEIF          reduce using rule 5 (bloque -> impresion .)
    ELSE            reduce using rule 5 (bloque -> impresion .)
    FOREACH         reduce using rule 5 (bloque -> impresion .)
    SWITCH          reduce using rule 5 (bloque -> impresion .)
    CADENA          reduce using rule 5 (bloque -> impresion .)
    BOOLEAN         reduce using rule 5 (bloque -> impresion .)
    ENTERO          reduce using rule 5 (bloque -> impresion .)
    FLOTANTE        reduce using rule 5 (bloque -> impresion .)
    $end            reduce using rule 5 (bloque -> impresion .)


state 13

    (6) bloque -> asignacion .

    IDENTIFICADOR   reduce using rule 6 (bloque -> asignacion .)
    COMENTARIO      reduce using rule 6 (bloque -> asignacion .)
    LLAVEDER        reduce using rule 6 (bloque -> asignacion .)
    PRINT           reduce using rule 6 (bloque -> asignacion .)
    ECHO            reduce using rule 6 (bloque -> asignacion .)
    FUNCTION        reduce using rule 6 (bloque -> asignacion .)
    NAMEFUNCTION    reduce using rule 6 (bloque -> asignacion .)
    RETURN          reduce using rule 6 (bloque -> asignacion .)
    WHILE           reduce using rule 6 (bloque -> asignacion .)
    FOR             reduce using rule 6 (bloque -> asignacion .)
    IF              reduce using rule 6 (bloque -> asignacion .)
    ELSEIF          reduce using rule 6 (bloque -> asignacion .)
    ELSE            reduce using rule 6 (bloque -> asignacion .)
    FOREACH         reduce using rule 6 (bloque -> asignacion .)
    SWITCH          reduce using rule 6 (bloque -> asignacion .)
    CADENA          reduce using rule 6 (bloque -> asignacion .)
    BOOLEAN         reduce using rule 6 (bloque -> asignacion .)
    ENTERO          reduce using rule 6 (bloque -> asignacion .)
    FLOTANTE        reduce using rule 6 (bloque -> asignacion .)
    $end            reduce using rule 6 (bloque -> asignacion .)


state 14

    (7) bloque -> funciones .

    IDENTIFICADOR   reduce using rule 7 (bloque -> funciones .)
    COMENTARIO      reduce using rule 7 (bloque -> funciones .)
    LLAVEDER        reduce using rule 7 (bloque -> funciones .)
    PRINT           reduce using rule 7 (bloque -> funciones .)
    ECHO            reduce using rule 7 (bloque -> funciones .)
    FUNCTION        reduce using rule 7 (bloque -> funciones .)
    NAMEFUNCTION    reduce using rule 7 (bloque -> funciones .)
    RETURN          reduce using rule 7 (bloque -> funciones .)
    WHILE           reduce using rule 7 (bloque -> funciones .)
    FOR             reduce using rule 7 (bloque -> funciones .)
    IF              reduce using rule 7 (bloque -> funciones .)
    ELSEIF          reduce using rule 7 (bloque -> funciones .)
    ELSE            reduce using rule 7 (bloque -> funciones .)
    FOREACH         reduce using rule 7 (bloque -> funciones .)
    SWITCH          reduce using rule 7 (bloque -> funciones .)
    CADENA          reduce using rule 7 (bloque -> funciones .)
    BOOLEAN         reduce using rule 7 (bloque -> funciones .)
    ENTERO          reduce using rule 7 (bloque -> funciones .)
    FLOTANTE        reduce using rule 7 (bloque -> funciones .)
    $end            reduce using rule 7 (bloque -> funciones .)


state 15

    (8) bloque -> estructurasControl .

    IDENTIFICADOR   reduce using rule 8 (bloque -> estructurasControl .)
    COMENTARIO      reduce using rule 8 (bloque -> estructurasControl .)
    LLAVEDER        reduce using rule 8 (bloque -> estructurasControl .)
    PRINT           reduce using rule 8 (bloque -> estructurasControl .)
    ECHO            reduce using rule 8 (bloque -> estructurasControl .)
    FUNCTION        reduce using rule 8 (bloque -> estructurasControl .)
    NAMEFUNCTION    reduce using rule 8 (bloque -> estructurasControl .)
    RETURN          reduce using rule 8 (bloque -> estructurasControl .)
    WHILE           reduce using rule 8 (bloque -> estructurasControl .)
    FOR             reduce using rule 8 (bloque -> estructurasControl .)
    IF              reduce using rule 8 (bloque -> estructurasControl .)
    ELSEIF          reduce using rule 8 (bloque -> estructurasControl .)
    ELSE            reduce using rule 8 (bloque -> estructurasControl .)
    FOREACH         reduce using rule 8 (bloque -> estructurasControl .)
    SWITCH          reduce using rule 8 (bloque -> estructurasControl .)
    CADENA          reduce using rule 8 (bloque -> estructurasControl .)
    BOOLEAN         reduce using rule 8 (bloque -> estructurasControl .)
    ENTERO          reduce using rule 8 (bloque -> estructurasControl .)
    FLOTANTE        reduce using rule 8 (bloque -> estructurasControl .)
    $end            reduce using rule 8 (bloque -> estructurasControl .)


state 16

    (9) bloque -> estructurasDeDatos .

    IDENTIFICADOR   reduce using rule 9 (bloque -> estructurasDeDatos .)
    COMENTARIO      reduce using rule 9 (bloque -> estructurasDeDatos .)
    LLAVEDER        reduce using rule 9 (bloque -> estructurasDeDatos .)
    PRINT           reduce using rule 9 (bloque -> estructurasDeDatos .)
    ECHO            reduce using rule 9 (bloque -> estructurasDeDatos .)
    FUNCTION        reduce using rule 9 (bloque -> estructurasDeDatos .)
    NAMEFUNCTION    reduce using rule 9 (bloque -> estructurasDeDatos .)
    RETURN          reduce using rule 9 (bloque -> estructurasDeDatos .)
    WHILE           reduce using rule 9 (bloque -> estructurasDeDatos .)
    FOR             reduce using rule 9 (bloque -> estructurasDeDatos .)
    IF              reduce using rule 9 (bloque -> estructurasDeDatos .)
    ELSEIF          reduce using rule 9 (bloque -> estructurasDeDatos .)
    ELSE            reduce using rule 9 (bloque -> estructurasDeDatos .)
    FOREACH         reduce using rule 9 (bloque -> estructurasDeDatos .)
    SWITCH          reduce using rule 9 (bloque -> estructurasDeDatos .)
    CADENA          reduce using rule 9 (bloque -> estructurasDeDatos .)
    BOOLEAN         reduce using rule 9 (bloque -> estructurasDeDatos .)
    ENTERO          reduce using rule 9 (bloque -> estructurasDeDatos .)
    FLOTANTE        reduce using rule 9 (bloque -> estructurasDeDatos .)
    $end            reduce using rule 9 (bloque -> estructurasDeDatos .)


state 17

    (10) bloque -> comparaciones .

    IDENTIFICADOR   reduce using rule 10 (bloque -> comparaciones .)
    COMENTARIO      reduce using rule 10 (bloque -> comparaciones .)
    LLAVEDER        reduce using rule 10 (bloque -> comparaciones .)
    PRINT           reduce using rule 10 (bloque -> comparaciones .)
    ECHO            reduce using rule 10 (bloque -> comparaciones .)
    FUNCTION        reduce using rule 10 (bloque -> comparaciones .)
    NAMEFUNCTION    reduce using rule 10 (bloque -> comparaciones .)
    RETURN          reduce using rule 10 (bloque -> comparaciones .)
    WHILE           reduce using rule 10 (bloque -> comparaciones .)
    FOR             reduce using rule 10 (bloque -> comparaciones .)
    IF              reduce using rule 10 (bloque -> comparaciones .)
    ELSEIF          reduce using rule 10 (bloque -> comparaciones .)
    ELSE            reduce using rule 10 (bloque -> comparaciones .)
    FOREACH         reduce using rule 10 (bloque -> comparaciones .)
    SWITCH          reduce using rule 10 (bloque -> comparaciones .)
    CADENA          reduce using rule 10 (bloque -> comparaciones .)
    BOOLEAN         reduce using rule 10 (bloque -> comparaciones .)
    ENTERO          reduce using rule 10 (bloque -> comparaciones .)
    FLOTANTE        reduce using rule 10 (bloque -> comparaciones .)
    $end            reduce using rule 10 (bloque -> comparaciones .)


state 18

    (11) bloque -> operaciones .

    IDENTIFICADOR   reduce using rule 11 (bloque -> operaciones .)
    COMENTARIO      reduce using rule 11 (bloque -> operaciones .)
    LLAVEDER        reduce using rule 11 (bloque -> operaciones .)
    PRINT           reduce using rule 11 (bloque -> operaciones .)
    ECHO            reduce using rule 11 (bloque -> operaciones .)
    FUNCTION        reduce using rule 11 (bloque -> operaciones .)
    NAMEFUNCTION    reduce using rule 11 (bloque -> operaciones .)
    RETURN          reduce using rule 11 (bloque -> operaciones .)
    WHILE           reduce using rule 11 (bloque -> operaciones .)
    FOR             reduce using rule 11 (bloque -> operaciones .)
    IF              reduce using rule 11 (bloque -> operaciones .)
    ELSEIF          reduce using rule 11 (bloque -> operaciones .)
    ELSE            reduce using rule 11 (bloque -> operaciones .)
    FOREACH         reduce using rule 11 (bloque -> operaciones .)
    SWITCH          reduce using rule 11 (bloque -> operaciones .)
    CADENA          reduce using rule 11 (bloque -> operaciones .)
    BOOLEAN         reduce using rule 11 (bloque -> operaciones .)
    ENTERO          reduce using rule 11 (bloque -> operaciones .)
    FLOTANTE        reduce using rule 11 (bloque -> operaciones .)
    $end            reduce using rule 11 (bloque -> operaciones .)


state 19

    (12) bloque -> comentario .

    IDENTIFICADOR   reduce using rule 12 (bloque -> comentario .)
    COMENTARIO      reduce using rule 12 (bloque -> comentario .)
    LLAVEDER        reduce using rule 12 (bloque -> comentario .)
    PRINT           reduce using rule 12 (bloque -> comentario .)
    ECHO            reduce using rule 12 (bloque -> comentario .)
    FUNCTION        reduce using rule 12 (bloque -> comentario .)
    NAMEFUNCTION    reduce using rule 12 (bloque -> comentario .)
    RETURN          reduce using rule 12 (bloque -> comentario .)
    WHILE           reduce using rule 12 (bloque -> comentario .)
    FOR             reduce using rule 12 (bloque -> comentario .)
    IF              reduce using rule 12 (bloque -> comentario .)
    ELSEIF          reduce using rule 12 (bloque -> comentario .)
    ELSE            reduce using rule 12 (bloque -> comentario .)
    FOREACH         reduce using rule 12 (bloque -> comentario .)
    SWITCH          reduce using rule 12 (bloque -> comentario .)
    CADENA          reduce using rule 12 (bloque -> comentario .)
    BOOLEAN         reduce using rule 12 (bloque -> comentario .)
    ENTERO          reduce using rule 12 (bloque -> comentario .)
    FLOTANTE        reduce using rule 12 (bloque -> comentario .)
    $end            reduce using rule 12 (bloque -> comentario .)


state 20

    (13) impresion -> print .

    IDENTIFICADOR   reduce using rule 13 (impresion -> print .)
    COMENTARIO      reduce using rule 13 (impresion -> print .)
    LLAVEDER        reduce using rule 13 (impresion -> print .)
    PRINT           reduce using rule 13 (impresion -> print .)
    ECHO            reduce using rule 13 (impresion -> print .)
    FUNCTION        reduce using rule 13 (impresion -> print .)
    NAMEFUNCTION    reduce using rule 13 (impresion -> print .)
    RETURN          reduce using rule 13 (impresion -> print .)
    WHILE           reduce using rule 13 (impresion -> print .)
    FOR             reduce using rule 13 (impresion -> print .)
    IF              reduce using rule 13 (impresion -> print .)
    ELSEIF          reduce using rule 13 (impresion -> print .)
    ELSE            reduce using rule 13 (impresion -> print .)
    FOREACH         reduce using rule 13 (impresion -> print .)
    SWITCH          reduce using rule 13 (impresion -> print .)
    CADENA          reduce using rule 13 (impresion -> print .)
    BOOLEAN         reduce using rule 13 (impresion -> print .)
    ENTERO          reduce using rule 13 (impresion -> print .)
    FLOTANTE        reduce using rule 13 (impresion -> print .)
    $end            reduce using rule 13 (impresion -> print .)


state 21

    (14) impresion -> echo .

    IDENTIFICADOR   reduce using rule 14 (impresion -> echo .)
    COMENTARIO      reduce using rule 14 (impresion -> echo .)
    LLAVEDER        reduce using rule 14 (impresion -> echo .)
    PRINT           reduce using rule 14 (impresion -> echo .)
    ECHO            reduce using rule 14 (impresion -> echo .)
    FUNCTION        reduce using rule 14 (impresion -> echo .)
    NAMEFUNCTION    reduce using rule 14 (impresion -> echo .)
    RETURN          reduce using rule 14 (impresion -> echo .)
    WHILE           reduce using rule 14 (impresion -> echo .)
    FOR             reduce using rule 14 (impresion -> echo .)
    IF              reduce using rule 14 (impresion -> echo .)
    ELSEIF          reduce using rule 14 (impresion -> echo .)
    ELSE            reduce using rule 14 (impresion -> echo .)
    FOREACH         reduce using rule 14 (impresion -> echo .)
    SWITCH          reduce using rule 14 (impresion -> echo .)
    CADENA          reduce using rule 14 (impresion -> echo .)
    BOOLEAN         reduce using rule 14 (impresion -> echo .)
    ENTERO          reduce using rule 14 (impresion -> echo .)
    FLOTANTE        reduce using rule 14 (impresion -> echo .)
    $end            reduce using rule 14 (impresion -> echo .)


state 22

    (15) impresion -> input .

    IDENTIFICADOR   reduce using rule 15 (impresion -> input .)
    COMENTARIO      reduce using rule 15 (impresion -> input .)
    LLAVEDER        reduce using rule 15 (impresion -> input .)
    PRINT           reduce using rule 15 (impresion -> input .)
    ECHO            reduce using rule 15 (impresion -> input .)
    FUNCTION        reduce using rule 15 (impresion -> input .)
    NAMEFUNCTION    reduce using rule 15 (impresion -> input .)
    RETURN          reduce using rule 15 (impresion -> input .)
    WHILE           reduce using rule 15 (impresion -> input .)
    FOR             reduce using rule 15 (impresion -> input .)
    IF              reduce using rule 15 (impresion -> input .)
    ELSEIF          reduce using rule 15 (impresion -> input .)
    ELSE            reduce using rule 15 (impresion -> input .)
    FOREACH         reduce using rule 15 (impresion -> input .)
    SWITCH          reduce using rule 15 (impresion -> input .)
    CADENA          reduce using rule 15 (impresion -> input .)
    BOOLEAN         reduce using rule 15 (impresion -> input .)
    ENTERO          reduce using rule 15 (impresion -> input .)
    FLOTANTE        reduce using rule 15 (impresion -> input .)
    $end            reduce using rule 15 (impresion -> input .)


state 23

    (59) asignacion -> IDENTIFICADOR . ASIGNAR valor PUNTOCOMA
    (50) operaciones -> IDENTIFICADOR . ASIGNAR operaciones
    (63) input -> IDENTIFICADOR . ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA
    (69) funcion -> IDENTIFICADOR . ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (103) queue -> IDENTIFICADOR . ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA
    (104) queue -> IDENTIFICADOR . FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
    (105) queue -> IDENTIFICADOR . FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA
    (106) queue -> IDENTIFICADOR . FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA
    (107) queue -> IDENTIFICADOR . FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (108) queue -> IDENTIFICADOR . FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (109) queue -> IDENTIFICADOR . FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (110) queue -> IDENTIFICADOR . FLECHASIMPLE VALID PARENIZ PARENDER
    (96) stack -> IDENTIFICADOR . FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA
    (97) stack -> IDENTIFICADOR . FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA
    (98) stack -> IDENTIFICADOR . ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA
    (99) stack -> IDENTIFICADOR . FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (100) stack -> IDENTIFICADOR . FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (101) stack -> IDENTIFICADOR . FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (102) stack -> IDENTIFICADOR . FLECHASIMPLE VALID PARENIZ PARENDER
    (111) array -> IDENTIFICADOR . ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA
    (112) array -> IDENTIFICADOR . ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA
    (113) array -> IDENTIFICADOR . ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA
    (36) variable -> IDENTIFICADOR .
    (27) valor -> IDENTIFICADOR .

    ASIGNAR         shift and go to state 60
    FLECHASIMPLE    shift and go to state 61
    MAYORQUE        reduce using rule 36 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 36 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 36 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 36 (variable -> IDENTIFICADOR .)
    SUMA            reduce using rule 36 (variable -> IDENTIFICADOR .)
    RESTA           reduce using rule 36 (variable -> IDENTIFICADOR .)
    MULT            reduce using rule 36 (variable -> IDENTIFICADOR .)
    DIVISION        reduce using rule 36 (variable -> IDENTIFICADOR .)
    DIVISIONENTERA  reduce using rule 36 (variable -> IDENTIFICADOR .)
    MODULO          reduce using rule 36 (variable -> IDENTIFICADOR .)
    POTENCIA        reduce using rule 36 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 27 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 27 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 27 (valor -> IDENTIFICADOR .)


state 24

    (40) comparacion -> valor . comparador valor
    (32) comparador -> . IDENTICO
    (33) comparador -> . NOIDENTICO
    (34) comparador -> . IGUAL

    IDENTICO        shift and go to state 63
    NOIDENTICO      shift and go to state 64
    IGUAL           shift and go to state 65

    comparador                     shift and go to state 62

state 25

    (16) funciones -> funcion .

    IDENTIFICADOR   reduce using rule 16 (funciones -> funcion .)
    COMENTARIO      reduce using rule 16 (funciones -> funcion .)
    LLAVEDER        reduce using rule 16 (funciones -> funcion .)
    PRINT           reduce using rule 16 (funciones -> funcion .)
    ECHO            reduce using rule 16 (funciones -> funcion .)
    FUNCTION        reduce using rule 16 (funciones -> funcion .)
    NAMEFUNCTION    reduce using rule 16 (funciones -> funcion .)
    RETURN          reduce using rule 16 (funciones -> funcion .)
    WHILE           reduce using rule 16 (funciones -> funcion .)
    FOR             reduce using rule 16 (funciones -> funcion .)
    IF              reduce using rule 16 (funciones -> funcion .)
    ELSEIF          reduce using rule 16 (funciones -> funcion .)
    ELSE            reduce using rule 16 (funciones -> funcion .)
    FOREACH         reduce using rule 16 (funciones -> funcion .)
    SWITCH          reduce using rule 16 (funciones -> funcion .)
    CADENA          reduce using rule 16 (funciones -> funcion .)
    BOOLEAN         reduce using rule 16 (funciones -> funcion .)
    ENTERO          reduce using rule 16 (funciones -> funcion .)
    FLOTANTE        reduce using rule 16 (funciones -> funcion .)
    $end            reduce using rule 16 (funciones -> funcion .)


state 26

    (17) funciones -> return .

    IDENTIFICADOR   reduce using rule 17 (funciones -> return .)
    COMENTARIO      reduce using rule 17 (funciones -> return .)
    LLAVEDER        reduce using rule 17 (funciones -> return .)
    PRINT           reduce using rule 17 (funciones -> return .)
    ECHO            reduce using rule 17 (funciones -> return .)
    FUNCTION        reduce using rule 17 (funciones -> return .)
    NAMEFUNCTION    reduce using rule 17 (funciones -> return .)
    RETURN          reduce using rule 17 (funciones -> return .)
    WHILE           reduce using rule 17 (funciones -> return .)
    FOR             reduce using rule 17 (funciones -> return .)
    IF              reduce using rule 17 (funciones -> return .)
    ELSEIF          reduce using rule 17 (funciones -> return .)
    ELSE            reduce using rule 17 (funciones -> return .)
    FOREACH         reduce using rule 17 (funciones -> return .)
    SWITCH          reduce using rule 17 (funciones -> return .)
    CADENA          reduce using rule 17 (funciones -> return .)
    BOOLEAN         reduce using rule 17 (funciones -> return .)
    ENTERO          reduce using rule 17 (funciones -> return .)
    FLOTANTE        reduce using rule 17 (funciones -> return .)
    $end            reduce using rule 17 (funciones -> return .)


state 27

    (71) estructurasControl -> while .

    IDENTIFICADOR   reduce using rule 71 (estructurasControl -> while .)
    COMENTARIO      reduce using rule 71 (estructurasControl -> while .)
    LLAVEDER        reduce using rule 71 (estructurasControl -> while .)
    PRINT           reduce using rule 71 (estructurasControl -> while .)
    ECHO            reduce using rule 71 (estructurasControl -> while .)
    FUNCTION        reduce using rule 71 (estructurasControl -> while .)
    NAMEFUNCTION    reduce using rule 71 (estructurasControl -> while .)
    RETURN          reduce using rule 71 (estructurasControl -> while .)
    WHILE           reduce using rule 71 (estructurasControl -> while .)
    FOR             reduce using rule 71 (estructurasControl -> while .)
    IF              reduce using rule 71 (estructurasControl -> while .)
    ELSEIF          reduce using rule 71 (estructurasControl -> while .)
    ELSE            reduce using rule 71 (estructurasControl -> while .)
    FOREACH         reduce using rule 71 (estructurasControl -> while .)
    SWITCH          reduce using rule 71 (estructurasControl -> while .)
    CADENA          reduce using rule 71 (estructurasControl -> while .)
    BOOLEAN         reduce using rule 71 (estructurasControl -> while .)
    ENTERO          reduce using rule 71 (estructurasControl -> while .)
    FLOTANTE        reduce using rule 71 (estructurasControl -> while .)
    $end            reduce using rule 71 (estructurasControl -> while .)


state 28

    (72) estructurasControl -> for .

    IDENTIFICADOR   reduce using rule 72 (estructurasControl -> for .)
    COMENTARIO      reduce using rule 72 (estructurasControl -> for .)
    LLAVEDER        reduce using rule 72 (estructurasControl -> for .)
    PRINT           reduce using rule 72 (estructurasControl -> for .)
    ECHO            reduce using rule 72 (estructurasControl -> for .)
    FUNCTION        reduce using rule 72 (estructurasControl -> for .)
    NAMEFUNCTION    reduce using rule 72 (estructurasControl -> for .)
    RETURN          reduce using rule 72 (estructurasControl -> for .)
    WHILE           reduce using rule 72 (estructurasControl -> for .)
    FOR             reduce using rule 72 (estructurasControl -> for .)
    IF              reduce using rule 72 (estructurasControl -> for .)
    ELSEIF          reduce using rule 72 (estructurasControl -> for .)
    ELSE            reduce using rule 72 (estructurasControl -> for .)
    FOREACH         reduce using rule 72 (estructurasControl -> for .)
    SWITCH          reduce using rule 72 (estructurasControl -> for .)
    CADENA          reduce using rule 72 (estructurasControl -> for .)
    BOOLEAN         reduce using rule 72 (estructurasControl -> for .)
    ENTERO          reduce using rule 72 (estructurasControl -> for .)
    FLOTANTE        reduce using rule 72 (estructurasControl -> for .)
    $end            reduce using rule 72 (estructurasControl -> for .)


state 29

    (73) estructurasControl -> if .

    IDENTIFICADOR   reduce using rule 73 (estructurasControl -> if .)
    COMENTARIO      reduce using rule 73 (estructurasControl -> if .)
    LLAVEDER        reduce using rule 73 (estructurasControl -> if .)
    PRINT           reduce using rule 73 (estructurasControl -> if .)
    ECHO            reduce using rule 73 (estructurasControl -> if .)
    FUNCTION        reduce using rule 73 (estructurasControl -> if .)
    NAMEFUNCTION    reduce using rule 73 (estructurasControl -> if .)
    RETURN          reduce using rule 73 (estructurasControl -> if .)
    WHILE           reduce using rule 73 (estructurasControl -> if .)
    FOR             reduce using rule 73 (estructurasControl -> if .)
    IF              reduce using rule 73 (estructurasControl -> if .)
    ELSEIF          reduce using rule 73 (estructurasControl -> if .)
    ELSE            reduce using rule 73 (estructurasControl -> if .)
    FOREACH         reduce using rule 73 (estructurasControl -> if .)
    SWITCH          reduce using rule 73 (estructurasControl -> if .)
    CADENA          reduce using rule 73 (estructurasControl -> if .)
    BOOLEAN         reduce using rule 73 (estructurasControl -> if .)
    ENTERO          reduce using rule 73 (estructurasControl -> if .)
    FLOTANTE        reduce using rule 73 (estructurasControl -> if .)
    $end            reduce using rule 73 (estructurasControl -> if .)


state 30

    (74) estructurasControl -> elseif .

    IDENTIFICADOR   reduce using rule 74 (estructurasControl -> elseif .)
    COMENTARIO      reduce using rule 74 (estructurasControl -> elseif .)
    LLAVEDER        reduce using rule 74 (estructurasControl -> elseif .)
    PRINT           reduce using rule 74 (estructurasControl -> elseif .)
    ECHO            reduce using rule 74 (estructurasControl -> elseif .)
    FUNCTION        reduce using rule 74 (estructurasControl -> elseif .)
    NAMEFUNCTION    reduce using rule 74 (estructurasControl -> elseif .)
    RETURN          reduce using rule 74 (estructurasControl -> elseif .)
    WHILE           reduce using rule 74 (estructurasControl -> elseif .)
    FOR             reduce using rule 74 (estructurasControl -> elseif .)
    IF              reduce using rule 74 (estructurasControl -> elseif .)
    ELSEIF          reduce using rule 74 (estructurasControl -> elseif .)
    ELSE            reduce using rule 74 (estructurasControl -> elseif .)
    FOREACH         reduce using rule 74 (estructurasControl -> elseif .)
    SWITCH          reduce using rule 74 (estructurasControl -> elseif .)
    CADENA          reduce using rule 74 (estructurasControl -> elseif .)
    BOOLEAN         reduce using rule 74 (estructurasControl -> elseif .)
    ENTERO          reduce using rule 74 (estructurasControl -> elseif .)
    FLOTANTE        reduce using rule 74 (estructurasControl -> elseif .)
    $end            reduce using rule 74 (estructurasControl -> elseif .)


state 31

    (75) estructurasControl -> else .

    IDENTIFICADOR   reduce using rule 75 (estructurasControl -> else .)
    COMENTARIO      reduce using rule 75 (estructurasControl -> else .)
    LLAVEDER        reduce using rule 75 (estructurasControl -> else .)
    PRINT           reduce using rule 75 (estructurasControl -> else .)
    ECHO            reduce using rule 75 (estructurasControl -> else .)
    FUNCTION        reduce using rule 75 (estructurasControl -> else .)
    NAMEFUNCTION    reduce using rule 75 (estructurasControl -> else .)
    RETURN          reduce using rule 75 (estructurasControl -> else .)
    WHILE           reduce using rule 75 (estructurasControl -> else .)
    FOR             reduce using rule 75 (estructurasControl -> else .)
    IF              reduce using rule 75 (estructurasControl -> else .)
    ELSEIF          reduce using rule 75 (estructurasControl -> else .)
    ELSE            reduce using rule 75 (estructurasControl -> else .)
    FOREACH         reduce using rule 75 (estructurasControl -> else .)
    SWITCH          reduce using rule 75 (estructurasControl -> else .)
    CADENA          reduce using rule 75 (estructurasControl -> else .)
    BOOLEAN         reduce using rule 75 (estructurasControl -> else .)
    ENTERO          reduce using rule 75 (estructurasControl -> else .)
    FLOTANTE        reduce using rule 75 (estructurasControl -> else .)
    $end            reduce using rule 75 (estructurasControl -> else .)


state 32

    (76) estructurasControl -> foreach .

    IDENTIFICADOR   reduce using rule 76 (estructurasControl -> foreach .)
    COMENTARIO      reduce using rule 76 (estructurasControl -> foreach .)
    LLAVEDER        reduce using rule 76 (estructurasControl -> foreach .)
    PRINT           reduce using rule 76 (estructurasControl -> foreach .)
    ECHO            reduce using rule 76 (estructurasControl -> foreach .)
    FUNCTION        reduce using rule 76 (estructurasControl -> foreach .)
    NAMEFUNCTION    reduce using rule 76 (estructurasControl -> foreach .)
    RETURN          reduce using rule 76 (estructurasControl -> foreach .)
    WHILE           reduce using rule 76 (estructurasControl -> foreach .)
    FOR             reduce using rule 76 (estructurasControl -> foreach .)
    IF              reduce using rule 76 (estructurasControl -> foreach .)
    ELSEIF          reduce using rule 76 (estructurasControl -> foreach .)
    ELSE            reduce using rule 76 (estructurasControl -> foreach .)
    FOREACH         reduce using rule 76 (estructurasControl -> foreach .)
    SWITCH          reduce using rule 76 (estructurasControl -> foreach .)
    CADENA          reduce using rule 76 (estructurasControl -> foreach .)
    BOOLEAN         reduce using rule 76 (estructurasControl -> foreach .)
    ENTERO          reduce using rule 76 (estructurasControl -> foreach .)
    FLOTANTE        reduce using rule 76 (estructurasControl -> foreach .)
    $end            reduce using rule 76 (estructurasControl -> foreach .)


state 33

    (77) estructurasControl -> switch .

    IDENTIFICADOR   reduce using rule 77 (estructurasControl -> switch .)
    COMENTARIO      reduce using rule 77 (estructurasControl -> switch .)
    LLAVEDER        reduce using rule 77 (estructurasControl -> switch .)
    PRINT           reduce using rule 77 (estructurasControl -> switch .)
    ECHO            reduce using rule 77 (estructurasControl -> switch .)
    FUNCTION        reduce using rule 77 (estructurasControl -> switch .)
    NAMEFUNCTION    reduce using rule 77 (estructurasControl -> switch .)
    RETURN          reduce using rule 77 (estructurasControl -> switch .)
    WHILE           reduce using rule 77 (estructurasControl -> switch .)
    FOR             reduce using rule 77 (estructurasControl -> switch .)
    IF              reduce using rule 77 (estructurasControl -> switch .)
    ELSEIF          reduce using rule 77 (estructurasControl -> switch .)
    ELSE            reduce using rule 77 (estructurasControl -> switch .)
    FOREACH         reduce using rule 77 (estructurasControl -> switch .)
    SWITCH          reduce using rule 77 (estructurasControl -> switch .)
    CADENA          reduce using rule 77 (estructurasControl -> switch .)
    BOOLEAN         reduce using rule 77 (estructurasControl -> switch .)
    ENTERO          reduce using rule 77 (estructurasControl -> switch .)
    FLOTANTE        reduce using rule 77 (estructurasControl -> switch .)
    $end            reduce using rule 77 (estructurasControl -> switch .)


state 34

    (93) estructurasDeDatos -> queue .

    IDENTIFICADOR   reduce using rule 93 (estructurasDeDatos -> queue .)
    COMENTARIO      reduce using rule 93 (estructurasDeDatos -> queue .)
    LLAVEDER        reduce using rule 93 (estructurasDeDatos -> queue .)
    PRINT           reduce using rule 93 (estructurasDeDatos -> queue .)
    ECHO            reduce using rule 93 (estructurasDeDatos -> queue .)
    FUNCTION        reduce using rule 93 (estructurasDeDatos -> queue .)
    NAMEFUNCTION    reduce using rule 93 (estructurasDeDatos -> queue .)
    RETURN          reduce using rule 93 (estructurasDeDatos -> queue .)
    WHILE           reduce using rule 93 (estructurasDeDatos -> queue .)
    FOR             reduce using rule 93 (estructurasDeDatos -> queue .)
    IF              reduce using rule 93 (estructurasDeDatos -> queue .)
    ELSEIF          reduce using rule 93 (estructurasDeDatos -> queue .)
    ELSE            reduce using rule 93 (estructurasDeDatos -> queue .)
    FOREACH         reduce using rule 93 (estructurasDeDatos -> queue .)
    SWITCH          reduce using rule 93 (estructurasDeDatos -> queue .)
    CADENA          reduce using rule 93 (estructurasDeDatos -> queue .)
    BOOLEAN         reduce using rule 93 (estructurasDeDatos -> queue .)
    ENTERO          reduce using rule 93 (estructurasDeDatos -> queue .)
    FLOTANTE        reduce using rule 93 (estructurasDeDatos -> queue .)
    $end            reduce using rule 93 (estructurasDeDatos -> queue .)


state 35

    (94) estructurasDeDatos -> stack .

    IDENTIFICADOR   reduce using rule 94 (estructurasDeDatos -> stack .)
    COMENTARIO      reduce using rule 94 (estructurasDeDatos -> stack .)
    LLAVEDER        reduce using rule 94 (estructurasDeDatos -> stack .)
    PRINT           reduce using rule 94 (estructurasDeDatos -> stack .)
    ECHO            reduce using rule 94 (estructurasDeDatos -> stack .)
    FUNCTION        reduce using rule 94 (estructurasDeDatos -> stack .)
    NAMEFUNCTION    reduce using rule 94 (estructurasDeDatos -> stack .)
    RETURN          reduce using rule 94 (estructurasDeDatos -> stack .)
    WHILE           reduce using rule 94 (estructurasDeDatos -> stack .)
    FOR             reduce using rule 94 (estructurasDeDatos -> stack .)
    IF              reduce using rule 94 (estructurasDeDatos -> stack .)
    ELSEIF          reduce using rule 94 (estructurasDeDatos -> stack .)
    ELSE            reduce using rule 94 (estructurasDeDatos -> stack .)
    FOREACH         reduce using rule 94 (estructurasDeDatos -> stack .)
    SWITCH          reduce using rule 94 (estructurasDeDatos -> stack .)
    CADENA          reduce using rule 94 (estructurasDeDatos -> stack .)
    BOOLEAN         reduce using rule 94 (estructurasDeDatos -> stack .)
    ENTERO          reduce using rule 94 (estructurasDeDatos -> stack .)
    FLOTANTE        reduce using rule 94 (estructurasDeDatos -> stack .)
    $end            reduce using rule 94 (estructurasDeDatos -> stack .)


state 36

    (95) estructurasDeDatos -> array .

    IDENTIFICADOR   reduce using rule 95 (estructurasDeDatos -> array .)
    COMENTARIO      reduce using rule 95 (estructurasDeDatos -> array .)
    LLAVEDER        reduce using rule 95 (estructurasDeDatos -> array .)
    PRINT           reduce using rule 95 (estructurasDeDatos -> array .)
    ECHO            reduce using rule 95 (estructurasDeDatos -> array .)
    FUNCTION        reduce using rule 95 (estructurasDeDatos -> array .)
    NAMEFUNCTION    reduce using rule 95 (estructurasDeDatos -> array .)
    RETURN          reduce using rule 95 (estructurasDeDatos -> array .)
    WHILE           reduce using rule 95 (estructurasDeDatos -> array .)
    FOR             reduce using rule 95 (estructurasDeDatos -> array .)
    IF              reduce using rule 95 (estructurasDeDatos -> array .)
    ELSEIF          reduce using rule 95 (estructurasDeDatos -> array .)
    ELSE            reduce using rule 95 (estructurasDeDatos -> array .)
    FOREACH         reduce using rule 95 (estructurasDeDatos -> array .)
    SWITCH          reduce using rule 95 (estructurasDeDatos -> array .)
    CADENA          reduce using rule 95 (estructurasDeDatos -> array .)
    BOOLEAN         reduce using rule 95 (estructurasDeDatos -> array .)
    ENTERO          reduce using rule 95 (estructurasDeDatos -> array .)
    FLOTANTE        reduce using rule 95 (estructurasDeDatos -> array .)
    $end            reduce using rule 95 (estructurasDeDatos -> array .)


state 37

    (37) comparaciones -> comparacion .
    (38) comparaciones -> comparacion . operadores comparaciones
    (45) operadores -> . OPERADOR
    (46) operadores -> . AND
    (47) operadores -> . OR

    IDENTIFICADOR   reduce using rule 37 (comparaciones -> comparacion .)
    COMENTARIO      reduce using rule 37 (comparaciones -> comparacion .)
    LLAVEDER        reduce using rule 37 (comparaciones -> comparacion .)
    PRINT           reduce using rule 37 (comparaciones -> comparacion .)
    ECHO            reduce using rule 37 (comparaciones -> comparacion .)
    FUNCTION        reduce using rule 37 (comparaciones -> comparacion .)
    NAMEFUNCTION    reduce using rule 37 (comparaciones -> comparacion .)
    RETURN          reduce using rule 37 (comparaciones -> comparacion .)
    WHILE           reduce using rule 37 (comparaciones -> comparacion .)
    FOR             reduce using rule 37 (comparaciones -> comparacion .)
    IF              reduce using rule 37 (comparaciones -> comparacion .)
    ELSEIF          reduce using rule 37 (comparaciones -> comparacion .)
    ELSE            reduce using rule 37 (comparaciones -> comparacion .)
    FOREACH         reduce using rule 37 (comparaciones -> comparacion .)
    SWITCH          reduce using rule 37 (comparaciones -> comparacion .)
    CADENA          reduce using rule 37 (comparaciones -> comparacion .)
    BOOLEAN         reduce using rule 37 (comparaciones -> comparacion .)
    ENTERO          reduce using rule 37 (comparaciones -> comparacion .)
    FLOTANTE        reduce using rule 37 (comparaciones -> comparacion .)
    $end            reduce using rule 37 (comparaciones -> comparacion .)
    PARENDER        reduce using rule 37 (comparaciones -> comparacion .)
    OPERADOR        shift and go to state 67
    AND             shift and go to state 68
    OR              shift and go to state 69

    operadores                     shift and go to state 66

state 38

    (48) operaciones -> operacion .
    (49) operaciones -> operacion . operadorAritmetico operaciones
    (52) operadorAritmetico -> . SUMA
    (53) operadorAritmetico -> . RESTA
    (54) operadorAritmetico -> . MULT
    (55) operadorAritmetico -> . DIVISION
    (56) operadorAritmetico -> . DIVISIONENTERA
    (57) operadorAritmetico -> . MODULO
    (58) operadorAritmetico -> . POTENCIA

    IDENTIFICADOR   reduce using rule 48 (operaciones -> operacion .)
    COMENTARIO      reduce using rule 48 (operaciones -> operacion .)
    LLAVEDER        reduce using rule 48 (operaciones -> operacion .)
    PRINT           reduce using rule 48 (operaciones -> operacion .)
    ECHO            reduce using rule 48 (operaciones -> operacion .)
    FUNCTION        reduce using rule 48 (operaciones -> operacion .)
    NAMEFUNCTION    reduce using rule 48 (operaciones -> operacion .)
    RETURN          reduce using rule 48 (operaciones -> operacion .)
    WHILE           reduce using rule 48 (operaciones -> operacion .)
    FOR             reduce using rule 48 (operaciones -> operacion .)
    IF              reduce using rule 48 (operaciones -> operacion .)
    ELSEIF          reduce using rule 48 (operaciones -> operacion .)
    ELSE            reduce using rule 48 (operaciones -> operacion .)
    FOREACH         reduce using rule 48 (operaciones -> operacion .)
    SWITCH          reduce using rule 48 (operaciones -> operacion .)
    CADENA          reduce using rule 48 (operaciones -> operacion .)
    BOOLEAN         reduce using rule 48 (operaciones -> operacion .)
    ENTERO          reduce using rule 48 (operaciones -> operacion .)
    FLOTANTE        reduce using rule 48 (operaciones -> operacion .)
    $end            reduce using rule 48 (operaciones -> operacion .)
    SUMA            shift and go to state 5
    RESTA           shift and go to state 6
    MULT            shift and go to state 7
    DIVISION        shift and go to state 8
    DIVISIONENTERA  shift and go to state 9
    MODULO          shift and go to state 10
    POTENCIA        shift and go to state 11

    operadorAritmetico             shift and go to state 70

state 39

    (18) comentario -> COMENTARIO .

    IDENTIFICADOR   reduce using rule 18 (comentario -> COMENTARIO .)
    COMENTARIO      reduce using rule 18 (comentario -> COMENTARIO .)
    LLAVEDER        reduce using rule 18 (comentario -> COMENTARIO .)
    PRINT           reduce using rule 18 (comentario -> COMENTARIO .)
    ECHO            reduce using rule 18 (comentario -> COMENTARIO .)
    FUNCTION        reduce using rule 18 (comentario -> COMENTARIO .)
    NAMEFUNCTION    reduce using rule 18 (comentario -> COMENTARIO .)
    RETURN          reduce using rule 18 (comentario -> COMENTARIO .)
    WHILE           reduce using rule 18 (comentario -> COMENTARIO .)
    FOR             reduce using rule 18 (comentario -> COMENTARIO .)
    IF              reduce using rule 18 (comentario -> COMENTARIO .)
    ELSEIF          reduce using rule 18 (comentario -> COMENTARIO .)
    ELSE            reduce using rule 18 (comentario -> COMENTARIO .)
    FOREACH         reduce using rule 18 (comentario -> COMENTARIO .)
    SWITCH          reduce using rule 18 (comentario -> COMENTARIO .)
    CADENA          reduce using rule 18 (comentario -> COMENTARIO .)
    BOOLEAN         reduce using rule 18 (comentario -> COMENTARIO .)
    ENTERO          reduce using rule 18 (comentario -> COMENTARIO .)
    FLOTANTE        reduce using rule 18 (comentario -> COMENTARIO .)
    $end            reduce using rule 18 (comentario -> COMENTARIO .)


state 40

    (19) comentario -> LLAVEDER .
    (87) elseif -> LLAVEDER . ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (88) elseif -> LLAVEDER . ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (91) else -> LLAVEDER . ELSE LLAVEIZ

  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    IDENTIFICADOR   reduce using rule 19 (comentario -> LLAVEDER .)
    COMENTARIO      reduce using rule 19 (comentario -> LLAVEDER .)
    LLAVEDER        reduce using rule 19 (comentario -> LLAVEDER .)
    PRINT           reduce using rule 19 (comentario -> LLAVEDER .)
    ECHO            reduce using rule 19 (comentario -> LLAVEDER .)
    FUNCTION        reduce using rule 19 (comentario -> LLAVEDER .)
    NAMEFUNCTION    reduce using rule 19 (comentario -> LLAVEDER .)
    RETURN          reduce using rule 19 (comentario -> LLAVEDER .)
    WHILE           reduce using rule 19 (comentario -> LLAVEDER .)
    FOR             reduce using rule 19 (comentario -> LLAVEDER .)
    IF              reduce using rule 19 (comentario -> LLAVEDER .)
    FOREACH         reduce using rule 19 (comentario -> LLAVEDER .)
    SWITCH          reduce using rule 19 (comentario -> LLAVEDER .)
    CADENA          reduce using rule 19 (comentario -> LLAVEDER .)
    BOOLEAN         reduce using rule 19 (comentario -> LLAVEDER .)
    ENTERO          reduce using rule 19 (comentario -> LLAVEDER .)
    FLOTANTE        reduce using rule 19 (comentario -> LLAVEDER .)
    $end            reduce using rule 19 (comentario -> LLAVEDER .)
    ELSEIF          shift and go to state 71
    ELSE            shift and go to state 72

  ! ELSEIF          [ reduce using rule 19 (comentario -> LLAVEDER .) ]
  ! ELSE            [ reduce using rule 19 (comentario -> LLAVEDER .) ]


state 41

    (60) print -> PRINT . PARENIZ valores PARENDER PUNTOCOMA
    (61) print -> PRINT . valor PUNTOCOMA
    (62) print -> PRINT . PARENIZ PARENDER PUNTOCOMA
    (24) valor -> . NUMERO
    (25) valor -> . CADENA
    (26) valor -> . BOOLEAN
    (27) valor -> . IDENTIFICADOR
    (22) NUMERO -> . ENTERO
    (23) NUMERO -> . FLOTANTE

    PARENIZ         shift and go to state 73
    CADENA          shift and go to state 56
    BOOLEAN         shift and go to state 57
    IDENTIFICADOR   shift and go to state 76
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 58

    valor                          shift and go to state 74
    NUMERO                         shift and go to state 75

state 42

    (64) echo -> ECHO . valores PUNTOCOMA
    (20) valores -> . valor
    (21) valores -> . valor COMA valores
    (24) valor -> . NUMERO
    (25) valor -> . CADENA
    (26) valor -> . BOOLEAN
    (27) valor -> . IDENTIFICADOR
    (22) NUMERO -> . ENTERO
    (23) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 56
    BOOLEAN         shift and go to state 57
    IDENTIFICADOR   shift and go to state 76
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 58

    valores                        shift and go to state 77
    valor                          shift and go to state 78
    NUMERO                         shift and go to state 75

state 43

    (65) funcion -> FUNCTION . NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ

    NAMEFUNCTION    shift and go to state 79


state 44

    (68) funcion -> NAMEFUNCTION . PARENIZ parametro PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 80


state 45

    (70) return -> RETURN . IDENTIFICADOR PUNTOCOMA

    IDENTIFICADOR   shift and go to state 81


state 46

    (78) while -> WHILE . PARENIZ comparaciones PARENDER LLAVEIZ

    PARENIZ         shift and go to state 82


state 47

    (79) for -> FOR . PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    PARENIZ         shift and go to state 83


state 48

    (22) NUMERO -> ENTERO .

    MAYORQUE        reduce using rule 22 (NUMERO -> ENTERO .)
    MAYORIGUALQUE   reduce using rule 22 (NUMERO -> ENTERO .)
    MENORQUE        reduce using rule 22 (NUMERO -> ENTERO .)
    MENORIGUALQUE   reduce using rule 22 (NUMERO -> ENTERO .)
    SUMA            reduce using rule 22 (NUMERO -> ENTERO .)
    RESTA           reduce using rule 22 (NUMERO -> ENTERO .)
    MULT            reduce using rule 22 (NUMERO -> ENTERO .)
    DIVISION        reduce using rule 22 (NUMERO -> ENTERO .)
    DIVISIONENTERA  reduce using rule 22 (NUMERO -> ENTERO .)
    MODULO          reduce using rule 22 (NUMERO -> ENTERO .)
    POTENCIA        reduce using rule 22 (NUMERO -> ENTERO .)
    IDENTICO        reduce using rule 22 (NUMERO -> ENTERO .)
    NOIDENTICO      reduce using rule 22 (NUMERO -> ENTERO .)
    IGUAL           reduce using rule 22 (NUMERO -> ENTERO .)
    PUNTOCOMA       reduce using rule 22 (NUMERO -> ENTERO .)
    COMA            reduce using rule 22 (NUMERO -> ENTERO .)
    OPERADOR        reduce using rule 22 (NUMERO -> ENTERO .)
    AND             reduce using rule 22 (NUMERO -> ENTERO .)
    OR              reduce using rule 22 (NUMERO -> ENTERO .)
    IDENTIFICADOR   reduce using rule 22 (NUMERO -> ENTERO .)
    COMENTARIO      reduce using rule 22 (NUMERO -> ENTERO .)
    LLAVEDER        reduce using rule 22 (NUMERO -> ENTERO .)
    PRINT           reduce using rule 22 (NUMERO -> ENTERO .)
    ECHO            reduce using rule 22 (NUMERO -> ENTERO .)
    FUNCTION        reduce using rule 22 (NUMERO -> ENTERO .)
    NAMEFUNCTION    reduce using rule 22 (NUMERO -> ENTERO .)
    RETURN          reduce using rule 22 (NUMERO -> ENTERO .)
    WHILE           reduce using rule 22 (NUMERO -> ENTERO .)
    FOR             reduce using rule 22 (NUMERO -> ENTERO .)
    IF              reduce using rule 22 (NUMERO -> ENTERO .)
    ELSEIF          reduce using rule 22 (NUMERO -> ENTERO .)
    ELSE            reduce using rule 22 (NUMERO -> ENTERO .)
    FOREACH         reduce using rule 22 (NUMERO -> ENTERO .)
    SWITCH          reduce using rule 22 (NUMERO -> ENTERO .)
    CADENA          reduce using rule 22 (NUMERO -> ENTERO .)
    BOOLEAN         reduce using rule 22 (NUMERO -> ENTERO .)
    ENTERO          reduce using rule 22 (NUMERO -> ENTERO .)
    FLOTANTE        reduce using rule 22 (NUMERO -> ENTERO .)
    $end            reduce using rule 22 (NUMERO -> ENTERO .)
    PARENDER        reduce using rule 22 (NUMERO -> ENTERO .)
    CORCHETEDER     reduce using rule 22 (NUMERO -> ENTERO .)
    DOSPUNTOS       reduce using rule 22 (NUMERO -> ENTERO .)


state 49

    (85) if -> IF . PARENIZ comparaciones PARENDER LLAVEIZ
    (86) if -> IF . PARENIZ IDENTIFICADOR PARENDER LLAVEIZ

    PARENIZ         shift and go to state 84


state 50

    (89) elseif -> ELSEIF . PARENIZ comparaciones PARENDER LLAVEIZ
    (90) elseif -> ELSEIF . PARENIZ IDENTIFICADOR PARENDER LLAVEIZ

    PARENIZ         shift and go to state 85


state 51

    (92) else -> ELSE . LLAVEIZ

    LLAVEIZ         shift and go to state 86


state 52

    (80) foreach -> FOREACH . PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ

    PARENIZ         shift and go to state 87


state 53

    (81) switch -> SWITCH . PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER

    PARENIZ         shift and go to state 88


state 54

    (39) comparacion -> variable . comparadorNum variable
    (51) operacion -> variable . operadorAritmetico variable
    (28) comparadorNum -> . MAYORQUE
    (29) comparadorNum -> . MAYORIGUALQUE
    (30) comparadorNum -> . MENORQUE
    (31) comparadorNum -> . MENORIGUALQUE
    (52) operadorAritmetico -> . SUMA
    (53) operadorAritmetico -> . RESTA
    (54) operadorAritmetico -> . MULT
    (55) operadorAritmetico -> . DIVISION
    (56) operadorAritmetico -> . DIVISIONENTERA
    (57) operadorAritmetico -> . MODULO
    (58) operadorAritmetico -> . POTENCIA

    MAYORQUE        shift and go to state 91
    MAYORIGUALQUE   shift and go to state 92
    MENORQUE        shift and go to state 93
    MENORIGUALQUE   shift and go to state 94
    SUMA            shift and go to state 5
    RESTA           shift and go to state 6
    MULT            shift and go to state 7
    DIVISION        shift and go to state 8
    DIVISIONENTERA  shift and go to state 9
    MODULO          shift and go to state 10
    POTENCIA        shift and go to state 11

    comparadorNum                  shift and go to state 89
    operadorAritmetico             shift and go to state 90

state 55

    (35) variable -> NUMERO .
    (24) valor -> NUMERO .

    MAYORQUE        reduce using rule 35 (variable -> NUMERO .)
    MAYORIGUALQUE   reduce using rule 35 (variable -> NUMERO .)
    MENORQUE        reduce using rule 35 (variable -> NUMERO .)
    MENORIGUALQUE   reduce using rule 35 (variable -> NUMERO .)
    SUMA            reduce using rule 35 (variable -> NUMERO .)
    RESTA           reduce using rule 35 (variable -> NUMERO .)
    MULT            reduce using rule 35 (variable -> NUMERO .)
    DIVISION        reduce using rule 35 (variable -> NUMERO .)
    DIVISIONENTERA  reduce using rule 35 (variable -> NUMERO .)
    MODULO          reduce using rule 35 (variable -> NUMERO .)
    POTENCIA        reduce using rule 35 (variable -> NUMERO .)
    IDENTICO        reduce using rule 24 (valor -> NUMERO .)
    NOIDENTICO      reduce using rule 24 (valor -> NUMERO .)
    IGUAL           reduce using rule 24 (valor -> NUMERO .)


state 56

    (25) valor -> CADENA .

    IDENTICO        reduce using rule 25 (valor -> CADENA .)
    NOIDENTICO      reduce using rule 25 (valor -> CADENA .)
    IGUAL           reduce using rule 25 (valor -> CADENA .)
    PUNTOCOMA       reduce using rule 25 (valor -> CADENA .)
    COMA            reduce using rule 25 (valor -> CADENA .)
    OPERADOR        reduce using rule 25 (valor -> CADENA .)
    AND             reduce using rule 25 (valor -> CADENA .)
    OR              reduce using rule 25 (valor -> CADENA .)
    IDENTIFICADOR   reduce using rule 25 (valor -> CADENA .)
    COMENTARIO      reduce using rule 25 (valor -> CADENA .)
    LLAVEDER        reduce using rule 25 (valor -> CADENA .)
    PRINT           reduce using rule 25 (valor -> CADENA .)
    ECHO            reduce using rule 25 (valor -> CADENA .)
    FUNCTION        reduce using rule 25 (valor -> CADENA .)
    NAMEFUNCTION    reduce using rule 25 (valor -> CADENA .)
    RETURN          reduce using rule 25 (valor -> CADENA .)
    WHILE           reduce using rule 25 (valor -> CADENA .)
    FOR             reduce using rule 25 (valor -> CADENA .)
    IF              reduce using rule 25 (valor -> CADENA .)
    ELSEIF          reduce using rule 25 (valor -> CADENA .)
    ELSE            reduce using rule 25 (valor -> CADENA .)
    FOREACH         reduce using rule 25 (valor -> CADENA .)
    SWITCH          reduce using rule 25 (valor -> CADENA .)
    CADENA          reduce using rule 25 (valor -> CADENA .)
    BOOLEAN         reduce using rule 25 (valor -> CADENA .)
    ENTERO          reduce using rule 25 (valor -> CADENA .)
    FLOTANTE        reduce using rule 25 (valor -> CADENA .)
    $end            reduce using rule 25 (valor -> CADENA .)
    PARENDER        reduce using rule 25 (valor -> CADENA .)
    CORCHETEDER     reduce using rule 25 (valor -> CADENA .)
    DOSPUNTOS       reduce using rule 25 (valor -> CADENA .)


state 57

    (26) valor -> BOOLEAN .

    IDENTICO        reduce using rule 26 (valor -> BOOLEAN .)
    NOIDENTICO      reduce using rule 26 (valor -> BOOLEAN .)
    IGUAL           reduce using rule 26 (valor -> BOOLEAN .)
    PUNTOCOMA       reduce using rule 26 (valor -> BOOLEAN .)
    COMA            reduce using rule 26 (valor -> BOOLEAN .)
    OPERADOR        reduce using rule 26 (valor -> BOOLEAN .)
    AND             reduce using rule 26 (valor -> BOOLEAN .)
    OR              reduce using rule 26 (valor -> BOOLEAN .)
    IDENTIFICADOR   reduce using rule 26 (valor -> BOOLEAN .)
    COMENTARIO      reduce using rule 26 (valor -> BOOLEAN .)
    LLAVEDER        reduce using rule 26 (valor -> BOOLEAN .)
    PRINT           reduce using rule 26 (valor -> BOOLEAN .)
    ECHO            reduce using rule 26 (valor -> BOOLEAN .)
    FUNCTION        reduce using rule 26 (valor -> BOOLEAN .)
    NAMEFUNCTION    reduce using rule 26 (valor -> BOOLEAN .)
    RETURN          reduce using rule 26 (valor -> BOOLEAN .)
    WHILE           reduce using rule 26 (valor -> BOOLEAN .)
    FOR             reduce using rule 26 (valor -> BOOLEAN .)
    IF              reduce using rule 26 (valor -> BOOLEAN .)
    ELSEIF          reduce using rule 26 (valor -> BOOLEAN .)
    ELSE            reduce using rule 26 (valor -> BOOLEAN .)
    FOREACH         reduce using rule 26 (valor -> BOOLEAN .)
    SWITCH          reduce using rule 26 (valor -> BOOLEAN .)
    CADENA          reduce using rule 26 (valor -> BOOLEAN .)
    BOOLEAN         reduce using rule 26 (valor -> BOOLEAN .)
    ENTERO          reduce using rule 26 (valor -> BOOLEAN .)
    FLOTANTE        reduce using rule 26 (valor -> BOOLEAN .)
    $end            reduce using rule 26 (valor -> BOOLEAN .)
    PARENDER        reduce using rule 26 (valor -> BOOLEAN .)
    CORCHETEDER     reduce using rule 26 (valor -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 26 (valor -> BOOLEAN .)


state 58

    (23) NUMERO -> FLOTANTE .

    MAYORQUE        reduce using rule 23 (NUMERO -> FLOTANTE .)
    MAYORIGUALQUE   reduce using rule 23 (NUMERO -> FLOTANTE .)
    MENORQUE        reduce using rule 23 (NUMERO -> FLOTANTE .)
    MENORIGUALQUE   reduce using rule 23 (NUMERO -> FLOTANTE .)
    SUMA            reduce using rule 23 (NUMERO -> FLOTANTE .)
    RESTA           reduce using rule 23 (NUMERO -> FLOTANTE .)
    MULT            reduce using rule 23 (NUMERO -> FLOTANTE .)
    DIVISION        reduce using rule 23 (NUMERO -> FLOTANTE .)
    DIVISIONENTERA  reduce using rule 23 (NUMERO -> FLOTANTE .)
    MODULO          reduce using rule 23 (NUMERO -> FLOTANTE .)
    POTENCIA        reduce using rule 23 (NUMERO -> FLOTANTE .)
    IDENTICO        reduce using rule 23 (NUMERO -> FLOTANTE .)
    NOIDENTICO      reduce using rule 23 (NUMERO -> FLOTANTE .)
    IGUAL           reduce using rule 23 (NUMERO -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 23 (NUMERO -> FLOTANTE .)
    COMA            reduce using rule 23 (NUMERO -> FLOTANTE .)
    OPERADOR        reduce using rule 23 (NUMERO -> FLOTANTE .)
    AND             reduce using rule 23 (NUMERO -> FLOTANTE .)
    OR              reduce using rule 23 (NUMERO -> FLOTANTE .)
    IDENTIFICADOR   reduce using rule 23 (NUMERO -> FLOTANTE .)
    COMENTARIO      reduce using rule 23 (NUMERO -> FLOTANTE .)
    LLAVEDER        reduce using rule 23 (NUMERO -> FLOTANTE .)
    PRINT           reduce using rule 23 (NUMERO -> FLOTANTE .)
    ECHO            reduce using rule 23 (NUMERO -> FLOTANTE .)
    FUNCTION        reduce using rule 23 (NUMERO -> FLOTANTE .)
    NAMEFUNCTION    reduce using rule 23 (NUMERO -> FLOTANTE .)
    RETURN          reduce using rule 23 (NUMERO -> FLOTANTE .)
    WHILE           reduce using rule 23 (NUMERO -> FLOTANTE .)
    FOR             reduce using rule 23 (NUMERO -> FLOTANTE .)
    IF              reduce using rule 23 (NUMERO -> FLOTANTE .)
    ELSEIF          reduce using rule 23 (NUMERO -> FLOTANTE .)
    ELSE            reduce using rule 23 (NUMERO -> FLOTANTE .)
    FOREACH         reduce using rule 23 (NUMERO -> FLOTANTE .)
    SWITCH          reduce using rule 23 (NUMERO -> FLOTANTE .)
    CADENA          reduce using rule 23 (NUMERO -> FLOTANTE .)
    BOOLEAN         reduce using rule 23 (NUMERO -> FLOTANTE .)
    ENTERO          reduce using rule 23 (NUMERO -> FLOTANTE .)
    FLOTANTE        reduce using rule 23 (NUMERO -> FLOTANTE .)
    $end            reduce using rule 23 (NUMERO -> FLOTANTE .)
    PARENDER        reduce using rule 23 (NUMERO -> FLOTANTE .)
    CORCHETEDER     reduce using rule 23 (NUMERO -> FLOTANTE .)
    DOSPUNTOS       reduce using rule 23 (NUMERO -> FLOTANTE .)


state 59

    (4) bloques -> bloque bloques .

    $end            reduce using rule 4 (bloques -> bloque bloques .)


state 60

    (59) asignacion -> IDENTIFICADOR ASIGNAR . valor PUNTOCOMA
    (50) operaciones -> IDENTIFICADOR ASIGNAR . operaciones
    (63) input -> IDENTIFICADOR ASIGNAR . FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA
    (69) funcion -> IDENTIFICADOR ASIGNAR . NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (103) queue -> IDENTIFICADOR ASIGNAR . NEW QUEUE PARENIZ PARENDER PUNTOCOMA
    (98) stack -> IDENTIFICADOR ASIGNAR . NEW STACK PARENIZ PARENDER PUNTOCOMA
    (111) array -> IDENTIFICADOR ASIGNAR . ARRAY PARENIZ PARENDER PUNTOCOMA
    (112) array -> IDENTIFICADOR ASIGNAR . ARRAY PARENIZ valores PARENDER PUNTOCOMA
    (113) array -> IDENTIFICADOR ASIGNAR . CORCHETEIZ valores CORCHETEDER PUNTOCOMA
    (24) valor -> . NUMERO
    (25) valor -> . CADENA
    (26) valor -> . BOOLEAN
    (27) valor -> . IDENTIFICADOR
    (48) operaciones -> . operacion
    (49) operaciones -> . operacion operadorAritmetico operaciones
    (50) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (22) NUMERO -> . ENTERO
    (23) NUMERO -> . FLOTANTE
    (51) operacion -> . variable operadorAritmetico variable
    (35) variable -> . NUMERO
    (36) variable -> . IDENTIFICADOR

    FGETS           shift and go to state 98
    NAMEFUNCTION    shift and go to state 99
    NEW             shift and go to state 100
    ARRAY           shift and go to state 101
    CORCHETEIZ      shift and go to state 102
    CADENA          shift and go to state 56
    BOOLEAN         shift and go to state 57
    IDENTIFICADOR   shift and go to state 95
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 58

    valor                          shift and go to state 96
    operaciones                    shift and go to state 97
    NUMERO                         shift and go to state 103
    operacion                      shift and go to state 38
    variable                       shift and go to state 104

state 61

    (104) queue -> IDENTIFICADOR FLECHASIMPLE . ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
    (105) queue -> IDENTIFICADOR FLECHASIMPLE . COUNT PARENIZ PARENDER PUNTOCOMA
    (106) queue -> IDENTIFICADOR FLECHASIMPLE . DEQUEUE PARENIZ PARENDER PUNTOCOMA
    (107) queue -> IDENTIFICADOR FLECHASIMPLE . NEXT PARENIZ PARENDER PUNTOCOMA
    (108) queue -> IDENTIFICADOR FLECHASIMPLE . REWIND PARENIZ PARENDER PUNTOCOMA
    (109) queue -> IDENTIFICADOR FLECHASIMPLE . CURRENT PARENIZ PARENDER PUNTOCOMA
    (110) queue -> IDENTIFICADOR FLECHASIMPLE . VALID PARENIZ PARENDER
    (96) stack -> IDENTIFICADOR FLECHASIMPLE . PUSH PARENIZ valor PARENDER PUNTOCOMA
    (97) stack -> IDENTIFICADOR FLECHASIMPLE . POP PARENIZ PARENDER PUNTOCOMA
    (99) stack -> IDENTIFICADOR FLECHASIMPLE . NEXT PARENIZ PARENDER PUNTOCOMA
    (100) stack -> IDENTIFICADOR FLECHASIMPLE . REWIND PARENIZ PARENDER PUNTOCOMA
    (101) stack -> IDENTIFICADOR FLECHASIMPLE . CURRENT PARENIZ PARENDER PUNTOCOMA
    (102) stack -> IDENTIFICADOR FLECHASIMPLE . VALID PARENIZ PARENDER

    ENQUEUE         shift and go to state 105
    COUNT           shift and go to state 106
    DEQUEUE         shift and go to state 107
    NEXT            shift and go to state 108
    REWIND          shift and go to state 109
    CURRENT         shift and go to state 110
    VALID           shift and go to state 111
    PUSH            shift and go to state 112
    POP             shift and go to state 113


state 62

    (40) comparacion -> valor comparador . valor
    (24) valor -> . NUMERO
    (25) valor -> . CADENA
    (26) valor -> . BOOLEAN
    (27) valor -> . IDENTIFICADOR
    (22) NUMERO -> . ENTERO
    (23) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 56
    BOOLEAN         shift and go to state 57
    IDENTIFICADOR   shift and go to state 76
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 58

    valor                          shift and go to state 114
    NUMERO                         shift and go to state 75

state 63

    (32) comparador -> IDENTICO .

    CADENA          reduce using rule 32 (comparador -> IDENTICO .)
    BOOLEAN         reduce using rule 32 (comparador -> IDENTICO .)
    IDENTIFICADOR   reduce using rule 32 (comparador -> IDENTICO .)
    ENTERO          reduce using rule 32 (comparador -> IDENTICO .)
    FLOTANTE        reduce using rule 32 (comparador -> IDENTICO .)


state 64

    (33) comparador -> NOIDENTICO .

    CADENA          reduce using rule 33 (comparador -> NOIDENTICO .)
    BOOLEAN         reduce using rule 33 (comparador -> NOIDENTICO .)
    IDENTIFICADOR   reduce using rule 33 (comparador -> NOIDENTICO .)
    ENTERO          reduce using rule 33 (comparador -> NOIDENTICO .)
    FLOTANTE        reduce using rule 33 (comparador -> NOIDENTICO .)


state 65

    (34) comparador -> IGUAL .

    CADENA          reduce using rule 34 (comparador -> IGUAL .)
    BOOLEAN         reduce using rule 34 (comparador -> IGUAL .)
    IDENTIFICADOR   reduce using rule 34 (comparador -> IGUAL .)
    ENTERO          reduce using rule 34 (comparador -> IGUAL .)
    FLOTANTE        reduce using rule 34 (comparador -> IGUAL .)


state 66

    (38) comparaciones -> comparacion operadores . comparaciones
    (37) comparaciones -> . comparacion
    (38) comparaciones -> . comparacion operadores comparaciones
    (39) comparacion -> . variable comparadorNum variable
    (40) comparacion -> . valor comparador valor
    (35) variable -> . NUMERO
    (36) variable -> . IDENTIFICADOR
    (24) valor -> . NUMERO
    (25) valor -> . CADENA
    (26) valor -> . BOOLEAN
    (27) valor -> . IDENTIFICADOR
    (22) NUMERO -> . ENTERO
    (23) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 117
    CADENA          shift and go to state 56
    BOOLEAN         shift and go to state 57
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 58

    comparacion                    shift and go to state 37
    comparaciones                  shift and go to state 115
    variable                       shift and go to state 116
    valor                          shift and go to state 24
    NUMERO                         shift and go to state 55

state 67

    (45) operadores -> OPERADOR .

    IDENTIFICADOR   reduce using rule 45 (operadores -> OPERADOR .)
    CADENA          reduce using rule 45 (operadores -> OPERADOR .)
    BOOLEAN         reduce using rule 45 (operadores -> OPERADOR .)
    ENTERO          reduce using rule 45 (operadores -> OPERADOR .)
    FLOTANTE        reduce using rule 45 (operadores -> OPERADOR .)


state 68

    (46) operadores -> AND .

    IDENTIFICADOR   reduce using rule 46 (operadores -> AND .)
    CADENA          reduce using rule 46 (operadores -> AND .)
    BOOLEAN         reduce using rule 46 (operadores -> AND .)
    ENTERO          reduce using rule 46 (operadores -> AND .)
    FLOTANTE        reduce using rule 46 (operadores -> AND .)


state 69

    (47) operadores -> OR .

    IDENTIFICADOR   reduce using rule 47 (operadores -> OR .)
    CADENA          reduce using rule 47 (operadores -> OR .)
    BOOLEAN         reduce using rule 47 (operadores -> OR .)
    ENTERO          reduce using rule 47 (operadores -> OR .)
    FLOTANTE        reduce using rule 47 (operadores -> OR .)


state 70

    (49) operaciones -> operacion operadorAritmetico . operaciones
    (48) operaciones -> . operacion
    (49) operaciones -> . operacion operadorAritmetico operaciones
    (50) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (51) operacion -> . variable operadorAritmetico variable
    (35) variable -> . NUMERO
    (36) variable -> . IDENTIFICADOR
    (22) NUMERO -> . ENTERO
    (23) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 119
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 58

    operacion                      shift and go to state 38
    operaciones                    shift and go to state 118
    variable                       shift and go to state 104
    NUMERO                         shift and go to state 120

state 71

    (87) elseif -> LLAVEDER ELSEIF . PARENIZ comparaciones PARENDER LLAVEIZ
    (88) elseif -> LLAVEDER ELSEIF . PARENIZ IDENTIFICADOR PARENDER LLAVEIZ

    PARENIZ         shift and go to state 121


state 72

    (91) else -> LLAVEDER ELSE . LLAVEIZ

    LLAVEIZ         shift and go to state 122


state 73

    (60) print -> PRINT PARENIZ . valores PARENDER PUNTOCOMA
    (62) print -> PRINT PARENIZ . PARENDER PUNTOCOMA
    (20) valores -> . valor
    (21) valores -> . valor COMA valores
    (24) valor -> . NUMERO
    (25) valor -> . CADENA
    (26) valor -> . BOOLEAN
    (27) valor -> . IDENTIFICADOR
    (22) NUMERO -> . ENTERO
    (23) NUMERO -> . FLOTANTE

    PARENDER        shift and go to state 124
    CADENA          shift and go to state 56
    BOOLEAN         shift and go to state 57
    IDENTIFICADOR   shift and go to state 76
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 58

    valores                        shift and go to state 123
    valor                          shift and go to state 78
    NUMERO                         shift and go to state 75

state 74

    (61) print -> PRINT valor . PUNTOCOMA

    PUNTOCOMA       shift and go to state 125


state 75

    (24) valor -> NUMERO .

    PUNTOCOMA       reduce using rule 24 (valor -> NUMERO .)
    COMA            reduce using rule 24 (valor -> NUMERO .)
    OPERADOR        reduce using rule 24 (valor -> NUMERO .)
    AND             reduce using rule 24 (valor -> NUMERO .)
    OR              reduce using rule 24 (valor -> NUMERO .)
    IDENTIFICADOR   reduce using rule 24 (valor -> NUMERO .)
    COMENTARIO      reduce using rule 24 (valor -> NUMERO .)
    LLAVEDER        reduce using rule 24 (valor -> NUMERO .)
    PRINT           reduce using rule 24 (valor -> NUMERO .)
    ECHO            reduce using rule 24 (valor -> NUMERO .)
    FUNCTION        reduce using rule 24 (valor -> NUMERO .)
    NAMEFUNCTION    reduce using rule 24 (valor -> NUMERO .)
    RETURN          reduce using rule 24 (valor -> NUMERO .)
    WHILE           reduce using rule 24 (valor -> NUMERO .)
    FOR             reduce using rule 24 (valor -> NUMERO .)
    IF              reduce using rule 24 (valor -> NUMERO .)
    ELSEIF          reduce using rule 24 (valor -> NUMERO .)
    ELSE            reduce using rule 24 (valor -> NUMERO .)
    FOREACH         reduce using rule 24 (valor -> NUMERO .)
    SWITCH          reduce using rule 24 (valor -> NUMERO .)
    CADENA          reduce using rule 24 (valor -> NUMERO .)
    BOOLEAN         reduce using rule 24 (valor -> NUMERO .)
    ENTERO          reduce using rule 24 (valor -> NUMERO .)
    FLOTANTE        reduce using rule 24 (valor -> NUMERO .)
    $end            reduce using rule 24 (valor -> NUMERO .)
    PARENDER        reduce using rule 24 (valor -> NUMERO .)
    CORCHETEDER     reduce using rule 24 (valor -> NUMERO .)
    DOSPUNTOS       reduce using rule 24 (valor -> NUMERO .)


state 76

    (27) valor -> IDENTIFICADOR .

    PUNTOCOMA       reduce using rule 27 (valor -> IDENTIFICADOR .)
    COMA            reduce using rule 27 (valor -> IDENTIFICADOR .)
    OPERADOR        reduce using rule 27 (valor -> IDENTIFICADOR .)
    AND             reduce using rule 27 (valor -> IDENTIFICADOR .)
    OR              reduce using rule 27 (valor -> IDENTIFICADOR .)
    IDENTIFICADOR   reduce using rule 27 (valor -> IDENTIFICADOR .)
    COMENTARIO      reduce using rule 27 (valor -> IDENTIFICADOR .)
    LLAVEDER        reduce using rule 27 (valor -> IDENTIFICADOR .)
    PRINT           reduce using rule 27 (valor -> IDENTIFICADOR .)
    ECHO            reduce using rule 27 (valor -> IDENTIFICADOR .)
    FUNCTION        reduce using rule 27 (valor -> IDENTIFICADOR .)
    NAMEFUNCTION    reduce using rule 27 (valor -> IDENTIFICADOR .)
    RETURN          reduce using rule 27 (valor -> IDENTIFICADOR .)
    WHILE           reduce using rule 27 (valor -> IDENTIFICADOR .)
    FOR             reduce using rule 27 (valor -> IDENTIFICADOR .)
    IF              reduce using rule 27 (valor -> IDENTIFICADOR .)
    ELSEIF          reduce using rule 27 (valor -> IDENTIFICADOR .)
    ELSE            reduce using rule 27 (valor -> IDENTIFICADOR .)
    FOREACH         reduce using rule 27 (valor -> IDENTIFICADOR .)
    SWITCH          reduce using rule 27 (valor -> IDENTIFICADOR .)
    CADENA          reduce using rule 27 (valor -> IDENTIFICADOR .)
    BOOLEAN         reduce using rule 27 (valor -> IDENTIFICADOR .)
    ENTERO          reduce using rule 27 (valor -> IDENTIFICADOR .)
    FLOTANTE        reduce using rule 27 (valor -> IDENTIFICADOR .)
    $end            reduce using rule 27 (valor -> IDENTIFICADOR .)
    PARENDER        reduce using rule 27 (valor -> IDENTIFICADOR .)
    CORCHETEDER     reduce using rule 27 (valor -> IDENTIFICADOR .)
    DOSPUNTOS       reduce using rule 27 (valor -> IDENTIFICADOR .)


state 77

    (64) echo -> ECHO valores . PUNTOCOMA

    PUNTOCOMA       shift and go to state 126


state 78

    (20) valores -> valor .
    (21) valores -> valor . COMA valores

    PUNTOCOMA       reduce using rule 20 (valores -> valor .)
    PARENDER        reduce using rule 20 (valores -> valor .)
    CORCHETEDER     reduce using rule 20 (valores -> valor .)
    COMA            shift and go to state 127


state 79

    (65) funcion -> FUNCTION NAMEFUNCTION . PARENIZ parametro PARENDER LLAVEIZ

    PARENIZ         shift and go to state 128


state 80

    (68) funcion -> NAMEFUNCTION PARENIZ . parametro PARENDER PUNTOCOMA
    (66) parametro -> . IDENTIFICADOR
    (67) parametro -> . IDENTIFICADOR COMA parametro

    IDENTIFICADOR   shift and go to state 130

    parametro                      shift and go to state 129

state 81

    (70) return -> RETURN IDENTIFICADOR . PUNTOCOMA

    PUNTOCOMA       shift and go to state 131


state 82

    (78) while -> WHILE PARENIZ . comparaciones PARENDER LLAVEIZ
    (37) comparaciones -> . comparacion
    (38) comparaciones -> . comparacion operadores comparaciones
    (39) comparacion -> . variable comparadorNum variable
    (40) comparacion -> . valor comparador valor
    (35) variable -> . NUMERO
    (36) variable -> . IDENTIFICADOR
    (24) valor -> . NUMERO
    (25) valor -> . CADENA
    (26) valor -> . BOOLEAN
    (27) valor -> . IDENTIFICADOR
    (22) NUMERO -> . ENTERO
    (23) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 117
    CADENA          shift and go to state 56
    BOOLEAN         shift and go to state 57
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 58

    comparaciones                  shift and go to state 132
    comparacion                    shift and go to state 37
    variable                       shift and go to state 116
    valor                          shift and go to state 24
    NUMERO                         shift and go to state 55

state 83

    (79) for -> FOR PARENIZ . IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 133


state 84

    (85) if -> IF PARENIZ . comparaciones PARENDER LLAVEIZ
    (86) if -> IF PARENIZ . IDENTIFICADOR PARENDER LLAVEIZ
    (37) comparaciones -> . comparacion
    (38) comparaciones -> . comparacion operadores comparaciones
    (39) comparacion -> . variable comparadorNum variable
    (40) comparacion -> . valor comparador valor
    (35) variable -> . NUMERO
    (36) variable -> . IDENTIFICADOR
    (24) valor -> . NUMERO
    (25) valor -> . CADENA
    (26) valor -> . BOOLEAN
    (27) valor -> . IDENTIFICADOR
    (22) NUMERO -> . ENTERO
    (23) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 135
    CADENA          shift and go to state 56
    BOOLEAN         shift and go to state 57
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 58

    comparaciones                  shift and go to state 134
    comparacion                    shift and go to state 37
    variable                       shift and go to state 116
    valor                          shift and go to state 24
    NUMERO                         shift and go to state 55

state 85

    (89) elseif -> ELSEIF PARENIZ . comparaciones PARENDER LLAVEIZ
    (90) elseif -> ELSEIF PARENIZ . IDENTIFICADOR PARENDER LLAVEIZ
    (37) comparaciones -> . comparacion
    (38) comparaciones -> . comparacion operadores comparaciones
    (39) comparacion -> . variable comparadorNum variable
    (40) comparacion -> . valor comparador valor
    (35) variable -> . NUMERO
    (36) variable -> . IDENTIFICADOR
    (24) valor -> . NUMERO
    (25) valor -> . CADENA
    (26) valor -> . BOOLEAN
    (27) valor -> . IDENTIFICADOR
    (22) NUMERO -> . ENTERO
    (23) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 137
    CADENA          shift and go to state 56
    BOOLEAN         shift and go to state 57
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 58

    comparaciones                  shift and go to state 136
    comparacion                    shift and go to state 37
    variable                       shift and go to state 116
    valor                          shift and go to state 24
    NUMERO                         shift and go to state 55

state 86

    (92) else -> ELSE LLAVEIZ .

    IDENTIFICADOR   reduce using rule 92 (else -> ELSE LLAVEIZ .)
    COMENTARIO      reduce using rule 92 (else -> ELSE LLAVEIZ .)
    LLAVEDER        reduce using rule 92 (else -> ELSE LLAVEIZ .)
    PRINT           reduce using rule 92 (else -> ELSE LLAVEIZ .)
    ECHO            reduce using rule 92 (else -> ELSE LLAVEIZ .)
    FUNCTION        reduce using rule 92 (else -> ELSE LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 92 (else -> ELSE LLAVEIZ .)
    RETURN          reduce using rule 92 (else -> ELSE LLAVEIZ .)
    WHILE           reduce using rule 92 (else -> ELSE LLAVEIZ .)
    FOR             reduce using rule 92 (else -> ELSE LLAVEIZ .)
    IF              reduce using rule 92 (else -> ELSE LLAVEIZ .)
    ELSEIF          reduce using rule 92 (else -> ELSE LLAVEIZ .)
    ELSE            reduce using rule 92 (else -> ELSE LLAVEIZ .)
    FOREACH         reduce using rule 92 (else -> ELSE LLAVEIZ .)
    SWITCH          reduce using rule 92 (else -> ELSE LLAVEIZ .)
    CADENA          reduce using rule 92 (else -> ELSE LLAVEIZ .)
    BOOLEAN         reduce using rule 92 (else -> ELSE LLAVEIZ .)
    ENTERO          reduce using rule 92 (else -> ELSE LLAVEIZ .)
    FLOTANTE        reduce using rule 92 (else -> ELSE LLAVEIZ .)
    $end            reduce using rule 92 (else -> ELSE LLAVEIZ .)


state 87

    (80) foreach -> FOREACH PARENIZ . IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 138


state 88

    (81) switch -> SWITCH PARENIZ . valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER
    (24) valor -> . NUMERO
    (25) valor -> . CADENA
    (26) valor -> . BOOLEAN
    (27) valor -> . IDENTIFICADOR
    (22) NUMERO -> . ENTERO
    (23) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 56
    BOOLEAN         shift and go to state 57
    IDENTIFICADOR   shift and go to state 76
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 58

    valor                          shift and go to state 139
    NUMERO                         shift and go to state 75

state 89

    (39) comparacion -> variable comparadorNum . variable
    (35) variable -> . NUMERO
    (36) variable -> . IDENTIFICADOR
    (22) NUMERO -> . ENTERO
    (23) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 141
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 58

    variable                       shift and go to state 140
    NUMERO                         shift and go to state 120

state 90

    (51) operacion -> variable operadorAritmetico . variable
    (35) variable -> . NUMERO
    (36) variable -> . IDENTIFICADOR
    (22) NUMERO -> . ENTERO
    (23) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 141
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 58

    variable                       shift and go to state 142
    NUMERO                         shift and go to state 120

state 91

    (28) comparadorNum -> MAYORQUE .

    IDENTIFICADOR   reduce using rule 28 (comparadorNum -> MAYORQUE .)
    ENTERO          reduce using rule 28 (comparadorNum -> MAYORQUE .)
    FLOTANTE        reduce using rule 28 (comparadorNum -> MAYORQUE .)


state 92

    (29) comparadorNum -> MAYORIGUALQUE .

    IDENTIFICADOR   reduce using rule 29 (comparadorNum -> MAYORIGUALQUE .)
    ENTERO          reduce using rule 29 (comparadorNum -> MAYORIGUALQUE .)
    FLOTANTE        reduce using rule 29 (comparadorNum -> MAYORIGUALQUE .)


state 93

    (30) comparadorNum -> MENORQUE .

    IDENTIFICADOR   reduce using rule 30 (comparadorNum -> MENORQUE .)
    ENTERO          reduce using rule 30 (comparadorNum -> MENORQUE .)
    FLOTANTE        reduce using rule 30 (comparadorNum -> MENORQUE .)


state 94

    (31) comparadorNum -> MENORIGUALQUE .

    IDENTIFICADOR   reduce using rule 31 (comparadorNum -> MENORIGUALQUE .)
    ENTERO          reduce using rule 31 (comparadorNum -> MENORIGUALQUE .)
    FLOTANTE        reduce using rule 31 (comparadorNum -> MENORIGUALQUE .)


state 95

    (27) valor -> IDENTIFICADOR .
    (50) operaciones -> IDENTIFICADOR . ASIGNAR operaciones
    (36) variable -> IDENTIFICADOR .

    PUNTOCOMA       reduce using rule 27 (valor -> IDENTIFICADOR .)
    ASIGNAR         shift and go to state 143
    SUMA            reduce using rule 36 (variable -> IDENTIFICADOR .)
    RESTA           reduce using rule 36 (variable -> IDENTIFICADOR .)
    MULT            reduce using rule 36 (variable -> IDENTIFICADOR .)
    DIVISION        reduce using rule 36 (variable -> IDENTIFICADOR .)
    DIVISIONENTERA  reduce using rule 36 (variable -> IDENTIFICADOR .)
    MODULO          reduce using rule 36 (variable -> IDENTIFICADOR .)
    POTENCIA        reduce using rule 36 (variable -> IDENTIFICADOR .)


state 96

    (59) asignacion -> IDENTIFICADOR ASIGNAR valor . PUNTOCOMA

    PUNTOCOMA       shift and go to state 144


state 97

    (50) operaciones -> IDENTIFICADOR ASIGNAR operaciones .

    IDENTIFICADOR   reduce using rule 50 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    COMENTARIO      reduce using rule 50 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    LLAVEDER        reduce using rule 50 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    PRINT           reduce using rule 50 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    ECHO            reduce using rule 50 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    FUNCTION        reduce using rule 50 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    NAMEFUNCTION    reduce using rule 50 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    RETURN          reduce using rule 50 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    WHILE           reduce using rule 50 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    FOR             reduce using rule 50 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    IF              reduce using rule 50 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    ELSEIF          reduce using rule 50 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    ELSE            reduce using rule 50 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    FOREACH         reduce using rule 50 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    SWITCH          reduce using rule 50 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    CADENA          reduce using rule 50 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    BOOLEAN         reduce using rule 50 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    ENTERO          reduce using rule 50 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    FLOTANTE        reduce using rule 50 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    $end            reduce using rule 50 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)


state 98

    (63) input -> IDENTIFICADOR ASIGNAR FGETS . PARENIZ FLUJOS PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 145


state 99

    (69) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION . PARENIZ parametro PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 146


state 100

    (103) queue -> IDENTIFICADOR ASIGNAR NEW . QUEUE PARENIZ PARENDER PUNTOCOMA
    (98) stack -> IDENTIFICADOR ASIGNAR NEW . STACK PARENIZ PARENDER PUNTOCOMA

    QUEUE           shift and go to state 147
    STACK           shift and go to state 148


state 101

    (111) array -> IDENTIFICADOR ASIGNAR ARRAY . PARENIZ PARENDER PUNTOCOMA
    (112) array -> IDENTIFICADOR ASIGNAR ARRAY . PARENIZ valores PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 149


state 102

    (113) array -> IDENTIFICADOR ASIGNAR CORCHETEIZ . valores CORCHETEDER PUNTOCOMA
    (20) valores -> . valor
    (21) valores -> . valor COMA valores
    (24) valor -> . NUMERO
    (25) valor -> . CADENA
    (26) valor -> . BOOLEAN
    (27) valor -> . IDENTIFICADOR
    (22) NUMERO -> . ENTERO
    (23) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 56
    BOOLEAN         shift and go to state 57
    IDENTIFICADOR   shift and go to state 76
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 58

    valores                        shift and go to state 150
    valor                          shift and go to state 78
    NUMERO                         shift and go to state 75

state 103

    (24) valor -> NUMERO .
    (35) variable -> NUMERO .

    PUNTOCOMA       reduce using rule 24 (valor -> NUMERO .)
    SUMA            reduce using rule 35 (variable -> NUMERO .)
    RESTA           reduce using rule 35 (variable -> NUMERO .)
    MULT            reduce using rule 35 (variable -> NUMERO .)
    DIVISION        reduce using rule 35 (variable -> NUMERO .)
    DIVISIONENTERA  reduce using rule 35 (variable -> NUMERO .)
    MODULO          reduce using rule 35 (variable -> NUMERO .)
    POTENCIA        reduce using rule 35 (variable -> NUMERO .)


state 104

    (51) operacion -> variable . operadorAritmetico variable
    (52) operadorAritmetico -> . SUMA
    (53) operadorAritmetico -> . RESTA
    (54) operadorAritmetico -> . MULT
    (55) operadorAritmetico -> . DIVISION
    (56) operadorAritmetico -> . DIVISIONENTERA
    (57) operadorAritmetico -> . MODULO
    (58) operadorAritmetico -> . POTENCIA

    SUMA            shift and go to state 5
    RESTA           shift and go to state 6
    MULT            shift and go to state 7
    DIVISION        shift and go to state 8
    DIVISIONENTERA  shift and go to state 9
    MODULO          shift and go to state 10
    POTENCIA        shift and go to state 11

    operadorAritmetico             shift and go to state 90

state 105

    (104) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE . PARENIZ valor PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 151


state 106

    (105) queue -> IDENTIFICADOR FLECHASIMPLE COUNT . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 152


state 107

    (106) queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 153


state 108

    (107) queue -> IDENTIFICADOR FLECHASIMPLE NEXT . PARENIZ PARENDER PUNTOCOMA
    (99) stack -> IDENTIFICADOR FLECHASIMPLE NEXT . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 154


state 109

    (108) queue -> IDENTIFICADOR FLECHASIMPLE REWIND . PARENIZ PARENDER PUNTOCOMA
    (100) stack -> IDENTIFICADOR FLECHASIMPLE REWIND . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 155


state 110

    (109) queue -> IDENTIFICADOR FLECHASIMPLE CURRENT . PARENIZ PARENDER PUNTOCOMA
    (101) stack -> IDENTIFICADOR FLECHASIMPLE CURRENT . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 156


state 111

    (110) queue -> IDENTIFICADOR FLECHASIMPLE VALID . PARENIZ PARENDER
    (102) stack -> IDENTIFICADOR FLECHASIMPLE VALID . PARENIZ PARENDER

    PARENIZ         shift and go to state 157


state 112

    (96) stack -> IDENTIFICADOR FLECHASIMPLE PUSH . PARENIZ valor PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 158


state 113

    (97) stack -> IDENTIFICADOR FLECHASIMPLE POP . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 159


state 114

    (40) comparacion -> valor comparador valor .

    OPERADOR        reduce using rule 40 (comparacion -> valor comparador valor .)
    AND             reduce using rule 40 (comparacion -> valor comparador valor .)
    OR              reduce using rule 40 (comparacion -> valor comparador valor .)
    IDENTIFICADOR   reduce using rule 40 (comparacion -> valor comparador valor .)
    COMENTARIO      reduce using rule 40 (comparacion -> valor comparador valor .)
    LLAVEDER        reduce using rule 40 (comparacion -> valor comparador valor .)
    PRINT           reduce using rule 40 (comparacion -> valor comparador valor .)
    ECHO            reduce using rule 40 (comparacion -> valor comparador valor .)
    FUNCTION        reduce using rule 40 (comparacion -> valor comparador valor .)
    NAMEFUNCTION    reduce using rule 40 (comparacion -> valor comparador valor .)
    RETURN          reduce using rule 40 (comparacion -> valor comparador valor .)
    WHILE           reduce using rule 40 (comparacion -> valor comparador valor .)
    FOR             reduce using rule 40 (comparacion -> valor comparador valor .)
    IF              reduce using rule 40 (comparacion -> valor comparador valor .)
    ELSEIF          reduce using rule 40 (comparacion -> valor comparador valor .)
    ELSE            reduce using rule 40 (comparacion -> valor comparador valor .)
    FOREACH         reduce using rule 40 (comparacion -> valor comparador valor .)
    SWITCH          reduce using rule 40 (comparacion -> valor comparador valor .)
    CADENA          reduce using rule 40 (comparacion -> valor comparador valor .)
    BOOLEAN         reduce using rule 40 (comparacion -> valor comparador valor .)
    ENTERO          reduce using rule 40 (comparacion -> valor comparador valor .)
    FLOTANTE        reduce using rule 40 (comparacion -> valor comparador valor .)
    $end            reduce using rule 40 (comparacion -> valor comparador valor .)
    PARENDER        reduce using rule 40 (comparacion -> valor comparador valor .)


state 115

    (38) comparaciones -> comparacion operadores comparaciones .

    IDENTIFICADOR   reduce using rule 38 (comparaciones -> comparacion operadores comparaciones .)
    COMENTARIO      reduce using rule 38 (comparaciones -> comparacion operadores comparaciones .)
    LLAVEDER        reduce using rule 38 (comparaciones -> comparacion operadores comparaciones .)
    PRINT           reduce using rule 38 (comparaciones -> comparacion operadores comparaciones .)
    ECHO            reduce using rule 38 (comparaciones -> comparacion operadores comparaciones .)
    FUNCTION        reduce using rule 38 (comparaciones -> comparacion operadores comparaciones .)
    NAMEFUNCTION    reduce using rule 38 (comparaciones -> comparacion operadores comparaciones .)
    RETURN          reduce using rule 38 (comparaciones -> comparacion operadores comparaciones .)
    WHILE           reduce using rule 38 (comparaciones -> comparacion operadores comparaciones .)
    FOR             reduce using rule 38 (comparaciones -> comparacion operadores comparaciones .)
    IF              reduce using rule 38 (comparaciones -> comparacion operadores comparaciones .)
    ELSEIF          reduce using rule 38 (comparaciones -> comparacion operadores comparaciones .)
    ELSE            reduce using rule 38 (comparaciones -> comparacion operadores comparaciones .)
    FOREACH         reduce using rule 38 (comparaciones -> comparacion operadores comparaciones .)
    SWITCH          reduce using rule 38 (comparaciones -> comparacion operadores comparaciones .)
    CADENA          reduce using rule 38 (comparaciones -> comparacion operadores comparaciones .)
    BOOLEAN         reduce using rule 38 (comparaciones -> comparacion operadores comparaciones .)
    ENTERO          reduce using rule 38 (comparaciones -> comparacion operadores comparaciones .)
    FLOTANTE        reduce using rule 38 (comparaciones -> comparacion operadores comparaciones .)
    $end            reduce using rule 38 (comparaciones -> comparacion operadores comparaciones .)
    PARENDER        reduce using rule 38 (comparaciones -> comparacion operadores comparaciones .)


state 116

    (39) comparacion -> variable . comparadorNum variable
    (28) comparadorNum -> . MAYORQUE
    (29) comparadorNum -> . MAYORIGUALQUE
    (30) comparadorNum -> . MENORQUE
    (31) comparadorNum -> . MENORIGUALQUE

    MAYORQUE        shift and go to state 91
    MAYORIGUALQUE   shift and go to state 92
    MENORQUE        shift and go to state 93
    MENORIGUALQUE   shift and go to state 94

    comparadorNum                  shift and go to state 89

state 117

    (36) variable -> IDENTIFICADOR .
    (27) valor -> IDENTIFICADOR .

    MAYORQUE        reduce using rule 36 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 36 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 36 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 36 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 27 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 27 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 27 (valor -> IDENTIFICADOR .)


state 118

    (49) operaciones -> operacion operadorAritmetico operaciones .

    IDENTIFICADOR   reduce using rule 49 (operaciones -> operacion operadorAritmetico operaciones .)
    COMENTARIO      reduce using rule 49 (operaciones -> operacion operadorAritmetico operaciones .)
    LLAVEDER        reduce using rule 49 (operaciones -> operacion operadorAritmetico operaciones .)
    PRINT           reduce using rule 49 (operaciones -> operacion operadorAritmetico operaciones .)
    ECHO            reduce using rule 49 (operaciones -> operacion operadorAritmetico operaciones .)
    FUNCTION        reduce using rule 49 (operaciones -> operacion operadorAritmetico operaciones .)
    NAMEFUNCTION    reduce using rule 49 (operaciones -> operacion operadorAritmetico operaciones .)
    RETURN          reduce using rule 49 (operaciones -> operacion operadorAritmetico operaciones .)
    WHILE           reduce using rule 49 (operaciones -> operacion operadorAritmetico operaciones .)
    FOR             reduce using rule 49 (operaciones -> operacion operadorAritmetico operaciones .)
    IF              reduce using rule 49 (operaciones -> operacion operadorAritmetico operaciones .)
    ELSEIF          reduce using rule 49 (operaciones -> operacion operadorAritmetico operaciones .)
    ELSE            reduce using rule 49 (operaciones -> operacion operadorAritmetico operaciones .)
    FOREACH         reduce using rule 49 (operaciones -> operacion operadorAritmetico operaciones .)
    SWITCH          reduce using rule 49 (operaciones -> operacion operadorAritmetico operaciones .)
    CADENA          reduce using rule 49 (operaciones -> operacion operadorAritmetico operaciones .)
    BOOLEAN         reduce using rule 49 (operaciones -> operacion operadorAritmetico operaciones .)
    ENTERO          reduce using rule 49 (operaciones -> operacion operadorAritmetico operaciones .)
    FLOTANTE        reduce using rule 49 (operaciones -> operacion operadorAritmetico operaciones .)
    $end            reduce using rule 49 (operaciones -> operacion operadorAritmetico operaciones .)


state 119

    (50) operaciones -> IDENTIFICADOR . ASIGNAR operaciones
    (36) variable -> IDENTIFICADOR .

    ASIGNAR         shift and go to state 143
    SUMA            reduce using rule 36 (variable -> IDENTIFICADOR .)
    RESTA           reduce using rule 36 (variable -> IDENTIFICADOR .)
    MULT            reduce using rule 36 (variable -> IDENTIFICADOR .)
    DIVISION        reduce using rule 36 (variable -> IDENTIFICADOR .)
    DIVISIONENTERA  reduce using rule 36 (variable -> IDENTIFICADOR .)
    MODULO          reduce using rule 36 (variable -> IDENTIFICADOR .)
    POTENCIA        reduce using rule 36 (variable -> IDENTIFICADOR .)


state 120

    (35) variable -> NUMERO .

    SUMA            reduce using rule 35 (variable -> NUMERO .)
    RESTA           reduce using rule 35 (variable -> NUMERO .)
    MULT            reduce using rule 35 (variable -> NUMERO .)
    DIVISION        reduce using rule 35 (variable -> NUMERO .)
    DIVISIONENTERA  reduce using rule 35 (variable -> NUMERO .)
    MODULO          reduce using rule 35 (variable -> NUMERO .)
    POTENCIA        reduce using rule 35 (variable -> NUMERO .)
    OPERADOR        reduce using rule 35 (variable -> NUMERO .)
    AND             reduce using rule 35 (variable -> NUMERO .)
    OR              reduce using rule 35 (variable -> NUMERO .)
    IDENTIFICADOR   reduce using rule 35 (variable -> NUMERO .)
    COMENTARIO      reduce using rule 35 (variable -> NUMERO .)
    LLAVEDER        reduce using rule 35 (variable -> NUMERO .)
    PRINT           reduce using rule 35 (variable -> NUMERO .)
    ECHO            reduce using rule 35 (variable -> NUMERO .)
    FUNCTION        reduce using rule 35 (variable -> NUMERO .)
    NAMEFUNCTION    reduce using rule 35 (variable -> NUMERO .)
    RETURN          reduce using rule 35 (variable -> NUMERO .)
    WHILE           reduce using rule 35 (variable -> NUMERO .)
    FOR             reduce using rule 35 (variable -> NUMERO .)
    IF              reduce using rule 35 (variable -> NUMERO .)
    ELSEIF          reduce using rule 35 (variable -> NUMERO .)
    ELSE            reduce using rule 35 (variable -> NUMERO .)
    FOREACH         reduce using rule 35 (variable -> NUMERO .)
    SWITCH          reduce using rule 35 (variable -> NUMERO .)
    CADENA          reduce using rule 35 (variable -> NUMERO .)
    BOOLEAN         reduce using rule 35 (variable -> NUMERO .)
    ENTERO          reduce using rule 35 (variable -> NUMERO .)
    FLOTANTE        reduce using rule 35 (variable -> NUMERO .)
    $end            reduce using rule 35 (variable -> NUMERO .)
    PARENDER        reduce using rule 35 (variable -> NUMERO .)


state 121

    (87) elseif -> LLAVEDER ELSEIF PARENIZ . comparaciones PARENDER LLAVEIZ
    (88) elseif -> LLAVEDER ELSEIF PARENIZ . IDENTIFICADOR PARENDER LLAVEIZ
    (37) comparaciones -> . comparacion
    (38) comparaciones -> . comparacion operadores comparaciones
    (39) comparacion -> . variable comparadorNum variable
    (40) comparacion -> . valor comparador valor
    (35) variable -> . NUMERO
    (36) variable -> . IDENTIFICADOR
    (24) valor -> . NUMERO
    (25) valor -> . CADENA
    (26) valor -> . BOOLEAN
    (27) valor -> . IDENTIFICADOR
    (22) NUMERO -> . ENTERO
    (23) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 161
    CADENA          shift and go to state 56
    BOOLEAN         shift and go to state 57
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 58

    comparaciones                  shift and go to state 160
    comparacion                    shift and go to state 37
    variable                       shift and go to state 116
    valor                          shift and go to state 24
    NUMERO                         shift and go to state 55

state 122

    (91) else -> LLAVEDER ELSE LLAVEIZ .

    IDENTIFICADOR   reduce using rule 91 (else -> LLAVEDER ELSE LLAVEIZ .)
    COMENTARIO      reduce using rule 91 (else -> LLAVEDER ELSE LLAVEIZ .)
    LLAVEDER        reduce using rule 91 (else -> LLAVEDER ELSE LLAVEIZ .)
    PRINT           reduce using rule 91 (else -> LLAVEDER ELSE LLAVEIZ .)
    ECHO            reduce using rule 91 (else -> LLAVEDER ELSE LLAVEIZ .)
    FUNCTION        reduce using rule 91 (else -> LLAVEDER ELSE LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 91 (else -> LLAVEDER ELSE LLAVEIZ .)
    RETURN          reduce using rule 91 (else -> LLAVEDER ELSE LLAVEIZ .)
    WHILE           reduce using rule 91 (else -> LLAVEDER ELSE LLAVEIZ .)
    FOR             reduce using rule 91 (else -> LLAVEDER ELSE LLAVEIZ .)
    IF              reduce using rule 91 (else -> LLAVEDER ELSE LLAVEIZ .)
    ELSEIF          reduce using rule 91 (else -> LLAVEDER ELSE LLAVEIZ .)
    ELSE            reduce using rule 91 (else -> LLAVEDER ELSE LLAVEIZ .)
    FOREACH         reduce using rule 91 (else -> LLAVEDER ELSE LLAVEIZ .)
    SWITCH          reduce using rule 91 (else -> LLAVEDER ELSE LLAVEIZ .)
    CADENA          reduce using rule 91 (else -> LLAVEDER ELSE LLAVEIZ .)
    BOOLEAN         reduce using rule 91 (else -> LLAVEDER ELSE LLAVEIZ .)
    ENTERO          reduce using rule 91 (else -> LLAVEDER ELSE LLAVEIZ .)
    FLOTANTE        reduce using rule 91 (else -> LLAVEDER ELSE LLAVEIZ .)
    $end            reduce using rule 91 (else -> LLAVEDER ELSE LLAVEIZ .)


state 123

    (60) print -> PRINT PARENIZ valores . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 162


state 124

    (62) print -> PRINT PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 163


state 125

    (61) print -> PRINT valor PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 61 (print -> PRINT valor PUNTOCOMA .)
    COMENTARIO      reduce using rule 61 (print -> PRINT valor PUNTOCOMA .)
    LLAVEDER        reduce using rule 61 (print -> PRINT valor PUNTOCOMA .)
    PRINT           reduce using rule 61 (print -> PRINT valor PUNTOCOMA .)
    ECHO            reduce using rule 61 (print -> PRINT valor PUNTOCOMA .)
    FUNCTION        reduce using rule 61 (print -> PRINT valor PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 61 (print -> PRINT valor PUNTOCOMA .)
    RETURN          reduce using rule 61 (print -> PRINT valor PUNTOCOMA .)
    WHILE           reduce using rule 61 (print -> PRINT valor PUNTOCOMA .)
    FOR             reduce using rule 61 (print -> PRINT valor PUNTOCOMA .)
    IF              reduce using rule 61 (print -> PRINT valor PUNTOCOMA .)
    ELSEIF          reduce using rule 61 (print -> PRINT valor PUNTOCOMA .)
    ELSE            reduce using rule 61 (print -> PRINT valor PUNTOCOMA .)
    FOREACH         reduce using rule 61 (print -> PRINT valor PUNTOCOMA .)
    SWITCH          reduce using rule 61 (print -> PRINT valor PUNTOCOMA .)
    CADENA          reduce using rule 61 (print -> PRINT valor PUNTOCOMA .)
    BOOLEAN         reduce using rule 61 (print -> PRINT valor PUNTOCOMA .)
    ENTERO          reduce using rule 61 (print -> PRINT valor PUNTOCOMA .)
    FLOTANTE        reduce using rule 61 (print -> PRINT valor PUNTOCOMA .)
    $end            reduce using rule 61 (print -> PRINT valor PUNTOCOMA .)


state 126

    (64) echo -> ECHO valores PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 64 (echo -> ECHO valores PUNTOCOMA .)
    COMENTARIO      reduce using rule 64 (echo -> ECHO valores PUNTOCOMA .)
    LLAVEDER        reduce using rule 64 (echo -> ECHO valores PUNTOCOMA .)
    PRINT           reduce using rule 64 (echo -> ECHO valores PUNTOCOMA .)
    ECHO            reduce using rule 64 (echo -> ECHO valores PUNTOCOMA .)
    FUNCTION        reduce using rule 64 (echo -> ECHO valores PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 64 (echo -> ECHO valores PUNTOCOMA .)
    RETURN          reduce using rule 64 (echo -> ECHO valores PUNTOCOMA .)
    WHILE           reduce using rule 64 (echo -> ECHO valores PUNTOCOMA .)
    FOR             reduce using rule 64 (echo -> ECHO valores PUNTOCOMA .)
    IF              reduce using rule 64 (echo -> ECHO valores PUNTOCOMA .)
    ELSEIF          reduce using rule 64 (echo -> ECHO valores PUNTOCOMA .)
    ELSE            reduce using rule 64 (echo -> ECHO valores PUNTOCOMA .)
    FOREACH         reduce using rule 64 (echo -> ECHO valores PUNTOCOMA .)
    SWITCH          reduce using rule 64 (echo -> ECHO valores PUNTOCOMA .)
    CADENA          reduce using rule 64 (echo -> ECHO valores PUNTOCOMA .)
    BOOLEAN         reduce using rule 64 (echo -> ECHO valores PUNTOCOMA .)
    ENTERO          reduce using rule 64 (echo -> ECHO valores PUNTOCOMA .)
    FLOTANTE        reduce using rule 64 (echo -> ECHO valores PUNTOCOMA .)
    $end            reduce using rule 64 (echo -> ECHO valores PUNTOCOMA .)
    BREAK           reduce using rule 64 (echo -> ECHO valores PUNTOCOMA .)


state 127

    (21) valores -> valor COMA . valores
    (20) valores -> . valor
    (21) valores -> . valor COMA valores
    (24) valor -> . NUMERO
    (25) valor -> . CADENA
    (26) valor -> . BOOLEAN
    (27) valor -> . IDENTIFICADOR
    (22) NUMERO -> . ENTERO
    (23) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 56
    BOOLEAN         shift and go to state 57
    IDENTIFICADOR   shift and go to state 76
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 58

    valor                          shift and go to state 78
    valores                        shift and go to state 164
    NUMERO                         shift and go to state 75

state 128

    (65) funcion -> FUNCTION NAMEFUNCTION PARENIZ . parametro PARENDER LLAVEIZ
    (66) parametro -> . IDENTIFICADOR
    (67) parametro -> . IDENTIFICADOR COMA parametro

    IDENTIFICADOR   shift and go to state 130

    parametro                      shift and go to state 165

state 129

    (68) funcion -> NAMEFUNCTION PARENIZ parametro . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 166


state 130

    (66) parametro -> IDENTIFICADOR .
    (67) parametro -> IDENTIFICADOR . COMA parametro

    PARENDER        reduce using rule 66 (parametro -> IDENTIFICADOR .)
    COMA            shift and go to state 167


state 131

    (70) return -> RETURN IDENTIFICADOR PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 70 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    COMENTARIO      reduce using rule 70 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    LLAVEDER        reduce using rule 70 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    PRINT           reduce using rule 70 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    ECHO            reduce using rule 70 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    FUNCTION        reduce using rule 70 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 70 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    RETURN          reduce using rule 70 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    WHILE           reduce using rule 70 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    FOR             reduce using rule 70 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    IF              reduce using rule 70 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    ELSEIF          reduce using rule 70 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    ELSE            reduce using rule 70 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    FOREACH         reduce using rule 70 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    SWITCH          reduce using rule 70 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    CADENA          reduce using rule 70 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    BOOLEAN         reduce using rule 70 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    ENTERO          reduce using rule 70 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    FLOTANTE        reduce using rule 70 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    $end            reduce using rule 70 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)


state 132

    (78) while -> WHILE PARENIZ comparaciones . PARENDER LLAVEIZ

    PARENDER        shift and go to state 168


state 133

    (79) for -> FOR PARENIZ IDENTIFICADOR . ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    ASIGNAR         shift and go to state 169


state 134

    (85) if -> IF PARENIZ comparaciones . PARENDER LLAVEIZ

    PARENDER        shift and go to state 170


state 135

    (86) if -> IF PARENIZ IDENTIFICADOR . PARENDER LLAVEIZ
    (36) variable -> IDENTIFICADOR .
    (27) valor -> IDENTIFICADOR .

    PARENDER        shift and go to state 171
    MAYORQUE        reduce using rule 36 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 36 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 36 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 36 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 27 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 27 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 27 (valor -> IDENTIFICADOR .)


state 136

    (89) elseif -> ELSEIF PARENIZ comparaciones . PARENDER LLAVEIZ

    PARENDER        shift and go to state 172


state 137

    (90) elseif -> ELSEIF PARENIZ IDENTIFICADOR . PARENDER LLAVEIZ
    (36) variable -> IDENTIFICADOR .
    (27) valor -> IDENTIFICADOR .

    PARENDER        shift and go to state 173
    MAYORQUE        reduce using rule 36 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 36 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 36 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 36 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 27 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 27 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 27 (valor -> IDENTIFICADOR .)


state 138

    (80) foreach -> FOREACH PARENIZ IDENTIFICADOR . AS IDENTIFICADOR PARENDER LLAVEIZ

    AS              shift and go to state 174


state 139

    (81) switch -> SWITCH PARENIZ valor . PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER

    PARENDER        shift and go to state 175


state 140

    (39) comparacion -> variable comparadorNum variable .

    OPERADOR        reduce using rule 39 (comparacion -> variable comparadorNum variable .)
    AND             reduce using rule 39 (comparacion -> variable comparadorNum variable .)
    OR              reduce using rule 39 (comparacion -> variable comparadorNum variable .)
    IDENTIFICADOR   reduce using rule 39 (comparacion -> variable comparadorNum variable .)
    COMENTARIO      reduce using rule 39 (comparacion -> variable comparadorNum variable .)
    LLAVEDER        reduce using rule 39 (comparacion -> variable comparadorNum variable .)
    PRINT           reduce using rule 39 (comparacion -> variable comparadorNum variable .)
    ECHO            reduce using rule 39 (comparacion -> variable comparadorNum variable .)
    FUNCTION        reduce using rule 39 (comparacion -> variable comparadorNum variable .)
    NAMEFUNCTION    reduce using rule 39 (comparacion -> variable comparadorNum variable .)
    RETURN          reduce using rule 39 (comparacion -> variable comparadorNum variable .)
    WHILE           reduce using rule 39 (comparacion -> variable comparadorNum variable .)
    FOR             reduce using rule 39 (comparacion -> variable comparadorNum variable .)
    IF              reduce using rule 39 (comparacion -> variable comparadorNum variable .)
    ELSEIF          reduce using rule 39 (comparacion -> variable comparadorNum variable .)
    ELSE            reduce using rule 39 (comparacion -> variable comparadorNum variable .)
    FOREACH         reduce using rule 39 (comparacion -> variable comparadorNum variable .)
    SWITCH          reduce using rule 39 (comparacion -> variable comparadorNum variable .)
    CADENA          reduce using rule 39 (comparacion -> variable comparadorNum variable .)
    BOOLEAN         reduce using rule 39 (comparacion -> variable comparadorNum variable .)
    ENTERO          reduce using rule 39 (comparacion -> variable comparadorNum variable .)
    FLOTANTE        reduce using rule 39 (comparacion -> variable comparadorNum variable .)
    $end            reduce using rule 39 (comparacion -> variable comparadorNum variable .)
    PARENDER        reduce using rule 39 (comparacion -> variable comparadorNum variable .)


state 141

    (36) variable -> IDENTIFICADOR .

    OPERADOR        reduce using rule 36 (variable -> IDENTIFICADOR .)
    AND             reduce using rule 36 (variable -> IDENTIFICADOR .)
    OR              reduce using rule 36 (variable -> IDENTIFICADOR .)
    IDENTIFICADOR   reduce using rule 36 (variable -> IDENTIFICADOR .)
    COMENTARIO      reduce using rule 36 (variable -> IDENTIFICADOR .)
    LLAVEDER        reduce using rule 36 (variable -> IDENTIFICADOR .)
    PRINT           reduce using rule 36 (variable -> IDENTIFICADOR .)
    ECHO            reduce using rule 36 (variable -> IDENTIFICADOR .)
    FUNCTION        reduce using rule 36 (variable -> IDENTIFICADOR .)
    NAMEFUNCTION    reduce using rule 36 (variable -> IDENTIFICADOR .)
    RETURN          reduce using rule 36 (variable -> IDENTIFICADOR .)
    WHILE           reduce using rule 36 (variable -> IDENTIFICADOR .)
    FOR             reduce using rule 36 (variable -> IDENTIFICADOR .)
    IF              reduce using rule 36 (variable -> IDENTIFICADOR .)
    ELSEIF          reduce using rule 36 (variable -> IDENTIFICADOR .)
    ELSE            reduce using rule 36 (variable -> IDENTIFICADOR .)
    FOREACH         reduce using rule 36 (variable -> IDENTIFICADOR .)
    SWITCH          reduce using rule 36 (variable -> IDENTIFICADOR .)
    CADENA          reduce using rule 36 (variable -> IDENTIFICADOR .)
    BOOLEAN         reduce using rule 36 (variable -> IDENTIFICADOR .)
    ENTERO          reduce using rule 36 (variable -> IDENTIFICADOR .)
    FLOTANTE        reduce using rule 36 (variable -> IDENTIFICADOR .)
    $end            reduce using rule 36 (variable -> IDENTIFICADOR .)
    PARENDER        reduce using rule 36 (variable -> IDENTIFICADOR .)
    SUMA            reduce using rule 36 (variable -> IDENTIFICADOR .)
    RESTA           reduce using rule 36 (variable -> IDENTIFICADOR .)
    MULT            reduce using rule 36 (variable -> IDENTIFICADOR .)
    DIVISION        reduce using rule 36 (variable -> IDENTIFICADOR .)
    DIVISIONENTERA  reduce using rule 36 (variable -> IDENTIFICADOR .)
    MODULO          reduce using rule 36 (variable -> IDENTIFICADOR .)
    POTENCIA        reduce using rule 36 (variable -> IDENTIFICADOR .)


state 142

    (51) operacion -> variable operadorAritmetico variable .

    SUMA            reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    RESTA           reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    MULT            reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    DIVISION        reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    DIVISIONENTERA  reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    MODULO          reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    POTENCIA        reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    IDENTIFICADOR   reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    COMENTARIO      reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    LLAVEDER        reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    PRINT           reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    ECHO            reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    FUNCTION        reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    NAMEFUNCTION    reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    RETURN          reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    WHILE           reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    FOR             reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    IF              reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    ELSEIF          reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    ELSE            reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    FOREACH         reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    SWITCH          reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    CADENA          reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    BOOLEAN         reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    ENTERO          reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    FLOTANTE        reduce using rule 51 (operacion -> variable operadorAritmetico variable .)
    $end            reduce using rule 51 (operacion -> variable operadorAritmetico variable .)


state 143

    (50) operaciones -> IDENTIFICADOR ASIGNAR . operaciones
    (48) operaciones -> . operacion
    (49) operaciones -> . operacion operadorAritmetico operaciones
    (50) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (51) operacion -> . variable operadorAritmetico variable
    (35) variable -> . NUMERO
    (36) variable -> . IDENTIFICADOR
    (22) NUMERO -> . ENTERO
    (23) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 119
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 58

    operaciones                    shift and go to state 97
    operacion                      shift and go to state 38
    variable                       shift and go to state 104
    NUMERO                         shift and go to state 120

state 144

    (59) asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 59 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    COMENTARIO      reduce using rule 59 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    LLAVEDER        reduce using rule 59 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    PRINT           reduce using rule 59 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    ECHO            reduce using rule 59 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    FUNCTION        reduce using rule 59 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 59 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    RETURN          reduce using rule 59 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    WHILE           reduce using rule 59 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    FOR             reduce using rule 59 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    IF              reduce using rule 59 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    ELSEIF          reduce using rule 59 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    ELSE            reduce using rule 59 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    FOREACH         reduce using rule 59 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    SWITCH          reduce using rule 59 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    CADENA          reduce using rule 59 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    BOOLEAN         reduce using rule 59 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    ENTERO          reduce using rule 59 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    FLOTANTE        reduce using rule 59 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    $end            reduce using rule 59 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)


state 145

    (63) input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ . FLUJOS PARENDER PUNTOCOMA

    FLUJOS          shift and go to state 176


state 146

    (69) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ . parametro PARENDER PUNTOCOMA
    (66) parametro -> . IDENTIFICADOR
    (67) parametro -> . IDENTIFICADOR COMA parametro

    IDENTIFICADOR   shift and go to state 130

    parametro                      shift and go to state 177

state 147

    (103) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 178


state 148

    (98) stack -> IDENTIFICADOR ASIGNAR NEW STACK . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 179


state 149

    (111) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ . PARENDER PUNTOCOMA
    (112) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ . valores PARENDER PUNTOCOMA
    (20) valores -> . valor
    (21) valores -> . valor COMA valores
    (24) valor -> . NUMERO
    (25) valor -> . CADENA
    (26) valor -> . BOOLEAN
    (27) valor -> . IDENTIFICADOR
    (22) NUMERO -> . ENTERO
    (23) NUMERO -> . FLOTANTE

    PARENDER        shift and go to state 180
    CADENA          shift and go to state 56
    BOOLEAN         shift and go to state 57
    IDENTIFICADOR   shift and go to state 76
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 58

    valores                        shift and go to state 181
    valor                          shift and go to state 78
    NUMERO                         shift and go to state 75

state 150

    (113) array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores . CORCHETEDER PUNTOCOMA

    CORCHETEDER     shift and go to state 182


state 151

    (104) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ . valor PARENDER PUNTOCOMA
    (24) valor -> . NUMERO
    (25) valor -> . CADENA
    (26) valor -> . BOOLEAN
    (27) valor -> . IDENTIFICADOR
    (22) NUMERO -> . ENTERO
    (23) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 56
    BOOLEAN         shift and go to state 57
    IDENTIFICADOR   shift and go to state 76
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 58

    valor                          shift and go to state 183
    NUMERO                         shift and go to state 75

state 152

    (105) queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 184


state 153

    (106) queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 185


state 154

    (107) queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ . PARENDER PUNTOCOMA
    (99) stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 186


state 155

    (108) queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ . PARENDER PUNTOCOMA
    (100) stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 187


state 156

    (109) queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ . PARENDER PUNTOCOMA
    (101) stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 188


state 157

    (110) queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ . PARENDER
    (102) stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ . PARENDER

    PARENDER        shift and go to state 189


state 158

    (96) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ . valor PARENDER PUNTOCOMA
    (24) valor -> . NUMERO
    (25) valor -> . CADENA
    (26) valor -> . BOOLEAN
    (27) valor -> . IDENTIFICADOR
    (22) NUMERO -> . ENTERO
    (23) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 56
    BOOLEAN         shift and go to state 57
    IDENTIFICADOR   shift and go to state 76
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 58

    valor                          shift and go to state 190
    NUMERO                         shift and go to state 75

state 159

    (97) stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 191


state 160

    (87) elseif -> LLAVEDER ELSEIF PARENIZ comparaciones . PARENDER LLAVEIZ

    PARENDER        shift and go to state 192


state 161

    (88) elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR . PARENDER LLAVEIZ
    (36) variable -> IDENTIFICADOR .
    (27) valor -> IDENTIFICADOR .

    PARENDER        shift and go to state 193
    MAYORQUE        reduce using rule 36 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 36 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 36 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 36 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 27 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 27 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 27 (valor -> IDENTIFICADOR .)


state 162

    (60) print -> PRINT PARENIZ valores PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 194


state 163

    (62) print -> PRINT PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 62 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 62 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 62 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 62 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 62 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 62 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 62 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 62 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 62 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 62 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 62 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 62 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 62 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 62 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 62 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 62 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 62 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 62 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 62 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 62 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)


state 164

    (21) valores -> valor COMA valores .

    PUNTOCOMA       reduce using rule 21 (valores -> valor COMA valores .)
    PARENDER        reduce using rule 21 (valores -> valor COMA valores .)
    CORCHETEDER     reduce using rule 21 (valores -> valor COMA valores .)


state 165

    (65) funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro . PARENDER LLAVEIZ

    PARENDER        shift and go to state 195


state 166

    (68) funcion -> NAMEFUNCTION PARENIZ parametro PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 196


state 167

    (67) parametro -> IDENTIFICADOR COMA . parametro
    (66) parametro -> . IDENTIFICADOR
    (67) parametro -> . IDENTIFICADOR COMA parametro

    IDENTIFICADOR   shift and go to state 130

    parametro                      shift and go to state 197

state 168

    (78) while -> WHILE PARENIZ comparaciones PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 198


state 169

    (79) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR . ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    ENTERO          shift and go to state 199


state 170

    (85) if -> IF PARENIZ comparaciones PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 200


state 171

    (86) if -> IF PARENIZ IDENTIFICADOR PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 201


state 172

    (89) elseif -> ELSEIF PARENIZ comparaciones PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 202


state 173

    (90) elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 203


state 174

    (80) foreach -> FOREACH PARENIZ IDENTIFICADOR AS . IDENTIFICADOR PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 204


state 175

    (81) switch -> SWITCH PARENIZ valor PARENDER . LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER

    LLAVEIZ         shift and go to state 205


state 176

    (63) input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 206


state 177

    (69) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 207


state 178

    (103) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 208


state 179

    (98) stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 209


state 180

    (111) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 210


state 181

    (112) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 211


state 182

    (113) array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 212


state 183

    (104) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 213


state 184

    (105) queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 214


state 185

    (106) queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 215


state 186

    (107) queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER . PUNTOCOMA
    (99) stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 216


state 187

    (108) queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER . PUNTOCOMA
    (100) stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 217


state 188

    (109) queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER . PUNTOCOMA
    (101) stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 218


state 189

    (110) queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .
    (102) stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for PRINT resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for ECHO resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for NAMEFUNCTION resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for RETURN resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for WHILE resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for FOR resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for IF resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for ELSE resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for FOREACH resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for SWITCH resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for CADENA resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for ENTERO resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for $end resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    IDENTIFICADOR   reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    COMENTARIO      reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    LLAVEDER        reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    PRINT           reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    ECHO            reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    FUNCTION        reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    NAMEFUNCTION    reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    RETURN          reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    WHILE           reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    FOR             reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    IF              reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    ELSEIF          reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    ELSE            reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    FOREACH         reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    SWITCH          reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    CADENA          reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    BOOLEAN         reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    ENTERO          reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    FLOTANTE        reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    $end            reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)

  ! IDENTIFICADOR   [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! COMENTARIO      [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! LLAVEDER        [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! PRINT           [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! ECHO            [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! FUNCTION        [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! NAMEFUNCTION    [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! RETURN          [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! WHILE           [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! FOR             [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! IF              [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! ELSEIF          [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! ELSE            [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! FOREACH         [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! SWITCH          [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! CADENA          [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! BOOLEAN         [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! ENTERO          [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! FLOTANTE        [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! $end            [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]


state 190

    (96) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 219


state 191

    (97) stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 220


state 192

    (87) elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 221


state 193

    (88) elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 222


state 194

    (60) print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 60 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 60 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 60 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 60 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 60 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 60 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 60 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 60 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 60 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    FOR             reduce using rule 60 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    IF              reduce using rule 60 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 60 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 60 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 60 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 60 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 60 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 60 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 60 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 60 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    $end            reduce using rule 60 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)


state 195

    (65) funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 223


state 196

    (68) funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 68 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 68 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 68 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 68 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 68 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 68 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 68 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 68 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 68 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FOR             reduce using rule 68 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    IF              reduce using rule 68 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 68 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 68 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 68 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 68 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 68 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 68 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 68 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 68 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    $end            reduce using rule 68 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)


state 197

    (67) parametro -> IDENTIFICADOR COMA parametro .

    PARENDER        reduce using rule 67 (parametro -> IDENTIFICADOR COMA parametro .)


state 198

    (78) while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 78 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 78 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 78 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    PRINT           reduce using rule 78 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    ECHO            reduce using rule 78 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 78 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 78 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    RETURN          reduce using rule 78 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    WHILE           reduce using rule 78 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOR             reduce using rule 78 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    IF              reduce using rule 78 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 78 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSE            reduce using rule 78 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 78 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 78 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    CADENA          reduce using rule 78 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 78 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 78 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 78 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    $end            reduce using rule 78 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)


state 199

    (79) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO . PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    PUNTOCOMA       shift and go to state 224


state 200

    (85) if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 85 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 85 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 85 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    PRINT           reduce using rule 85 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ECHO            reduce using rule 85 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 85 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 85 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RETURN          reduce using rule 85 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    WHILE           reduce using rule 85 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOR             reduce using rule 85 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    IF              reduce using rule 85 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 85 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSE            reduce using rule 85 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 85 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 85 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    CADENA          reduce using rule 85 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 85 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 85 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 85 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    $end            reduce using rule 85 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)


state 201

    (86) if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 86 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 86 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 86 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    PRINT           reduce using rule 86 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ECHO            reduce using rule 86 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 86 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 86 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RETURN          reduce using rule 86 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    WHILE           reduce using rule 86 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOR             reduce using rule 86 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    IF              reduce using rule 86 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 86 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSE            reduce using rule 86 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 86 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 86 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    CADENA          reduce using rule 86 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 86 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 86 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 86 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    $end            reduce using rule 86 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)


state 202

    (89) elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 89 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 89 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 89 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    PRINT           reduce using rule 89 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ECHO            reduce using rule 89 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 89 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 89 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RETURN          reduce using rule 89 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    WHILE           reduce using rule 89 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOR             reduce using rule 89 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    IF              reduce using rule 89 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 89 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSE            reduce using rule 89 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 89 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 89 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    CADENA          reduce using rule 89 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 89 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 89 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 89 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    $end            reduce using rule 89 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)


state 203

    (90) elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 90 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 90 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 90 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    PRINT           reduce using rule 90 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ECHO            reduce using rule 90 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 90 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 90 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RETURN          reduce using rule 90 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    WHILE           reduce using rule 90 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOR             reduce using rule 90 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    IF              reduce using rule 90 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 90 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSE            reduce using rule 90 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 90 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 90 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    CADENA          reduce using rule 90 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 90 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 90 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 90 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    $end            reduce using rule 90 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)


state 204

    (80) foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR . PARENDER LLAVEIZ

    PARENDER        shift and go to state 225


state 205

    (81) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ . casos DEFAULT DOSPUNTOS echo LLAVEDER
    (82) casos -> . caso
    (83) casos -> . caso casos
    (84) caso -> . CASE valor DOSPUNTOS echo BREAK PUNTOCOMA

    CASE            shift and go to state 228

    casos                          shift and go to state 226
    caso                           shift and go to state 227

state 206

    (63) input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 229


state 207

    (69) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 230


state 208

    (103) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 231


state 209

    (98) stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 232


state 210

    (111) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)


state 211

    (112) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 233


state 212

    (113) array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 113 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 113 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 113 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    PRINT           reduce using rule 113 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    ECHO            reduce using rule 113 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    FUNCTION        reduce using rule 113 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 113 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    RETURN          reduce using rule 113 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    WHILE           reduce using rule 113 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    FOR             reduce using rule 113 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    IF              reduce using rule 113 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    ELSEIF          reduce using rule 113 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    ELSE            reduce using rule 113 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    FOREACH         reduce using rule 113 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    SWITCH          reduce using rule 113 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    CADENA          reduce using rule 113 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 113 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    ENTERO          reduce using rule 113 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 113 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    $end            reduce using rule 113 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)


state 213

    (104) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 234


state 214

    (105) queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)


state 215

    (106) queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)


state 216

    (107) queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .
    (99) stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ECHO resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for NAMEFUNCTION resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RETURN resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOREACH resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for SWITCH resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for CADENA resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for $end resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)

  ! IDENTIFICADOR   [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! COMENTARIO      [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! LLAVEDER        [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! PRINT           [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ECHO            [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FUNCTION        [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! NAMEFUNCTION    [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! RETURN          [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! WHILE           [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOR             [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! IF              [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSEIF          [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSE            [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOREACH         [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! SWITCH          [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! CADENA          [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! BOOLEAN         [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ENTERO          [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FLOTANTE        [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! $end            [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]


state 217

    (108) queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .
    (100) stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ECHO resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for NAMEFUNCTION resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RETURN resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOREACH resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for SWITCH resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for CADENA resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for $end resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)

  ! IDENTIFICADOR   [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! COMENTARIO      [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! LLAVEDER        [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! PRINT           [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! ECHO            [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! FUNCTION        [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! NAMEFUNCTION    [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! RETURN          [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! WHILE           [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOR             [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! IF              [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSEIF          [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSE            [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOREACH         [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! SWITCH          [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! CADENA          [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! BOOLEAN         [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! ENTERO          [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! FLOTANTE        [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! $end            [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]


state 218

    (109) queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .
    (101) stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ECHO resolved using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for NAMEFUNCTION resolved using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RETURN resolved using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOREACH resolved using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for SWITCH resolved using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for CADENA resolved using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for $end resolved using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 101 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)

  ! IDENTIFICADOR   [ reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! COMENTARIO      [ reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! LLAVEDER        [ reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! PRINT           [ reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ECHO            [ reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FUNCTION        [ reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! NAMEFUNCTION    [ reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! RETURN          [ reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! WHILE           [ reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOR             [ reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! IF              [ reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSEIF          [ reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSE            [ reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOREACH         [ reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! SWITCH          [ reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! CADENA          [ reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! BOOLEAN         [ reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ENTERO          [ reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FLOTANTE        [ reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! $end            [ reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]


state 219

    (96) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 235


state 220

    (97) stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)


state 221

    (87) elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 87 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 87 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 87 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    PRINT           reduce using rule 87 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ECHO            reduce using rule 87 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 87 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 87 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RETURN          reduce using rule 87 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    WHILE           reduce using rule 87 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOR             reduce using rule 87 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    IF              reduce using rule 87 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 87 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSE            reduce using rule 87 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 87 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 87 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    CADENA          reduce using rule 87 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 87 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 87 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 87 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    $end            reduce using rule 87 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)


state 222

    (88) elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 88 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 88 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 88 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    PRINT           reduce using rule 88 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ECHO            reduce using rule 88 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 88 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 88 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RETURN          reduce using rule 88 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    WHILE           reduce using rule 88 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOR             reduce using rule 88 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    IF              reduce using rule 88 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 88 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSE            reduce using rule 88 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 88 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 88 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    CADENA          reduce using rule 88 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 88 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 88 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 88 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    $end            reduce using rule 88 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)


state 223

    (65) funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 65 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 65 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 65 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    PRINT           reduce using rule 65 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    ECHO            reduce using rule 65 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 65 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 65 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    RETURN          reduce using rule 65 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    WHILE           reduce using rule 65 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    FOR             reduce using rule 65 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    IF              reduce using rule 65 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 65 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    ELSE            reduce using rule 65 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 65 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 65 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    CADENA          reduce using rule 65 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 65 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 65 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 65 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    $end            reduce using rule 65 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)


state 224

    (79) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA . IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 236


state 225

    (80) foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 237


state 226

    (81) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos . DEFAULT DOSPUNTOS echo LLAVEDER

    DEFAULT         shift and go to state 238


state 227

    (82) casos -> caso .
    (83) casos -> caso . casos
    (82) casos -> . caso
    (83) casos -> . caso casos
    (84) caso -> . CASE valor DOSPUNTOS echo BREAK PUNTOCOMA

    DEFAULT         reduce using rule 82 (casos -> caso .)
    CASE            shift and go to state 228

    caso                           shift and go to state 227
    casos                          shift and go to state 239

state 228

    (84) caso -> CASE . valor DOSPUNTOS echo BREAK PUNTOCOMA
    (24) valor -> . NUMERO
    (25) valor -> . CADENA
    (26) valor -> . BOOLEAN
    (27) valor -> . IDENTIFICADOR
    (22) NUMERO -> . ENTERO
    (23) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 56
    BOOLEAN         shift and go to state 57
    IDENTIFICADOR   shift and go to state 76
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 58

    valor                          shift and go to state 240
    NUMERO                         shift and go to state 75

state 229

    (63) input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 63 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 63 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 63 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 63 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 63 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 63 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 63 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 63 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 63 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    FOR             reduce using rule 63 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    IF              reduce using rule 63 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 63 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 63 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 63 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 63 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 63 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 63 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 63 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 63 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    $end            reduce using rule 63 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)


state 230

    (69) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 69 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 69 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 69 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 69 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 69 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 69 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 69 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 69 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 69 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FOR             reduce using rule 69 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    IF              reduce using rule 69 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 69 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 69 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 69 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 69 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 69 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 69 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 69 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 69 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    $end            reduce using rule 69 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)


state 231

    (103) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 103 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 103 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 103 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 103 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 103 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 103 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 103 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 103 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 103 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 103 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 103 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 103 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 103 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 103 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 103 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 103 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 103 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 103 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 103 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 103 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)


state 232

    (98) stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 98 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 98 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 98 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 98 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 98 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 98 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 98 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 98 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 98 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 98 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 98 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 98 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 98 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 98 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 98 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 98 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 98 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 98 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 98 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 98 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)


state 233

    (112) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 112 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 112 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 112 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 112 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 112 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 112 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 112 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 112 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 112 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    FOR             reduce using rule 112 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    IF              reduce using rule 112 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 112 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 112 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 112 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 112 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 112 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 112 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 112 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 112 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    $end            reduce using rule 112 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)


state 234

    (104) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    FOR             reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    IF              reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    $end            reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)


state 235

    (96) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 96 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 96 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 96 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 96 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 96 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 96 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 96 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 96 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 96 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    FOR             reduce using rule 96 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    IF              reduce using rule 96 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 96 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 96 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 96 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 96 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 96 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 96 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 96 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 96 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    $end            reduce using rule 96 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)


state 236

    (79) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR . comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ
    (28) comparadorNum -> . MAYORQUE
    (29) comparadorNum -> . MAYORIGUALQUE
    (30) comparadorNum -> . MENORQUE
    (31) comparadorNum -> . MENORIGUALQUE

    MAYORQUE        shift and go to state 91
    MAYORIGUALQUE   shift and go to state 92
    MENORQUE        shift and go to state 93
    MENORIGUALQUE   shift and go to state 94

    comparadorNum                  shift and go to state 241

state 237

    (80) foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 80 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 80 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 80 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    PRINT           reduce using rule 80 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    ECHO            reduce using rule 80 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 80 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 80 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    RETURN          reduce using rule 80 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    WHILE           reduce using rule 80 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    FOR             reduce using rule 80 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    IF              reduce using rule 80 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 80 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSE            reduce using rule 80 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 80 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 80 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    CADENA          reduce using rule 80 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 80 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 80 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 80 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    $end            reduce using rule 80 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)


state 238

    (81) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT . DOSPUNTOS echo LLAVEDER

    DOSPUNTOS       shift and go to state 242


state 239

    (83) casos -> caso casos .

    DEFAULT         reduce using rule 83 (casos -> caso casos .)


state 240

    (84) caso -> CASE valor . DOSPUNTOS echo BREAK PUNTOCOMA

    DOSPUNTOS       shift and go to state 243


state 241

    (79) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum . ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    ENTERO          shift and go to state 244


state 242

    (81) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS . echo LLAVEDER
    (64) echo -> . ECHO valores PUNTOCOMA

    ECHO            shift and go to state 42

    echo                           shift and go to state 245

state 243

    (84) caso -> CASE valor DOSPUNTOS . echo BREAK PUNTOCOMA
    (64) echo -> . ECHO valores PUNTOCOMA

    ECHO            shift and go to state 42

    echo                           shift and go to state 246

state 244

    (79) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO . PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    PUNTOCOMA       shift and go to state 247


state 245

    (81) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo . LLAVEDER

    LLAVEDER        shift and go to state 248


state 246

    (84) caso -> CASE valor DOSPUNTOS echo . BREAK PUNTOCOMA

    BREAK           shift and go to state 249


state 247

    (79) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA . IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 250


state 248

    (81) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .

    IDENTIFICADOR   reduce using rule 81 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    COMENTARIO      reduce using rule 81 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    LLAVEDER        reduce using rule 81 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    PRINT           reduce using rule 81 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    ECHO            reduce using rule 81 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    FUNCTION        reduce using rule 81 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    NAMEFUNCTION    reduce using rule 81 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    RETURN          reduce using rule 81 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    WHILE           reduce using rule 81 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    FOR             reduce using rule 81 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    IF              reduce using rule 81 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    ELSEIF          reduce using rule 81 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    ELSE            reduce using rule 81 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    FOREACH         reduce using rule 81 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    SWITCH          reduce using rule 81 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    CADENA          reduce using rule 81 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    BOOLEAN         reduce using rule 81 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    ENTERO          reduce using rule 81 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    FLOTANTE        reduce using rule 81 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    $end            reduce using rule 81 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)


state 249

    (84) caso -> CASE valor DOSPUNTOS echo BREAK . PUNTOCOMA

    PUNTOCOMA       shift and go to state 251


state 250

    (79) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR . incrementoDecremento PARENDER LLAVEIZ
    (41) incrementoDecremento -> . INCREMENTO
    (42) incrementoDecremento -> . DECREMENTO
    (43) incrementoDecremento -> . SUMA ENTERO
    (44) incrementoDecremento -> . RESTA ENTERO

    INCREMENTO      shift and go to state 253
    DECREMENTO      shift and go to state 254
    SUMA            shift and go to state 255
    RESTA           shift and go to state 256

    incrementoDecremento           shift and go to state 252

state 251

    (84) caso -> CASE valor DOSPUNTOS echo BREAK PUNTOCOMA .

    CASE            reduce using rule 84 (caso -> CASE valor DOSPUNTOS echo BREAK PUNTOCOMA .)
    DEFAULT         reduce using rule 84 (caso -> CASE valor DOSPUNTOS echo BREAK PUNTOCOMA .)


state 252

    (79) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento . PARENDER LLAVEIZ

    PARENDER        shift and go to state 257


state 253

    (41) incrementoDecremento -> INCREMENTO .

    PARENDER        reduce using rule 41 (incrementoDecremento -> INCREMENTO .)


state 254

    (42) incrementoDecremento -> DECREMENTO .

    PARENDER        reduce using rule 42 (incrementoDecremento -> DECREMENTO .)


state 255

    (43) incrementoDecremento -> SUMA . ENTERO

    ENTERO          shift and go to state 258


state 256

    (44) incrementoDecremento -> RESTA . ENTERO

    ENTERO          shift and go to state 259


state 257

    (79) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 260


state 258

    (43) incrementoDecremento -> SUMA ENTERO .

    PARENDER        reduce using rule 43 (incrementoDecremento -> SUMA ENTERO .)


state 259

    (44) incrementoDecremento -> RESTA ENTERO .

    PARENDER        reduce using rule 44 (incrementoDecremento -> RESTA ENTERO .)


state 260

    (79) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 79 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 79 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 79 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    PRINT           reduce using rule 79 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    ECHO            reduce using rule 79 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 79 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 79 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    RETURN          reduce using rule 79 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    WHILE           reduce using rule 79 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    FOR             reduce using rule 79 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    IF              reduce using rule 79 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 79 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    ELSE            reduce using rule 79 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 79 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 79 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    CADENA          reduce using rule 79 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 79 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 79 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 79 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    $end            reduce using rule 79 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSEIF in state 40 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 40 resolved as shift
WARNING: reduce/reduce conflict in state 189 resolved using rule (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER)
WARNING: rejected rule (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER) in state 189
WARNING: reduce/reduce conflict in state 216 resolved using rule (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA)
WARNING: rejected rule (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA) in state 216
WARNING: reduce/reduce conflict in state 217 resolved using rule (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA)
WARNING: rejected rule (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA) in state 217
WARNING: reduce/reduce conflict in state 218 resolved using rule (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA)
WARNING: rejected rule (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA) in state 218
WARNING: Rule (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER) is never reduced
WARNING: Rule (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA) is never reduced
WARNING: Rule (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA) is never reduced
WARNING: Rule (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA) is never reduced
