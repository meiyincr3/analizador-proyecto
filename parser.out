Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> bloques
Rule 2     sentencias -> operadorAritmetico
Rule 3     bloques -> bloque
Rule 4     bloques -> bloque bloques
Rule 5     bloque -> impresion
Rule 6     bloque -> asignacion
Rule 7     bloque -> funciones
Rule 8     bloque -> estructurasControl
Rule 9     bloque -> estructurasDeDatos
Rule 10    bloque -> comparaciones
Rule 11    bloque -> operaciones
Rule 12    bloque -> comentario
Rule 13    bloque -> longitud
Rule 14    impresion -> print
Rule 15    impresion -> echo
Rule 16    impresion -> input
Rule 17    comentario -> COMENTARIO
Rule 18    comentario -> LLAVEDER
Rule 19    funciones -> funcion
Rule 20    funciones -> return
Rule 21    valores -> valor
Rule 22    valores -> valor COMA valores
Rule 23    NUMERO -> ENTERO
Rule 24    NUMERO -> RESTA ENTERO
Rule 25    NUMERO -> FLOTANTE
Rule 26    valor -> NUMERO
Rule 27    valor -> CADENA
Rule 28    valor -> BOOLEAN
Rule 29    valor -> IDENTIFICADOR
Rule 30    comparadorNum -> MAYORQUE
Rule 31    comparadorNum -> MAYORIGUALQUE
Rule 32    comparadorNum -> MENORQUE
Rule 33    comparadorNum -> MENORIGUALQUE
Rule 34    comparador -> IDENTICO
Rule 35    comparador -> NOIDENTICO
Rule 36    comparador -> IGUAL
Rule 37    variable -> NUMERO
Rule 38    variable -> IDENTIFICADOR
Rule 39    comparaciones -> comparacion
Rule 40    comparaciones -> comparacion operadores comparaciones
Rule 41    comparacion -> variable comparadorNum variable
Rule 42    comparacion -> valor comparador valor
Rule 43    incrementoDecremento -> INCREMENTO
Rule 44    incrementoDecremento -> DECREMENTO
Rule 45    incrementoDecremento -> SUMA ENTERO
Rule 46    incrementoDecremento -> RESTA ENTERO
Rule 47    operadores -> OPERADOR
Rule 48    operadores -> AND
Rule 49    operadores -> OR
Rule 50    longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA
Rule 51    operaciones -> operacion
Rule 52    operaciones -> operacion operadorAritmetico operaciones
Rule 53    operaciones -> IDENTIFICADOR ASIGNAR operaciones
Rule 54    operacion -> variable operadorAritmetico variable
Rule 55    operadorAritmetico -> SUMA
Rule 56    operadorAritmetico -> RESTA
Rule 57    operadorAritmetico -> MULT
Rule 58    operadorAritmetico -> DIVISION
Rule 59    operadorAritmetico -> DIVISIONENTERA
Rule 60    operadorAritmetico -> MODULO
Rule 61    operadorAritmetico -> POTENCIA
Rule 62    asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA
Rule 63    print -> PRINT PARENIZ valores PARENDER PUNTOCOMA
Rule 64    print -> PRINT valor PUNTOCOMA
Rule 65    print -> PRINT PARENIZ PARENDER PUNTOCOMA
Rule 66    input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA
Rule 67    echo -> ECHO valores PUNTOCOMA
Rule 68    funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ
Rule 69    parametro -> IDENTIFICADOR
Rule 70    parametro -> IDENTIFICADOR COMA parametro
Rule 71    funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
Rule 72    funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
Rule 73    return -> RETURN IDENTIFICADOR PUNTOCOMA
Rule 74    estructurasControl -> while
Rule 75    estructurasControl -> for
Rule 76    estructurasControl -> if
Rule 77    estructurasControl -> elseif
Rule 78    estructurasControl -> else
Rule 79    estructurasControl -> foreach
Rule 80    estructurasControl -> switch
Rule 81    while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ
Rule 82    for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ
Rule 83    foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ
Rule 84    switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER
Rule 85    casos -> caso
Rule 86    casos -> caso casos
Rule 87    caso -> CASE valor DOSPUNTOS echo BREAK PUNTOCOMA
Rule 88    if -> IF PARENIZ comparaciones PARENDER LLAVEIZ
Rule 89    if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
Rule 90    elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
Rule 91    elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
Rule 92    elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
Rule 93    elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
Rule 94    else -> LLAVEDER ELSE LLAVEIZ
Rule 95    else -> ELSE LLAVEIZ
Rule 96    estructurasDeDatos -> queue
Rule 97    estructurasDeDatos -> stack
Rule 98    estructurasDeDatos -> array
Rule 99    stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA
Rule 100   stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA
Rule 101   stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA
Rule 102   stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
Rule 103   stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
Rule 104   stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
Rule 105   stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
Rule 106   queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA
Rule 107   queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
Rule 108   queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA
Rule 109   queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA
Rule 110   queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
Rule 111   queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
Rule 112   queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
Rule 113   queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
Rule 114   array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA
Rule 115   array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA
Rule 116   array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA

Terminals, with rules where they appear

AND                  : 48
ARRAY                : 114 115
AS                   : 83
ASIGNAR              : 50 53 62 66 72 82 101 106 114 115 116
BOOLEAN              : 28
BREAK                : 87
CADENA               : 27
CASE                 : 87
COMA                 : 22 70
COMENTARIO           : 17
CORCHETEDER          : 116
CORCHETEIZ           : 116
COUNT                : 108
CURRENT              : 104 112
DECREMENTO           : 44
DEFAULT              : 84
DEQUEUE              : 109
DIVISION             : 58
DIVISIONENTERA       : 59
DOSPUNTOS            : 84 87
ECHO                 : 67
ELSE                 : 94 95
ELSEIF               : 90 91 92 93
ENQUEUE              : 107
ENTERO               : 23 24 45 46 82 82
FGETS                : 66
FLECHASIMPLE         : 99 100 102 103 104 105 107 108 109 110 111 112 113
FLOTANTE             : 25
FLUJOS               : 66
FOR                  : 82
FOREACH              : 83
FUNCTION             : 68
IDENTICO             : 34
IDENTIFICADOR        : 29 38 50 53 62 66 69 70 72 73 82 82 82 83 83 89 91 93 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116
IF                   : 88 89
IGUAL                : 36
INCREMENTO           : 43
LLAVEDER             : 18 84 90 91 94
LLAVEIZ              : 68 81 82 83 84 88 89 90 91 92 93 94 95
MAYORIGUALQUE        : 31
MAYORQUE             : 30
MENORIGUALQUE        : 33
MENORQUE             : 32
MODULO               : 60
MULT                 : 57
NAMEFUNCTION         : 68 71 72
NEW                  : 101 106
NEXT                 : 102 110
NOIDENTICO           : 35
OPERADOR             : 47
OR                   : 49
PARENDER             : 50 63 65 66 68 71 72 81 82 83 84 88 89 90 91 92 93 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115
PARENIZ              : 50 63 65 66 68 71 72 81 82 83 84 88 89 90 91 92 93 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115
POP                  : 100
POTENCIA             : 61
PRINT                : 63 64 65
PUNTOCOMA            : 50 62 63 64 65 66 67 71 72 73 82 82 87 99 100 101 102 103 104 106 107 108 109 110 111 112 114 115 116
PUSH                 : 99
QUEUE                : 106
RESTA                : 24 46 56
RETURN               : 73
REWIND               : 103 111
STACK                : 101
STRLEN               : 50
SUMA                 : 45 55
SWITCH               : 84
VALID                : 105 113
WHILE                : 81
error                : 

Nonterminals, with rules where they appear

NUMERO               : 26 37
array                : 98
asignacion           : 6
bloque               : 3 4
bloques              : 1 4
caso                 : 85 86
casos                : 84 86
comentario           : 12
comparacion          : 39 40
comparaciones        : 10 40 81 88 90 92
comparador           : 42
comparadorNum        : 41 82
echo                 : 15 84 87
else                 : 78
elseif               : 77
estructurasControl   : 8
estructurasDeDatos   : 9
for                  : 75
foreach              : 79
funcion              : 19
funciones            : 7
if                   : 76
impresion            : 5
incrementoDecremento : 82
input                : 16
longitud             : 13
operacion            : 51 52
operaciones          : 11 52 53
operadorAritmetico   : 2 52 54
operadores           : 40
parametro            : 68 70 71 72
print                : 14
queue                : 96
return               : 20
sentencias           : 0
stack                : 97
switch               : 80
valor                : 21 22 42 42 50 62 64 84 87 99 107
valores              : 22 63 67 115 116
variable             : 41 41 54 54
while                : 74

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . bloques
    (2) sentencias -> . operadorAritmetico
    (3) bloques -> . bloque
    (4) bloques -> . bloque bloques
    (55) operadorAritmetico -> . SUMA
    (56) operadorAritmetico -> . RESTA
    (57) operadorAritmetico -> . MULT
    (58) operadorAritmetico -> . DIVISION
    (59) operadorAritmetico -> . DIVISIONENTERA
    (60) operadorAritmetico -> . MODULO
    (61) operadorAritmetico -> . POTENCIA
    (5) bloque -> . impresion
    (6) bloque -> . asignacion
    (7) bloque -> . funciones
    (8) bloque -> . estructurasControl
    (9) bloque -> . estructurasDeDatos
    (10) bloque -> . comparaciones
    (11) bloque -> . operaciones
    (12) bloque -> . comentario
    (13) bloque -> . longitud
    (14) impresion -> . print
    (15) impresion -> . echo
    (16) impresion -> . input
    (62) asignacion -> . IDENTIFICADOR ASIGNAR valor PUNTOCOMA
    (19) funciones -> . funcion
    (20) funciones -> . return
    (74) estructurasControl -> . while
    (75) estructurasControl -> . for
    (76) estructurasControl -> . if
    (77) estructurasControl -> . elseif
    (78) estructurasControl -> . else
    (79) estructurasControl -> . foreach
    (80) estructurasControl -> . switch
    (96) estructurasDeDatos -> . queue
    (97) estructurasDeDatos -> . stack
    (98) estructurasDeDatos -> . array
    (39) comparaciones -> . comparacion
    (40) comparaciones -> . comparacion operadores comparaciones
    (51) operaciones -> . operacion
    (52) operaciones -> . operacion operadorAritmetico operaciones
    (53) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (17) comentario -> . COMENTARIO
    (18) comentario -> . LLAVEDER
    (50) longitud -> . IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA
    (63) print -> . PRINT PARENIZ valores PARENDER PUNTOCOMA
    (64) print -> . PRINT valor PUNTOCOMA
    (65) print -> . PRINT PARENIZ PARENDER PUNTOCOMA
    (67) echo -> . ECHO valores PUNTOCOMA
    (66) input -> . IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA
    (68) funcion -> . FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ
    (71) funcion -> . NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (72) funcion -> . IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (73) return -> . RETURN IDENTIFICADOR PUNTOCOMA
    (81) while -> . WHILE PARENIZ comparaciones PARENDER LLAVEIZ
    (82) for -> . FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ
    (88) if -> . IF PARENIZ comparaciones PARENDER LLAVEIZ
    (89) if -> . IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (90) elseif -> . LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (91) elseif -> . LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (92) elseif -> . ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (93) elseif -> . ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (94) else -> . LLAVEDER ELSE LLAVEIZ
    (95) else -> . ELSE LLAVEIZ
    (83) foreach -> . FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ
    (84) switch -> . SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER
    (106) queue -> . IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA
    (107) queue -> . IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
    (108) queue -> . IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA
    (109) queue -> . IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA
    (110) queue -> . IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (111) queue -> . IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (112) queue -> . IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (113) queue -> . IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
    (99) stack -> . IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA
    (100) stack -> . IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA
    (101) stack -> . IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA
    (102) stack -> . IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (103) stack -> . IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (104) stack -> . IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (105) stack -> . IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
    (114) array -> . IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA
    (115) array -> . IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA
    (116) array -> . IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA
    (41) comparacion -> . variable comparadorNum variable
    (42) comparacion -> . valor comparador valor
    (54) operacion -> . variable operadorAritmetico variable
    (37) variable -> . NUMERO
    (38) variable -> . IDENTIFICADOR
    (26) valor -> . NUMERO
    (27) valor -> . CADENA
    (28) valor -> . BOOLEAN
    (29) valor -> . IDENTIFICADOR
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE

    SUMA            shift and go to state 5
    RESTA           shift and go to state 6
    MULT            shift and go to state 7
    DIVISION        shift and go to state 8
    DIVISIONENTERA  shift and go to state 9
    MODULO          shift and go to state 10
    POTENCIA        shift and go to state 11
    IDENTIFICADOR   shift and go to state 24
    COMENTARIO      shift and go to state 40
    LLAVEDER        shift and go to state 41
    PRINT           shift and go to state 42
    ECHO            shift and go to state 43
    FUNCTION        shift and go to state 44
    NAMEFUNCTION    shift and go to state 45
    RETURN          shift and go to state 46
    WHILE           shift and go to state 47
    FOR             shift and go to state 48
    IF              shift and go to state 50
    ELSEIF          shift and go to state 51
    ELSE            shift and go to state 52
    FOREACH         shift and go to state 53
    SWITCH          shift and go to state 54
    CADENA          shift and go to state 57
    BOOLEAN         shift and go to state 58
    ENTERO          shift and go to state 49
    FLOTANTE        shift and go to state 59

    sentencias                     shift and go to state 1
    bloques                        shift and go to state 2
    operadorAritmetico             shift and go to state 3
    bloque                         shift and go to state 4
    impresion                      shift and go to state 12
    asignacion                     shift and go to state 13
    funciones                      shift and go to state 14
    estructurasControl             shift and go to state 15
    estructurasDeDatos             shift and go to state 16
    comparaciones                  shift and go to state 17
    operaciones                    shift and go to state 18
    comentario                     shift and go to state 19
    longitud                       shift and go to state 20
    print                          shift and go to state 21
    echo                           shift and go to state 22
    input                          shift and go to state 23
    valor                          shift and go to state 25
    funcion                        shift and go to state 26
    return                         shift and go to state 27
    while                          shift and go to state 28
    for                            shift and go to state 29
    if                             shift and go to state 30
    elseif                         shift and go to state 31
    else                           shift and go to state 32
    foreach                        shift and go to state 33
    switch                         shift and go to state 34
    queue                          shift and go to state 35
    stack                          shift and go to state 36
    array                          shift and go to state 37
    comparacion                    shift and go to state 38
    operacion                      shift and go to state 39
    variable                       shift and go to state 55
    NUMERO                         shift and go to state 56

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> bloques .

    $end            reduce using rule 1 (sentencias -> bloques .)


state 3

    (2) sentencias -> operadorAritmetico .

    $end            reduce using rule 2 (sentencias -> operadorAritmetico .)


state 4

    (3) bloques -> bloque .
    (4) bloques -> bloque . bloques
    (3) bloques -> . bloque
    (4) bloques -> . bloque bloques
    (5) bloque -> . impresion
    (6) bloque -> . asignacion
    (7) bloque -> . funciones
    (8) bloque -> . estructurasControl
    (9) bloque -> . estructurasDeDatos
    (10) bloque -> . comparaciones
    (11) bloque -> . operaciones
    (12) bloque -> . comentario
    (13) bloque -> . longitud
    (14) impresion -> . print
    (15) impresion -> . echo
    (16) impresion -> . input
    (62) asignacion -> . IDENTIFICADOR ASIGNAR valor PUNTOCOMA
    (19) funciones -> . funcion
    (20) funciones -> . return
    (74) estructurasControl -> . while
    (75) estructurasControl -> . for
    (76) estructurasControl -> . if
    (77) estructurasControl -> . elseif
    (78) estructurasControl -> . else
    (79) estructurasControl -> . foreach
    (80) estructurasControl -> . switch
    (96) estructurasDeDatos -> . queue
    (97) estructurasDeDatos -> . stack
    (98) estructurasDeDatos -> . array
    (39) comparaciones -> . comparacion
    (40) comparaciones -> . comparacion operadores comparaciones
    (51) operaciones -> . operacion
    (52) operaciones -> . operacion operadorAritmetico operaciones
    (53) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (17) comentario -> . COMENTARIO
    (18) comentario -> . LLAVEDER
    (50) longitud -> . IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA
    (63) print -> . PRINT PARENIZ valores PARENDER PUNTOCOMA
    (64) print -> . PRINT valor PUNTOCOMA
    (65) print -> . PRINT PARENIZ PARENDER PUNTOCOMA
    (67) echo -> . ECHO valores PUNTOCOMA
    (66) input -> . IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA
    (68) funcion -> . FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ
    (71) funcion -> . NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (72) funcion -> . IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (73) return -> . RETURN IDENTIFICADOR PUNTOCOMA
    (81) while -> . WHILE PARENIZ comparaciones PARENDER LLAVEIZ
    (82) for -> . FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ
    (88) if -> . IF PARENIZ comparaciones PARENDER LLAVEIZ
    (89) if -> . IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (90) elseif -> . LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (91) elseif -> . LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (92) elseif -> . ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (93) elseif -> . ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (94) else -> . LLAVEDER ELSE LLAVEIZ
    (95) else -> . ELSE LLAVEIZ
    (83) foreach -> . FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ
    (84) switch -> . SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER
    (106) queue -> . IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA
    (107) queue -> . IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
    (108) queue -> . IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA
    (109) queue -> . IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA
    (110) queue -> . IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (111) queue -> . IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (112) queue -> . IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (113) queue -> . IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
    (99) stack -> . IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA
    (100) stack -> . IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA
    (101) stack -> . IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA
    (102) stack -> . IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (103) stack -> . IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (104) stack -> . IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (105) stack -> . IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
    (114) array -> . IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA
    (115) array -> . IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA
    (116) array -> . IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA
    (41) comparacion -> . variable comparadorNum variable
    (42) comparacion -> . valor comparador valor
    (54) operacion -> . variable operadorAritmetico variable
    (37) variable -> . NUMERO
    (38) variable -> . IDENTIFICADOR
    (26) valor -> . NUMERO
    (27) valor -> . CADENA
    (28) valor -> . BOOLEAN
    (29) valor -> . IDENTIFICADOR
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE

    $end            reduce using rule 3 (bloques -> bloque .)
    IDENTIFICADOR   shift and go to state 24
    COMENTARIO      shift and go to state 40
    LLAVEDER        shift and go to state 41
    PRINT           shift and go to state 42
    ECHO            shift and go to state 43
    FUNCTION        shift and go to state 44
    NAMEFUNCTION    shift and go to state 45
    RETURN          shift and go to state 46
    WHILE           shift and go to state 47
    FOR             shift and go to state 48
    IF              shift and go to state 50
    ELSEIF          shift and go to state 51
    ELSE            shift and go to state 52
    FOREACH         shift and go to state 53
    SWITCH          shift and go to state 54
    CADENA          shift and go to state 57
    BOOLEAN         shift and go to state 58
    ENTERO          shift and go to state 49
    RESTA           shift and go to state 61
    FLOTANTE        shift and go to state 59

    bloque                         shift and go to state 4
    bloques                        shift and go to state 60
    impresion                      shift and go to state 12
    asignacion                     shift and go to state 13
    funciones                      shift and go to state 14
    estructurasControl             shift and go to state 15
    estructurasDeDatos             shift and go to state 16
    comparaciones                  shift and go to state 17
    operaciones                    shift and go to state 18
    comentario                     shift and go to state 19
    longitud                       shift and go to state 20
    print                          shift and go to state 21
    echo                           shift and go to state 22
    input                          shift and go to state 23
    valor                          shift and go to state 25
    funcion                        shift and go to state 26
    return                         shift and go to state 27
    while                          shift and go to state 28
    for                            shift and go to state 29
    if                             shift and go to state 30
    elseif                         shift and go to state 31
    else                           shift and go to state 32
    foreach                        shift and go to state 33
    switch                         shift and go to state 34
    queue                          shift and go to state 35
    stack                          shift and go to state 36
    array                          shift and go to state 37
    comparacion                    shift and go to state 38
    operacion                      shift and go to state 39
    variable                       shift and go to state 55
    NUMERO                         shift and go to state 56

state 5

    (55) operadorAritmetico -> SUMA .

    $end            reduce using rule 55 (operadorAritmetico -> SUMA .)
    IDENTIFICADOR   reduce using rule 55 (operadorAritmetico -> SUMA .)
    ENTERO          reduce using rule 55 (operadorAritmetico -> SUMA .)
    RESTA           reduce using rule 55 (operadorAritmetico -> SUMA .)
    FLOTANTE        reduce using rule 55 (operadorAritmetico -> SUMA .)


state 6

    (56) operadorAritmetico -> RESTA .
    (24) NUMERO -> RESTA . ENTERO

    $end            reduce using rule 56 (operadorAritmetico -> RESTA .)
    ENTERO          shift and go to state 62


state 7

    (57) operadorAritmetico -> MULT .

    $end            reduce using rule 57 (operadorAritmetico -> MULT .)
    IDENTIFICADOR   reduce using rule 57 (operadorAritmetico -> MULT .)
    ENTERO          reduce using rule 57 (operadorAritmetico -> MULT .)
    RESTA           reduce using rule 57 (operadorAritmetico -> MULT .)
    FLOTANTE        reduce using rule 57 (operadorAritmetico -> MULT .)


state 8

    (58) operadorAritmetico -> DIVISION .

    $end            reduce using rule 58 (operadorAritmetico -> DIVISION .)
    IDENTIFICADOR   reduce using rule 58 (operadorAritmetico -> DIVISION .)
    ENTERO          reduce using rule 58 (operadorAritmetico -> DIVISION .)
    RESTA           reduce using rule 58 (operadorAritmetico -> DIVISION .)
    FLOTANTE        reduce using rule 58 (operadorAritmetico -> DIVISION .)


state 9

    (59) operadorAritmetico -> DIVISIONENTERA .

    $end            reduce using rule 59 (operadorAritmetico -> DIVISIONENTERA .)
    IDENTIFICADOR   reduce using rule 59 (operadorAritmetico -> DIVISIONENTERA .)
    ENTERO          reduce using rule 59 (operadorAritmetico -> DIVISIONENTERA .)
    RESTA           reduce using rule 59 (operadorAritmetico -> DIVISIONENTERA .)
    FLOTANTE        reduce using rule 59 (operadorAritmetico -> DIVISIONENTERA .)


state 10

    (60) operadorAritmetico -> MODULO .

    $end            reduce using rule 60 (operadorAritmetico -> MODULO .)
    IDENTIFICADOR   reduce using rule 60 (operadorAritmetico -> MODULO .)
    ENTERO          reduce using rule 60 (operadorAritmetico -> MODULO .)
    RESTA           reduce using rule 60 (operadorAritmetico -> MODULO .)
    FLOTANTE        reduce using rule 60 (operadorAritmetico -> MODULO .)


state 11

    (61) operadorAritmetico -> POTENCIA .

    $end            reduce using rule 61 (operadorAritmetico -> POTENCIA .)
    IDENTIFICADOR   reduce using rule 61 (operadorAritmetico -> POTENCIA .)
    ENTERO          reduce using rule 61 (operadorAritmetico -> POTENCIA .)
    RESTA           reduce using rule 61 (operadorAritmetico -> POTENCIA .)
    FLOTANTE        reduce using rule 61 (operadorAritmetico -> POTENCIA .)


state 12

    (5) bloque -> impresion .

    IDENTIFICADOR   reduce using rule 5 (bloque -> impresion .)
    COMENTARIO      reduce using rule 5 (bloque -> impresion .)
    LLAVEDER        reduce using rule 5 (bloque -> impresion .)
    PRINT           reduce using rule 5 (bloque -> impresion .)
    ECHO            reduce using rule 5 (bloque -> impresion .)
    FUNCTION        reduce using rule 5 (bloque -> impresion .)
    NAMEFUNCTION    reduce using rule 5 (bloque -> impresion .)
    RETURN          reduce using rule 5 (bloque -> impresion .)
    WHILE           reduce using rule 5 (bloque -> impresion .)
    FOR             reduce using rule 5 (bloque -> impresion .)
    IF              reduce using rule 5 (bloque -> impresion .)
    ELSEIF          reduce using rule 5 (bloque -> impresion .)
    ELSE            reduce using rule 5 (bloque -> impresion .)
    FOREACH         reduce using rule 5 (bloque -> impresion .)
    SWITCH          reduce using rule 5 (bloque -> impresion .)
    CADENA          reduce using rule 5 (bloque -> impresion .)
    BOOLEAN         reduce using rule 5 (bloque -> impresion .)
    ENTERO          reduce using rule 5 (bloque -> impresion .)
    RESTA           reduce using rule 5 (bloque -> impresion .)
    FLOTANTE        reduce using rule 5 (bloque -> impresion .)
    $end            reduce using rule 5 (bloque -> impresion .)


state 13

    (6) bloque -> asignacion .

    IDENTIFICADOR   reduce using rule 6 (bloque -> asignacion .)
    COMENTARIO      reduce using rule 6 (bloque -> asignacion .)
    LLAVEDER        reduce using rule 6 (bloque -> asignacion .)
    PRINT           reduce using rule 6 (bloque -> asignacion .)
    ECHO            reduce using rule 6 (bloque -> asignacion .)
    FUNCTION        reduce using rule 6 (bloque -> asignacion .)
    NAMEFUNCTION    reduce using rule 6 (bloque -> asignacion .)
    RETURN          reduce using rule 6 (bloque -> asignacion .)
    WHILE           reduce using rule 6 (bloque -> asignacion .)
    FOR             reduce using rule 6 (bloque -> asignacion .)
    IF              reduce using rule 6 (bloque -> asignacion .)
    ELSEIF          reduce using rule 6 (bloque -> asignacion .)
    ELSE            reduce using rule 6 (bloque -> asignacion .)
    FOREACH         reduce using rule 6 (bloque -> asignacion .)
    SWITCH          reduce using rule 6 (bloque -> asignacion .)
    CADENA          reduce using rule 6 (bloque -> asignacion .)
    BOOLEAN         reduce using rule 6 (bloque -> asignacion .)
    ENTERO          reduce using rule 6 (bloque -> asignacion .)
    RESTA           reduce using rule 6 (bloque -> asignacion .)
    FLOTANTE        reduce using rule 6 (bloque -> asignacion .)
    $end            reduce using rule 6 (bloque -> asignacion .)


state 14

    (7) bloque -> funciones .

    IDENTIFICADOR   reduce using rule 7 (bloque -> funciones .)
    COMENTARIO      reduce using rule 7 (bloque -> funciones .)
    LLAVEDER        reduce using rule 7 (bloque -> funciones .)
    PRINT           reduce using rule 7 (bloque -> funciones .)
    ECHO            reduce using rule 7 (bloque -> funciones .)
    FUNCTION        reduce using rule 7 (bloque -> funciones .)
    NAMEFUNCTION    reduce using rule 7 (bloque -> funciones .)
    RETURN          reduce using rule 7 (bloque -> funciones .)
    WHILE           reduce using rule 7 (bloque -> funciones .)
    FOR             reduce using rule 7 (bloque -> funciones .)
    IF              reduce using rule 7 (bloque -> funciones .)
    ELSEIF          reduce using rule 7 (bloque -> funciones .)
    ELSE            reduce using rule 7 (bloque -> funciones .)
    FOREACH         reduce using rule 7 (bloque -> funciones .)
    SWITCH          reduce using rule 7 (bloque -> funciones .)
    CADENA          reduce using rule 7 (bloque -> funciones .)
    BOOLEAN         reduce using rule 7 (bloque -> funciones .)
    ENTERO          reduce using rule 7 (bloque -> funciones .)
    RESTA           reduce using rule 7 (bloque -> funciones .)
    FLOTANTE        reduce using rule 7 (bloque -> funciones .)
    $end            reduce using rule 7 (bloque -> funciones .)


state 15

    (8) bloque -> estructurasControl .

    IDENTIFICADOR   reduce using rule 8 (bloque -> estructurasControl .)
    COMENTARIO      reduce using rule 8 (bloque -> estructurasControl .)
    LLAVEDER        reduce using rule 8 (bloque -> estructurasControl .)
    PRINT           reduce using rule 8 (bloque -> estructurasControl .)
    ECHO            reduce using rule 8 (bloque -> estructurasControl .)
    FUNCTION        reduce using rule 8 (bloque -> estructurasControl .)
    NAMEFUNCTION    reduce using rule 8 (bloque -> estructurasControl .)
    RETURN          reduce using rule 8 (bloque -> estructurasControl .)
    WHILE           reduce using rule 8 (bloque -> estructurasControl .)
    FOR             reduce using rule 8 (bloque -> estructurasControl .)
    IF              reduce using rule 8 (bloque -> estructurasControl .)
    ELSEIF          reduce using rule 8 (bloque -> estructurasControl .)
    ELSE            reduce using rule 8 (bloque -> estructurasControl .)
    FOREACH         reduce using rule 8 (bloque -> estructurasControl .)
    SWITCH          reduce using rule 8 (bloque -> estructurasControl .)
    CADENA          reduce using rule 8 (bloque -> estructurasControl .)
    BOOLEAN         reduce using rule 8 (bloque -> estructurasControl .)
    ENTERO          reduce using rule 8 (bloque -> estructurasControl .)
    RESTA           reduce using rule 8 (bloque -> estructurasControl .)
    FLOTANTE        reduce using rule 8 (bloque -> estructurasControl .)
    $end            reduce using rule 8 (bloque -> estructurasControl .)


state 16

    (9) bloque -> estructurasDeDatos .

    IDENTIFICADOR   reduce using rule 9 (bloque -> estructurasDeDatos .)
    COMENTARIO      reduce using rule 9 (bloque -> estructurasDeDatos .)
    LLAVEDER        reduce using rule 9 (bloque -> estructurasDeDatos .)
    PRINT           reduce using rule 9 (bloque -> estructurasDeDatos .)
    ECHO            reduce using rule 9 (bloque -> estructurasDeDatos .)
    FUNCTION        reduce using rule 9 (bloque -> estructurasDeDatos .)
    NAMEFUNCTION    reduce using rule 9 (bloque -> estructurasDeDatos .)
    RETURN          reduce using rule 9 (bloque -> estructurasDeDatos .)
    WHILE           reduce using rule 9 (bloque -> estructurasDeDatos .)
    FOR             reduce using rule 9 (bloque -> estructurasDeDatos .)
    IF              reduce using rule 9 (bloque -> estructurasDeDatos .)
    ELSEIF          reduce using rule 9 (bloque -> estructurasDeDatos .)
    ELSE            reduce using rule 9 (bloque -> estructurasDeDatos .)
    FOREACH         reduce using rule 9 (bloque -> estructurasDeDatos .)
    SWITCH          reduce using rule 9 (bloque -> estructurasDeDatos .)
    CADENA          reduce using rule 9 (bloque -> estructurasDeDatos .)
    BOOLEAN         reduce using rule 9 (bloque -> estructurasDeDatos .)
    ENTERO          reduce using rule 9 (bloque -> estructurasDeDatos .)
    RESTA           reduce using rule 9 (bloque -> estructurasDeDatos .)
    FLOTANTE        reduce using rule 9 (bloque -> estructurasDeDatos .)
    $end            reduce using rule 9 (bloque -> estructurasDeDatos .)


state 17

    (10) bloque -> comparaciones .

    IDENTIFICADOR   reduce using rule 10 (bloque -> comparaciones .)
    COMENTARIO      reduce using rule 10 (bloque -> comparaciones .)
    LLAVEDER        reduce using rule 10 (bloque -> comparaciones .)
    PRINT           reduce using rule 10 (bloque -> comparaciones .)
    ECHO            reduce using rule 10 (bloque -> comparaciones .)
    FUNCTION        reduce using rule 10 (bloque -> comparaciones .)
    NAMEFUNCTION    reduce using rule 10 (bloque -> comparaciones .)
    RETURN          reduce using rule 10 (bloque -> comparaciones .)
    WHILE           reduce using rule 10 (bloque -> comparaciones .)
    FOR             reduce using rule 10 (bloque -> comparaciones .)
    IF              reduce using rule 10 (bloque -> comparaciones .)
    ELSEIF          reduce using rule 10 (bloque -> comparaciones .)
    ELSE            reduce using rule 10 (bloque -> comparaciones .)
    FOREACH         reduce using rule 10 (bloque -> comparaciones .)
    SWITCH          reduce using rule 10 (bloque -> comparaciones .)
    CADENA          reduce using rule 10 (bloque -> comparaciones .)
    BOOLEAN         reduce using rule 10 (bloque -> comparaciones .)
    ENTERO          reduce using rule 10 (bloque -> comparaciones .)
    RESTA           reduce using rule 10 (bloque -> comparaciones .)
    FLOTANTE        reduce using rule 10 (bloque -> comparaciones .)
    $end            reduce using rule 10 (bloque -> comparaciones .)


state 18

    (11) bloque -> operaciones .

    IDENTIFICADOR   reduce using rule 11 (bloque -> operaciones .)
    COMENTARIO      reduce using rule 11 (bloque -> operaciones .)
    LLAVEDER        reduce using rule 11 (bloque -> operaciones .)
    PRINT           reduce using rule 11 (bloque -> operaciones .)
    ECHO            reduce using rule 11 (bloque -> operaciones .)
    FUNCTION        reduce using rule 11 (bloque -> operaciones .)
    NAMEFUNCTION    reduce using rule 11 (bloque -> operaciones .)
    RETURN          reduce using rule 11 (bloque -> operaciones .)
    WHILE           reduce using rule 11 (bloque -> operaciones .)
    FOR             reduce using rule 11 (bloque -> operaciones .)
    IF              reduce using rule 11 (bloque -> operaciones .)
    ELSEIF          reduce using rule 11 (bloque -> operaciones .)
    ELSE            reduce using rule 11 (bloque -> operaciones .)
    FOREACH         reduce using rule 11 (bloque -> operaciones .)
    SWITCH          reduce using rule 11 (bloque -> operaciones .)
    CADENA          reduce using rule 11 (bloque -> operaciones .)
    BOOLEAN         reduce using rule 11 (bloque -> operaciones .)
    ENTERO          reduce using rule 11 (bloque -> operaciones .)
    RESTA           reduce using rule 11 (bloque -> operaciones .)
    FLOTANTE        reduce using rule 11 (bloque -> operaciones .)
    $end            reduce using rule 11 (bloque -> operaciones .)


state 19

    (12) bloque -> comentario .

    IDENTIFICADOR   reduce using rule 12 (bloque -> comentario .)
    COMENTARIO      reduce using rule 12 (bloque -> comentario .)
    LLAVEDER        reduce using rule 12 (bloque -> comentario .)
    PRINT           reduce using rule 12 (bloque -> comentario .)
    ECHO            reduce using rule 12 (bloque -> comentario .)
    FUNCTION        reduce using rule 12 (bloque -> comentario .)
    NAMEFUNCTION    reduce using rule 12 (bloque -> comentario .)
    RETURN          reduce using rule 12 (bloque -> comentario .)
    WHILE           reduce using rule 12 (bloque -> comentario .)
    FOR             reduce using rule 12 (bloque -> comentario .)
    IF              reduce using rule 12 (bloque -> comentario .)
    ELSEIF          reduce using rule 12 (bloque -> comentario .)
    ELSE            reduce using rule 12 (bloque -> comentario .)
    FOREACH         reduce using rule 12 (bloque -> comentario .)
    SWITCH          reduce using rule 12 (bloque -> comentario .)
    CADENA          reduce using rule 12 (bloque -> comentario .)
    BOOLEAN         reduce using rule 12 (bloque -> comentario .)
    ENTERO          reduce using rule 12 (bloque -> comentario .)
    RESTA           reduce using rule 12 (bloque -> comentario .)
    FLOTANTE        reduce using rule 12 (bloque -> comentario .)
    $end            reduce using rule 12 (bloque -> comentario .)


state 20

    (13) bloque -> longitud .

    IDENTIFICADOR   reduce using rule 13 (bloque -> longitud .)
    COMENTARIO      reduce using rule 13 (bloque -> longitud .)
    LLAVEDER        reduce using rule 13 (bloque -> longitud .)
    PRINT           reduce using rule 13 (bloque -> longitud .)
    ECHO            reduce using rule 13 (bloque -> longitud .)
    FUNCTION        reduce using rule 13 (bloque -> longitud .)
    NAMEFUNCTION    reduce using rule 13 (bloque -> longitud .)
    RETURN          reduce using rule 13 (bloque -> longitud .)
    WHILE           reduce using rule 13 (bloque -> longitud .)
    FOR             reduce using rule 13 (bloque -> longitud .)
    IF              reduce using rule 13 (bloque -> longitud .)
    ELSEIF          reduce using rule 13 (bloque -> longitud .)
    ELSE            reduce using rule 13 (bloque -> longitud .)
    FOREACH         reduce using rule 13 (bloque -> longitud .)
    SWITCH          reduce using rule 13 (bloque -> longitud .)
    CADENA          reduce using rule 13 (bloque -> longitud .)
    BOOLEAN         reduce using rule 13 (bloque -> longitud .)
    ENTERO          reduce using rule 13 (bloque -> longitud .)
    RESTA           reduce using rule 13 (bloque -> longitud .)
    FLOTANTE        reduce using rule 13 (bloque -> longitud .)
    $end            reduce using rule 13 (bloque -> longitud .)


state 21

    (14) impresion -> print .

    IDENTIFICADOR   reduce using rule 14 (impresion -> print .)
    COMENTARIO      reduce using rule 14 (impresion -> print .)
    LLAVEDER        reduce using rule 14 (impresion -> print .)
    PRINT           reduce using rule 14 (impresion -> print .)
    ECHO            reduce using rule 14 (impresion -> print .)
    FUNCTION        reduce using rule 14 (impresion -> print .)
    NAMEFUNCTION    reduce using rule 14 (impresion -> print .)
    RETURN          reduce using rule 14 (impresion -> print .)
    WHILE           reduce using rule 14 (impresion -> print .)
    FOR             reduce using rule 14 (impresion -> print .)
    IF              reduce using rule 14 (impresion -> print .)
    ELSEIF          reduce using rule 14 (impresion -> print .)
    ELSE            reduce using rule 14 (impresion -> print .)
    FOREACH         reduce using rule 14 (impresion -> print .)
    SWITCH          reduce using rule 14 (impresion -> print .)
    CADENA          reduce using rule 14 (impresion -> print .)
    BOOLEAN         reduce using rule 14 (impresion -> print .)
    ENTERO          reduce using rule 14 (impresion -> print .)
    RESTA           reduce using rule 14 (impresion -> print .)
    FLOTANTE        reduce using rule 14 (impresion -> print .)
    $end            reduce using rule 14 (impresion -> print .)


state 22

    (15) impresion -> echo .

    IDENTIFICADOR   reduce using rule 15 (impresion -> echo .)
    COMENTARIO      reduce using rule 15 (impresion -> echo .)
    LLAVEDER        reduce using rule 15 (impresion -> echo .)
    PRINT           reduce using rule 15 (impresion -> echo .)
    ECHO            reduce using rule 15 (impresion -> echo .)
    FUNCTION        reduce using rule 15 (impresion -> echo .)
    NAMEFUNCTION    reduce using rule 15 (impresion -> echo .)
    RETURN          reduce using rule 15 (impresion -> echo .)
    WHILE           reduce using rule 15 (impresion -> echo .)
    FOR             reduce using rule 15 (impresion -> echo .)
    IF              reduce using rule 15 (impresion -> echo .)
    ELSEIF          reduce using rule 15 (impresion -> echo .)
    ELSE            reduce using rule 15 (impresion -> echo .)
    FOREACH         reduce using rule 15 (impresion -> echo .)
    SWITCH          reduce using rule 15 (impresion -> echo .)
    CADENA          reduce using rule 15 (impresion -> echo .)
    BOOLEAN         reduce using rule 15 (impresion -> echo .)
    ENTERO          reduce using rule 15 (impresion -> echo .)
    RESTA           reduce using rule 15 (impresion -> echo .)
    FLOTANTE        reduce using rule 15 (impresion -> echo .)
    $end            reduce using rule 15 (impresion -> echo .)


state 23

    (16) impresion -> input .

    IDENTIFICADOR   reduce using rule 16 (impresion -> input .)
    COMENTARIO      reduce using rule 16 (impresion -> input .)
    LLAVEDER        reduce using rule 16 (impresion -> input .)
    PRINT           reduce using rule 16 (impresion -> input .)
    ECHO            reduce using rule 16 (impresion -> input .)
    FUNCTION        reduce using rule 16 (impresion -> input .)
    NAMEFUNCTION    reduce using rule 16 (impresion -> input .)
    RETURN          reduce using rule 16 (impresion -> input .)
    WHILE           reduce using rule 16 (impresion -> input .)
    FOR             reduce using rule 16 (impresion -> input .)
    IF              reduce using rule 16 (impresion -> input .)
    ELSEIF          reduce using rule 16 (impresion -> input .)
    ELSE            reduce using rule 16 (impresion -> input .)
    FOREACH         reduce using rule 16 (impresion -> input .)
    SWITCH          reduce using rule 16 (impresion -> input .)
    CADENA          reduce using rule 16 (impresion -> input .)
    BOOLEAN         reduce using rule 16 (impresion -> input .)
    ENTERO          reduce using rule 16 (impresion -> input .)
    RESTA           reduce using rule 16 (impresion -> input .)
    FLOTANTE        reduce using rule 16 (impresion -> input .)
    $end            reduce using rule 16 (impresion -> input .)


state 24

    (62) asignacion -> IDENTIFICADOR . ASIGNAR valor PUNTOCOMA
    (53) operaciones -> IDENTIFICADOR . ASIGNAR operaciones
    (50) longitud -> IDENTIFICADOR . ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA
    (66) input -> IDENTIFICADOR . ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA
    (72) funcion -> IDENTIFICADOR . ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (106) queue -> IDENTIFICADOR . ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA
    (107) queue -> IDENTIFICADOR . FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
    (108) queue -> IDENTIFICADOR . FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA
    (109) queue -> IDENTIFICADOR . FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA
    (110) queue -> IDENTIFICADOR . FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (111) queue -> IDENTIFICADOR . FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (112) queue -> IDENTIFICADOR . FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (113) queue -> IDENTIFICADOR . FLECHASIMPLE VALID PARENIZ PARENDER
    (99) stack -> IDENTIFICADOR . FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA
    (100) stack -> IDENTIFICADOR . FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA
    (101) stack -> IDENTIFICADOR . ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA
    (102) stack -> IDENTIFICADOR . FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (103) stack -> IDENTIFICADOR . FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (104) stack -> IDENTIFICADOR . FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (105) stack -> IDENTIFICADOR . FLECHASIMPLE VALID PARENIZ PARENDER
    (114) array -> IDENTIFICADOR . ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA
    (115) array -> IDENTIFICADOR . ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA
    (116) array -> IDENTIFICADOR . ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA
    (38) variable -> IDENTIFICADOR .
    (29) valor -> IDENTIFICADOR .

    ASIGNAR         shift and go to state 63
    FLECHASIMPLE    shift and go to state 64
    MAYORQUE        reduce using rule 38 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 38 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 38 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 38 (variable -> IDENTIFICADOR .)
    SUMA            reduce using rule 38 (variable -> IDENTIFICADOR .)
    RESTA           reduce using rule 38 (variable -> IDENTIFICADOR .)
    MULT            reduce using rule 38 (variable -> IDENTIFICADOR .)
    DIVISION        reduce using rule 38 (variable -> IDENTIFICADOR .)
    DIVISIONENTERA  reduce using rule 38 (variable -> IDENTIFICADOR .)
    MODULO          reduce using rule 38 (variable -> IDENTIFICADOR .)
    POTENCIA        reduce using rule 38 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 29 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 29 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 29 (valor -> IDENTIFICADOR .)


state 25

    (42) comparacion -> valor . comparador valor
    (34) comparador -> . IDENTICO
    (35) comparador -> . NOIDENTICO
    (36) comparador -> . IGUAL

    IDENTICO        shift and go to state 66
    NOIDENTICO      shift and go to state 67
    IGUAL           shift and go to state 68

    comparador                     shift and go to state 65

state 26

    (19) funciones -> funcion .

    IDENTIFICADOR   reduce using rule 19 (funciones -> funcion .)
    COMENTARIO      reduce using rule 19 (funciones -> funcion .)
    LLAVEDER        reduce using rule 19 (funciones -> funcion .)
    PRINT           reduce using rule 19 (funciones -> funcion .)
    ECHO            reduce using rule 19 (funciones -> funcion .)
    FUNCTION        reduce using rule 19 (funciones -> funcion .)
    NAMEFUNCTION    reduce using rule 19 (funciones -> funcion .)
    RETURN          reduce using rule 19 (funciones -> funcion .)
    WHILE           reduce using rule 19 (funciones -> funcion .)
    FOR             reduce using rule 19 (funciones -> funcion .)
    IF              reduce using rule 19 (funciones -> funcion .)
    ELSEIF          reduce using rule 19 (funciones -> funcion .)
    ELSE            reduce using rule 19 (funciones -> funcion .)
    FOREACH         reduce using rule 19 (funciones -> funcion .)
    SWITCH          reduce using rule 19 (funciones -> funcion .)
    CADENA          reduce using rule 19 (funciones -> funcion .)
    BOOLEAN         reduce using rule 19 (funciones -> funcion .)
    ENTERO          reduce using rule 19 (funciones -> funcion .)
    RESTA           reduce using rule 19 (funciones -> funcion .)
    FLOTANTE        reduce using rule 19 (funciones -> funcion .)
    $end            reduce using rule 19 (funciones -> funcion .)


state 27

    (20) funciones -> return .

    IDENTIFICADOR   reduce using rule 20 (funciones -> return .)
    COMENTARIO      reduce using rule 20 (funciones -> return .)
    LLAVEDER        reduce using rule 20 (funciones -> return .)
    PRINT           reduce using rule 20 (funciones -> return .)
    ECHO            reduce using rule 20 (funciones -> return .)
    FUNCTION        reduce using rule 20 (funciones -> return .)
    NAMEFUNCTION    reduce using rule 20 (funciones -> return .)
    RETURN          reduce using rule 20 (funciones -> return .)
    WHILE           reduce using rule 20 (funciones -> return .)
    FOR             reduce using rule 20 (funciones -> return .)
    IF              reduce using rule 20 (funciones -> return .)
    ELSEIF          reduce using rule 20 (funciones -> return .)
    ELSE            reduce using rule 20 (funciones -> return .)
    FOREACH         reduce using rule 20 (funciones -> return .)
    SWITCH          reduce using rule 20 (funciones -> return .)
    CADENA          reduce using rule 20 (funciones -> return .)
    BOOLEAN         reduce using rule 20 (funciones -> return .)
    ENTERO          reduce using rule 20 (funciones -> return .)
    RESTA           reduce using rule 20 (funciones -> return .)
    FLOTANTE        reduce using rule 20 (funciones -> return .)
    $end            reduce using rule 20 (funciones -> return .)


state 28

    (74) estructurasControl -> while .

    IDENTIFICADOR   reduce using rule 74 (estructurasControl -> while .)
    COMENTARIO      reduce using rule 74 (estructurasControl -> while .)
    LLAVEDER        reduce using rule 74 (estructurasControl -> while .)
    PRINT           reduce using rule 74 (estructurasControl -> while .)
    ECHO            reduce using rule 74 (estructurasControl -> while .)
    FUNCTION        reduce using rule 74 (estructurasControl -> while .)
    NAMEFUNCTION    reduce using rule 74 (estructurasControl -> while .)
    RETURN          reduce using rule 74 (estructurasControl -> while .)
    WHILE           reduce using rule 74 (estructurasControl -> while .)
    FOR             reduce using rule 74 (estructurasControl -> while .)
    IF              reduce using rule 74 (estructurasControl -> while .)
    ELSEIF          reduce using rule 74 (estructurasControl -> while .)
    ELSE            reduce using rule 74 (estructurasControl -> while .)
    FOREACH         reduce using rule 74 (estructurasControl -> while .)
    SWITCH          reduce using rule 74 (estructurasControl -> while .)
    CADENA          reduce using rule 74 (estructurasControl -> while .)
    BOOLEAN         reduce using rule 74 (estructurasControl -> while .)
    ENTERO          reduce using rule 74 (estructurasControl -> while .)
    RESTA           reduce using rule 74 (estructurasControl -> while .)
    FLOTANTE        reduce using rule 74 (estructurasControl -> while .)
    $end            reduce using rule 74 (estructurasControl -> while .)


state 29

    (75) estructurasControl -> for .

    IDENTIFICADOR   reduce using rule 75 (estructurasControl -> for .)
    COMENTARIO      reduce using rule 75 (estructurasControl -> for .)
    LLAVEDER        reduce using rule 75 (estructurasControl -> for .)
    PRINT           reduce using rule 75 (estructurasControl -> for .)
    ECHO            reduce using rule 75 (estructurasControl -> for .)
    FUNCTION        reduce using rule 75 (estructurasControl -> for .)
    NAMEFUNCTION    reduce using rule 75 (estructurasControl -> for .)
    RETURN          reduce using rule 75 (estructurasControl -> for .)
    WHILE           reduce using rule 75 (estructurasControl -> for .)
    FOR             reduce using rule 75 (estructurasControl -> for .)
    IF              reduce using rule 75 (estructurasControl -> for .)
    ELSEIF          reduce using rule 75 (estructurasControl -> for .)
    ELSE            reduce using rule 75 (estructurasControl -> for .)
    FOREACH         reduce using rule 75 (estructurasControl -> for .)
    SWITCH          reduce using rule 75 (estructurasControl -> for .)
    CADENA          reduce using rule 75 (estructurasControl -> for .)
    BOOLEAN         reduce using rule 75 (estructurasControl -> for .)
    ENTERO          reduce using rule 75 (estructurasControl -> for .)
    RESTA           reduce using rule 75 (estructurasControl -> for .)
    FLOTANTE        reduce using rule 75 (estructurasControl -> for .)
    $end            reduce using rule 75 (estructurasControl -> for .)


state 30

    (76) estructurasControl -> if .

    IDENTIFICADOR   reduce using rule 76 (estructurasControl -> if .)
    COMENTARIO      reduce using rule 76 (estructurasControl -> if .)
    LLAVEDER        reduce using rule 76 (estructurasControl -> if .)
    PRINT           reduce using rule 76 (estructurasControl -> if .)
    ECHO            reduce using rule 76 (estructurasControl -> if .)
    FUNCTION        reduce using rule 76 (estructurasControl -> if .)
    NAMEFUNCTION    reduce using rule 76 (estructurasControl -> if .)
    RETURN          reduce using rule 76 (estructurasControl -> if .)
    WHILE           reduce using rule 76 (estructurasControl -> if .)
    FOR             reduce using rule 76 (estructurasControl -> if .)
    IF              reduce using rule 76 (estructurasControl -> if .)
    ELSEIF          reduce using rule 76 (estructurasControl -> if .)
    ELSE            reduce using rule 76 (estructurasControl -> if .)
    FOREACH         reduce using rule 76 (estructurasControl -> if .)
    SWITCH          reduce using rule 76 (estructurasControl -> if .)
    CADENA          reduce using rule 76 (estructurasControl -> if .)
    BOOLEAN         reduce using rule 76 (estructurasControl -> if .)
    ENTERO          reduce using rule 76 (estructurasControl -> if .)
    RESTA           reduce using rule 76 (estructurasControl -> if .)
    FLOTANTE        reduce using rule 76 (estructurasControl -> if .)
    $end            reduce using rule 76 (estructurasControl -> if .)


state 31

    (77) estructurasControl -> elseif .

    IDENTIFICADOR   reduce using rule 77 (estructurasControl -> elseif .)
    COMENTARIO      reduce using rule 77 (estructurasControl -> elseif .)
    LLAVEDER        reduce using rule 77 (estructurasControl -> elseif .)
    PRINT           reduce using rule 77 (estructurasControl -> elseif .)
    ECHO            reduce using rule 77 (estructurasControl -> elseif .)
    FUNCTION        reduce using rule 77 (estructurasControl -> elseif .)
    NAMEFUNCTION    reduce using rule 77 (estructurasControl -> elseif .)
    RETURN          reduce using rule 77 (estructurasControl -> elseif .)
    WHILE           reduce using rule 77 (estructurasControl -> elseif .)
    FOR             reduce using rule 77 (estructurasControl -> elseif .)
    IF              reduce using rule 77 (estructurasControl -> elseif .)
    ELSEIF          reduce using rule 77 (estructurasControl -> elseif .)
    ELSE            reduce using rule 77 (estructurasControl -> elseif .)
    FOREACH         reduce using rule 77 (estructurasControl -> elseif .)
    SWITCH          reduce using rule 77 (estructurasControl -> elseif .)
    CADENA          reduce using rule 77 (estructurasControl -> elseif .)
    BOOLEAN         reduce using rule 77 (estructurasControl -> elseif .)
    ENTERO          reduce using rule 77 (estructurasControl -> elseif .)
    RESTA           reduce using rule 77 (estructurasControl -> elseif .)
    FLOTANTE        reduce using rule 77 (estructurasControl -> elseif .)
    $end            reduce using rule 77 (estructurasControl -> elseif .)


state 32

    (78) estructurasControl -> else .

    IDENTIFICADOR   reduce using rule 78 (estructurasControl -> else .)
    COMENTARIO      reduce using rule 78 (estructurasControl -> else .)
    LLAVEDER        reduce using rule 78 (estructurasControl -> else .)
    PRINT           reduce using rule 78 (estructurasControl -> else .)
    ECHO            reduce using rule 78 (estructurasControl -> else .)
    FUNCTION        reduce using rule 78 (estructurasControl -> else .)
    NAMEFUNCTION    reduce using rule 78 (estructurasControl -> else .)
    RETURN          reduce using rule 78 (estructurasControl -> else .)
    WHILE           reduce using rule 78 (estructurasControl -> else .)
    FOR             reduce using rule 78 (estructurasControl -> else .)
    IF              reduce using rule 78 (estructurasControl -> else .)
    ELSEIF          reduce using rule 78 (estructurasControl -> else .)
    ELSE            reduce using rule 78 (estructurasControl -> else .)
    FOREACH         reduce using rule 78 (estructurasControl -> else .)
    SWITCH          reduce using rule 78 (estructurasControl -> else .)
    CADENA          reduce using rule 78 (estructurasControl -> else .)
    BOOLEAN         reduce using rule 78 (estructurasControl -> else .)
    ENTERO          reduce using rule 78 (estructurasControl -> else .)
    RESTA           reduce using rule 78 (estructurasControl -> else .)
    FLOTANTE        reduce using rule 78 (estructurasControl -> else .)
    $end            reduce using rule 78 (estructurasControl -> else .)


state 33

    (79) estructurasControl -> foreach .

    IDENTIFICADOR   reduce using rule 79 (estructurasControl -> foreach .)
    COMENTARIO      reduce using rule 79 (estructurasControl -> foreach .)
    LLAVEDER        reduce using rule 79 (estructurasControl -> foreach .)
    PRINT           reduce using rule 79 (estructurasControl -> foreach .)
    ECHO            reduce using rule 79 (estructurasControl -> foreach .)
    FUNCTION        reduce using rule 79 (estructurasControl -> foreach .)
    NAMEFUNCTION    reduce using rule 79 (estructurasControl -> foreach .)
    RETURN          reduce using rule 79 (estructurasControl -> foreach .)
    WHILE           reduce using rule 79 (estructurasControl -> foreach .)
    FOR             reduce using rule 79 (estructurasControl -> foreach .)
    IF              reduce using rule 79 (estructurasControl -> foreach .)
    ELSEIF          reduce using rule 79 (estructurasControl -> foreach .)
    ELSE            reduce using rule 79 (estructurasControl -> foreach .)
    FOREACH         reduce using rule 79 (estructurasControl -> foreach .)
    SWITCH          reduce using rule 79 (estructurasControl -> foreach .)
    CADENA          reduce using rule 79 (estructurasControl -> foreach .)
    BOOLEAN         reduce using rule 79 (estructurasControl -> foreach .)
    ENTERO          reduce using rule 79 (estructurasControl -> foreach .)
    RESTA           reduce using rule 79 (estructurasControl -> foreach .)
    FLOTANTE        reduce using rule 79 (estructurasControl -> foreach .)
    $end            reduce using rule 79 (estructurasControl -> foreach .)


state 34

    (80) estructurasControl -> switch .

    IDENTIFICADOR   reduce using rule 80 (estructurasControl -> switch .)
    COMENTARIO      reduce using rule 80 (estructurasControl -> switch .)
    LLAVEDER        reduce using rule 80 (estructurasControl -> switch .)
    PRINT           reduce using rule 80 (estructurasControl -> switch .)
    ECHO            reduce using rule 80 (estructurasControl -> switch .)
    FUNCTION        reduce using rule 80 (estructurasControl -> switch .)
    NAMEFUNCTION    reduce using rule 80 (estructurasControl -> switch .)
    RETURN          reduce using rule 80 (estructurasControl -> switch .)
    WHILE           reduce using rule 80 (estructurasControl -> switch .)
    FOR             reduce using rule 80 (estructurasControl -> switch .)
    IF              reduce using rule 80 (estructurasControl -> switch .)
    ELSEIF          reduce using rule 80 (estructurasControl -> switch .)
    ELSE            reduce using rule 80 (estructurasControl -> switch .)
    FOREACH         reduce using rule 80 (estructurasControl -> switch .)
    SWITCH          reduce using rule 80 (estructurasControl -> switch .)
    CADENA          reduce using rule 80 (estructurasControl -> switch .)
    BOOLEAN         reduce using rule 80 (estructurasControl -> switch .)
    ENTERO          reduce using rule 80 (estructurasControl -> switch .)
    RESTA           reduce using rule 80 (estructurasControl -> switch .)
    FLOTANTE        reduce using rule 80 (estructurasControl -> switch .)
    $end            reduce using rule 80 (estructurasControl -> switch .)


state 35

    (96) estructurasDeDatos -> queue .

    IDENTIFICADOR   reduce using rule 96 (estructurasDeDatos -> queue .)
    COMENTARIO      reduce using rule 96 (estructurasDeDatos -> queue .)
    LLAVEDER        reduce using rule 96 (estructurasDeDatos -> queue .)
    PRINT           reduce using rule 96 (estructurasDeDatos -> queue .)
    ECHO            reduce using rule 96 (estructurasDeDatos -> queue .)
    FUNCTION        reduce using rule 96 (estructurasDeDatos -> queue .)
    NAMEFUNCTION    reduce using rule 96 (estructurasDeDatos -> queue .)
    RETURN          reduce using rule 96 (estructurasDeDatos -> queue .)
    WHILE           reduce using rule 96 (estructurasDeDatos -> queue .)
    FOR             reduce using rule 96 (estructurasDeDatos -> queue .)
    IF              reduce using rule 96 (estructurasDeDatos -> queue .)
    ELSEIF          reduce using rule 96 (estructurasDeDatos -> queue .)
    ELSE            reduce using rule 96 (estructurasDeDatos -> queue .)
    FOREACH         reduce using rule 96 (estructurasDeDatos -> queue .)
    SWITCH          reduce using rule 96 (estructurasDeDatos -> queue .)
    CADENA          reduce using rule 96 (estructurasDeDatos -> queue .)
    BOOLEAN         reduce using rule 96 (estructurasDeDatos -> queue .)
    ENTERO          reduce using rule 96 (estructurasDeDatos -> queue .)
    RESTA           reduce using rule 96 (estructurasDeDatos -> queue .)
    FLOTANTE        reduce using rule 96 (estructurasDeDatos -> queue .)
    $end            reduce using rule 96 (estructurasDeDatos -> queue .)


state 36

    (97) estructurasDeDatos -> stack .

    IDENTIFICADOR   reduce using rule 97 (estructurasDeDatos -> stack .)
    COMENTARIO      reduce using rule 97 (estructurasDeDatos -> stack .)
    LLAVEDER        reduce using rule 97 (estructurasDeDatos -> stack .)
    PRINT           reduce using rule 97 (estructurasDeDatos -> stack .)
    ECHO            reduce using rule 97 (estructurasDeDatos -> stack .)
    FUNCTION        reduce using rule 97 (estructurasDeDatos -> stack .)
    NAMEFUNCTION    reduce using rule 97 (estructurasDeDatos -> stack .)
    RETURN          reduce using rule 97 (estructurasDeDatos -> stack .)
    WHILE           reduce using rule 97 (estructurasDeDatos -> stack .)
    FOR             reduce using rule 97 (estructurasDeDatos -> stack .)
    IF              reduce using rule 97 (estructurasDeDatos -> stack .)
    ELSEIF          reduce using rule 97 (estructurasDeDatos -> stack .)
    ELSE            reduce using rule 97 (estructurasDeDatos -> stack .)
    FOREACH         reduce using rule 97 (estructurasDeDatos -> stack .)
    SWITCH          reduce using rule 97 (estructurasDeDatos -> stack .)
    CADENA          reduce using rule 97 (estructurasDeDatos -> stack .)
    BOOLEAN         reduce using rule 97 (estructurasDeDatos -> stack .)
    ENTERO          reduce using rule 97 (estructurasDeDatos -> stack .)
    RESTA           reduce using rule 97 (estructurasDeDatos -> stack .)
    FLOTANTE        reduce using rule 97 (estructurasDeDatos -> stack .)
    $end            reduce using rule 97 (estructurasDeDatos -> stack .)


state 37

    (98) estructurasDeDatos -> array .

    IDENTIFICADOR   reduce using rule 98 (estructurasDeDatos -> array .)
    COMENTARIO      reduce using rule 98 (estructurasDeDatos -> array .)
    LLAVEDER        reduce using rule 98 (estructurasDeDatos -> array .)
    PRINT           reduce using rule 98 (estructurasDeDatos -> array .)
    ECHO            reduce using rule 98 (estructurasDeDatos -> array .)
    FUNCTION        reduce using rule 98 (estructurasDeDatos -> array .)
    NAMEFUNCTION    reduce using rule 98 (estructurasDeDatos -> array .)
    RETURN          reduce using rule 98 (estructurasDeDatos -> array .)
    WHILE           reduce using rule 98 (estructurasDeDatos -> array .)
    FOR             reduce using rule 98 (estructurasDeDatos -> array .)
    IF              reduce using rule 98 (estructurasDeDatos -> array .)
    ELSEIF          reduce using rule 98 (estructurasDeDatos -> array .)
    ELSE            reduce using rule 98 (estructurasDeDatos -> array .)
    FOREACH         reduce using rule 98 (estructurasDeDatos -> array .)
    SWITCH          reduce using rule 98 (estructurasDeDatos -> array .)
    CADENA          reduce using rule 98 (estructurasDeDatos -> array .)
    BOOLEAN         reduce using rule 98 (estructurasDeDatos -> array .)
    ENTERO          reduce using rule 98 (estructurasDeDatos -> array .)
    RESTA           reduce using rule 98 (estructurasDeDatos -> array .)
    FLOTANTE        reduce using rule 98 (estructurasDeDatos -> array .)
    $end            reduce using rule 98 (estructurasDeDatos -> array .)


state 38

    (39) comparaciones -> comparacion .
    (40) comparaciones -> comparacion . operadores comparaciones
    (47) operadores -> . OPERADOR
    (48) operadores -> . AND
    (49) operadores -> . OR

    IDENTIFICADOR   reduce using rule 39 (comparaciones -> comparacion .)
    COMENTARIO      reduce using rule 39 (comparaciones -> comparacion .)
    LLAVEDER        reduce using rule 39 (comparaciones -> comparacion .)
    PRINT           reduce using rule 39 (comparaciones -> comparacion .)
    ECHO            reduce using rule 39 (comparaciones -> comparacion .)
    FUNCTION        reduce using rule 39 (comparaciones -> comparacion .)
    NAMEFUNCTION    reduce using rule 39 (comparaciones -> comparacion .)
    RETURN          reduce using rule 39 (comparaciones -> comparacion .)
    WHILE           reduce using rule 39 (comparaciones -> comparacion .)
    FOR             reduce using rule 39 (comparaciones -> comparacion .)
    IF              reduce using rule 39 (comparaciones -> comparacion .)
    ELSEIF          reduce using rule 39 (comparaciones -> comparacion .)
    ELSE            reduce using rule 39 (comparaciones -> comparacion .)
    FOREACH         reduce using rule 39 (comparaciones -> comparacion .)
    SWITCH          reduce using rule 39 (comparaciones -> comparacion .)
    CADENA          reduce using rule 39 (comparaciones -> comparacion .)
    BOOLEAN         reduce using rule 39 (comparaciones -> comparacion .)
    ENTERO          reduce using rule 39 (comparaciones -> comparacion .)
    RESTA           reduce using rule 39 (comparaciones -> comparacion .)
    FLOTANTE        reduce using rule 39 (comparaciones -> comparacion .)
    $end            reduce using rule 39 (comparaciones -> comparacion .)
    PARENDER        reduce using rule 39 (comparaciones -> comparacion .)
    OPERADOR        shift and go to state 70
    AND             shift and go to state 71
    OR              shift and go to state 72

    operadores                     shift and go to state 69

state 39

    (51) operaciones -> operacion .
    (52) operaciones -> operacion . operadorAritmetico operaciones
    (55) operadorAritmetico -> . SUMA
    (56) operadorAritmetico -> . RESTA
    (57) operadorAritmetico -> . MULT
    (58) operadorAritmetico -> . DIVISION
    (59) operadorAritmetico -> . DIVISIONENTERA
    (60) operadorAritmetico -> . MODULO
    (61) operadorAritmetico -> . POTENCIA

  ! shift/reduce conflict for RESTA resolved as shift
    IDENTIFICADOR   reduce using rule 51 (operaciones -> operacion .)
    COMENTARIO      reduce using rule 51 (operaciones -> operacion .)
    LLAVEDER        reduce using rule 51 (operaciones -> operacion .)
    PRINT           reduce using rule 51 (operaciones -> operacion .)
    ECHO            reduce using rule 51 (operaciones -> operacion .)
    FUNCTION        reduce using rule 51 (operaciones -> operacion .)
    NAMEFUNCTION    reduce using rule 51 (operaciones -> operacion .)
    RETURN          reduce using rule 51 (operaciones -> operacion .)
    WHILE           reduce using rule 51 (operaciones -> operacion .)
    FOR             reduce using rule 51 (operaciones -> operacion .)
    IF              reduce using rule 51 (operaciones -> operacion .)
    ELSEIF          reduce using rule 51 (operaciones -> operacion .)
    ELSE            reduce using rule 51 (operaciones -> operacion .)
    FOREACH         reduce using rule 51 (operaciones -> operacion .)
    SWITCH          reduce using rule 51 (operaciones -> operacion .)
    CADENA          reduce using rule 51 (operaciones -> operacion .)
    BOOLEAN         reduce using rule 51 (operaciones -> operacion .)
    ENTERO          reduce using rule 51 (operaciones -> operacion .)
    FLOTANTE        reduce using rule 51 (operaciones -> operacion .)
    $end            reduce using rule 51 (operaciones -> operacion .)
    SUMA            shift and go to state 5
    RESTA           shift and go to state 74
    MULT            shift and go to state 7
    DIVISION        shift and go to state 8
    DIVISIONENTERA  shift and go to state 9
    MODULO          shift and go to state 10
    POTENCIA        shift and go to state 11

  ! RESTA           [ reduce using rule 51 (operaciones -> operacion .) ]

    operadorAritmetico             shift and go to state 73

state 40

    (17) comentario -> COMENTARIO .

    IDENTIFICADOR   reduce using rule 17 (comentario -> COMENTARIO .)
    COMENTARIO      reduce using rule 17 (comentario -> COMENTARIO .)
    LLAVEDER        reduce using rule 17 (comentario -> COMENTARIO .)
    PRINT           reduce using rule 17 (comentario -> COMENTARIO .)
    ECHO            reduce using rule 17 (comentario -> COMENTARIO .)
    FUNCTION        reduce using rule 17 (comentario -> COMENTARIO .)
    NAMEFUNCTION    reduce using rule 17 (comentario -> COMENTARIO .)
    RETURN          reduce using rule 17 (comentario -> COMENTARIO .)
    WHILE           reduce using rule 17 (comentario -> COMENTARIO .)
    FOR             reduce using rule 17 (comentario -> COMENTARIO .)
    IF              reduce using rule 17 (comentario -> COMENTARIO .)
    ELSEIF          reduce using rule 17 (comentario -> COMENTARIO .)
    ELSE            reduce using rule 17 (comentario -> COMENTARIO .)
    FOREACH         reduce using rule 17 (comentario -> COMENTARIO .)
    SWITCH          reduce using rule 17 (comentario -> COMENTARIO .)
    CADENA          reduce using rule 17 (comentario -> COMENTARIO .)
    BOOLEAN         reduce using rule 17 (comentario -> COMENTARIO .)
    ENTERO          reduce using rule 17 (comentario -> COMENTARIO .)
    RESTA           reduce using rule 17 (comentario -> COMENTARIO .)
    FLOTANTE        reduce using rule 17 (comentario -> COMENTARIO .)
    $end            reduce using rule 17 (comentario -> COMENTARIO .)


state 41

    (18) comentario -> LLAVEDER .
    (90) elseif -> LLAVEDER . ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (91) elseif -> LLAVEDER . ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (94) else -> LLAVEDER . ELSE LLAVEIZ

  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    IDENTIFICADOR   reduce using rule 18 (comentario -> LLAVEDER .)
    COMENTARIO      reduce using rule 18 (comentario -> LLAVEDER .)
    LLAVEDER        reduce using rule 18 (comentario -> LLAVEDER .)
    PRINT           reduce using rule 18 (comentario -> LLAVEDER .)
    ECHO            reduce using rule 18 (comentario -> LLAVEDER .)
    FUNCTION        reduce using rule 18 (comentario -> LLAVEDER .)
    NAMEFUNCTION    reduce using rule 18 (comentario -> LLAVEDER .)
    RETURN          reduce using rule 18 (comentario -> LLAVEDER .)
    WHILE           reduce using rule 18 (comentario -> LLAVEDER .)
    FOR             reduce using rule 18 (comentario -> LLAVEDER .)
    IF              reduce using rule 18 (comentario -> LLAVEDER .)
    FOREACH         reduce using rule 18 (comentario -> LLAVEDER .)
    SWITCH          reduce using rule 18 (comentario -> LLAVEDER .)
    CADENA          reduce using rule 18 (comentario -> LLAVEDER .)
    BOOLEAN         reduce using rule 18 (comentario -> LLAVEDER .)
    ENTERO          reduce using rule 18 (comentario -> LLAVEDER .)
    RESTA           reduce using rule 18 (comentario -> LLAVEDER .)
    FLOTANTE        reduce using rule 18 (comentario -> LLAVEDER .)
    $end            reduce using rule 18 (comentario -> LLAVEDER .)
    ELSEIF          shift and go to state 75
    ELSE            shift and go to state 76

  ! ELSEIF          [ reduce using rule 18 (comentario -> LLAVEDER .) ]
  ! ELSE            [ reduce using rule 18 (comentario -> LLAVEDER .) ]


state 42

    (63) print -> PRINT . PARENIZ valores PARENDER PUNTOCOMA
    (64) print -> PRINT . valor PUNTOCOMA
    (65) print -> PRINT . PARENIZ PARENDER PUNTOCOMA
    (26) valor -> . NUMERO
    (27) valor -> . CADENA
    (28) valor -> . BOOLEAN
    (29) valor -> . IDENTIFICADOR
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE

    PARENIZ         shift and go to state 77
    CADENA          shift and go to state 57
    BOOLEAN         shift and go to state 58
    IDENTIFICADOR   shift and go to state 80
    ENTERO          shift and go to state 49
    RESTA           shift and go to state 61
    FLOTANTE        shift and go to state 59

    valor                          shift and go to state 78
    NUMERO                         shift and go to state 79

state 43

    (67) echo -> ECHO . valores PUNTOCOMA
    (21) valores -> . valor
    (22) valores -> . valor COMA valores
    (26) valor -> . NUMERO
    (27) valor -> . CADENA
    (28) valor -> . BOOLEAN
    (29) valor -> . IDENTIFICADOR
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 57
    BOOLEAN         shift and go to state 58
    IDENTIFICADOR   shift and go to state 80
    ENTERO          shift and go to state 49
    RESTA           shift and go to state 61
    FLOTANTE        shift and go to state 59

    valores                        shift and go to state 81
    valor                          shift and go to state 82
    NUMERO                         shift and go to state 79

state 44

    (68) funcion -> FUNCTION . NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ

    NAMEFUNCTION    shift and go to state 83


state 45

    (71) funcion -> NAMEFUNCTION . PARENIZ parametro PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 84


state 46

    (73) return -> RETURN . IDENTIFICADOR PUNTOCOMA

    IDENTIFICADOR   shift and go to state 85


state 47

    (81) while -> WHILE . PARENIZ comparaciones PARENDER LLAVEIZ

    PARENIZ         shift and go to state 86


state 48

    (82) for -> FOR . PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    PARENIZ         shift and go to state 87


state 49

    (23) NUMERO -> ENTERO .

    MAYORQUE        reduce using rule 23 (NUMERO -> ENTERO .)
    MAYORIGUALQUE   reduce using rule 23 (NUMERO -> ENTERO .)
    MENORQUE        reduce using rule 23 (NUMERO -> ENTERO .)
    MENORIGUALQUE   reduce using rule 23 (NUMERO -> ENTERO .)
    SUMA            reduce using rule 23 (NUMERO -> ENTERO .)
    RESTA           reduce using rule 23 (NUMERO -> ENTERO .)
    MULT            reduce using rule 23 (NUMERO -> ENTERO .)
    DIVISION        reduce using rule 23 (NUMERO -> ENTERO .)
    DIVISIONENTERA  reduce using rule 23 (NUMERO -> ENTERO .)
    MODULO          reduce using rule 23 (NUMERO -> ENTERO .)
    POTENCIA        reduce using rule 23 (NUMERO -> ENTERO .)
    IDENTICO        reduce using rule 23 (NUMERO -> ENTERO .)
    NOIDENTICO      reduce using rule 23 (NUMERO -> ENTERO .)
    IGUAL           reduce using rule 23 (NUMERO -> ENTERO .)
    PUNTOCOMA       reduce using rule 23 (NUMERO -> ENTERO .)
    COMA            reduce using rule 23 (NUMERO -> ENTERO .)
    OPERADOR        reduce using rule 23 (NUMERO -> ENTERO .)
    AND             reduce using rule 23 (NUMERO -> ENTERO .)
    OR              reduce using rule 23 (NUMERO -> ENTERO .)
    IDENTIFICADOR   reduce using rule 23 (NUMERO -> ENTERO .)
    COMENTARIO      reduce using rule 23 (NUMERO -> ENTERO .)
    LLAVEDER        reduce using rule 23 (NUMERO -> ENTERO .)
    PRINT           reduce using rule 23 (NUMERO -> ENTERO .)
    ECHO            reduce using rule 23 (NUMERO -> ENTERO .)
    FUNCTION        reduce using rule 23 (NUMERO -> ENTERO .)
    NAMEFUNCTION    reduce using rule 23 (NUMERO -> ENTERO .)
    RETURN          reduce using rule 23 (NUMERO -> ENTERO .)
    WHILE           reduce using rule 23 (NUMERO -> ENTERO .)
    FOR             reduce using rule 23 (NUMERO -> ENTERO .)
    IF              reduce using rule 23 (NUMERO -> ENTERO .)
    ELSEIF          reduce using rule 23 (NUMERO -> ENTERO .)
    ELSE            reduce using rule 23 (NUMERO -> ENTERO .)
    FOREACH         reduce using rule 23 (NUMERO -> ENTERO .)
    SWITCH          reduce using rule 23 (NUMERO -> ENTERO .)
    CADENA          reduce using rule 23 (NUMERO -> ENTERO .)
    BOOLEAN         reduce using rule 23 (NUMERO -> ENTERO .)
    ENTERO          reduce using rule 23 (NUMERO -> ENTERO .)
    FLOTANTE        reduce using rule 23 (NUMERO -> ENTERO .)
    $end            reduce using rule 23 (NUMERO -> ENTERO .)
    PARENDER        reduce using rule 23 (NUMERO -> ENTERO .)
    CORCHETEDER     reduce using rule 23 (NUMERO -> ENTERO .)
    DOSPUNTOS       reduce using rule 23 (NUMERO -> ENTERO .)


state 50

    (88) if -> IF . PARENIZ comparaciones PARENDER LLAVEIZ
    (89) if -> IF . PARENIZ IDENTIFICADOR PARENDER LLAVEIZ

    PARENIZ         shift and go to state 88


state 51

    (92) elseif -> ELSEIF . PARENIZ comparaciones PARENDER LLAVEIZ
    (93) elseif -> ELSEIF . PARENIZ IDENTIFICADOR PARENDER LLAVEIZ

    PARENIZ         shift and go to state 89


state 52

    (95) else -> ELSE . LLAVEIZ

    LLAVEIZ         shift and go to state 90


state 53

    (83) foreach -> FOREACH . PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ

    PARENIZ         shift and go to state 91


state 54

    (84) switch -> SWITCH . PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER

    PARENIZ         shift and go to state 92


state 55

    (41) comparacion -> variable . comparadorNum variable
    (54) operacion -> variable . operadorAritmetico variable
    (30) comparadorNum -> . MAYORQUE
    (31) comparadorNum -> . MAYORIGUALQUE
    (32) comparadorNum -> . MENORQUE
    (33) comparadorNum -> . MENORIGUALQUE
    (55) operadorAritmetico -> . SUMA
    (56) operadorAritmetico -> . RESTA
    (57) operadorAritmetico -> . MULT
    (58) operadorAritmetico -> . DIVISION
    (59) operadorAritmetico -> . DIVISIONENTERA
    (60) operadorAritmetico -> . MODULO
    (61) operadorAritmetico -> . POTENCIA

    MAYORQUE        shift and go to state 95
    MAYORIGUALQUE   shift and go to state 96
    MENORQUE        shift and go to state 97
    MENORIGUALQUE   shift and go to state 98
    SUMA            shift and go to state 5
    RESTA           shift and go to state 74
    MULT            shift and go to state 7
    DIVISION        shift and go to state 8
    DIVISIONENTERA  shift and go to state 9
    MODULO          shift and go to state 10
    POTENCIA        shift and go to state 11

    comparadorNum                  shift and go to state 93
    operadorAritmetico             shift and go to state 94

state 56

    (37) variable -> NUMERO .
    (26) valor -> NUMERO .

    MAYORQUE        reduce using rule 37 (variable -> NUMERO .)
    MAYORIGUALQUE   reduce using rule 37 (variable -> NUMERO .)
    MENORQUE        reduce using rule 37 (variable -> NUMERO .)
    MENORIGUALQUE   reduce using rule 37 (variable -> NUMERO .)
    SUMA            reduce using rule 37 (variable -> NUMERO .)
    RESTA           reduce using rule 37 (variable -> NUMERO .)
    MULT            reduce using rule 37 (variable -> NUMERO .)
    DIVISION        reduce using rule 37 (variable -> NUMERO .)
    DIVISIONENTERA  reduce using rule 37 (variable -> NUMERO .)
    MODULO          reduce using rule 37 (variable -> NUMERO .)
    POTENCIA        reduce using rule 37 (variable -> NUMERO .)
    IDENTICO        reduce using rule 26 (valor -> NUMERO .)
    NOIDENTICO      reduce using rule 26 (valor -> NUMERO .)
    IGUAL           reduce using rule 26 (valor -> NUMERO .)


state 57

    (27) valor -> CADENA .

    IDENTICO        reduce using rule 27 (valor -> CADENA .)
    NOIDENTICO      reduce using rule 27 (valor -> CADENA .)
    IGUAL           reduce using rule 27 (valor -> CADENA .)
    PUNTOCOMA       reduce using rule 27 (valor -> CADENA .)
    COMA            reduce using rule 27 (valor -> CADENA .)
    OPERADOR        reduce using rule 27 (valor -> CADENA .)
    AND             reduce using rule 27 (valor -> CADENA .)
    OR              reduce using rule 27 (valor -> CADENA .)
    IDENTIFICADOR   reduce using rule 27 (valor -> CADENA .)
    COMENTARIO      reduce using rule 27 (valor -> CADENA .)
    LLAVEDER        reduce using rule 27 (valor -> CADENA .)
    PRINT           reduce using rule 27 (valor -> CADENA .)
    ECHO            reduce using rule 27 (valor -> CADENA .)
    FUNCTION        reduce using rule 27 (valor -> CADENA .)
    NAMEFUNCTION    reduce using rule 27 (valor -> CADENA .)
    RETURN          reduce using rule 27 (valor -> CADENA .)
    WHILE           reduce using rule 27 (valor -> CADENA .)
    FOR             reduce using rule 27 (valor -> CADENA .)
    IF              reduce using rule 27 (valor -> CADENA .)
    ELSEIF          reduce using rule 27 (valor -> CADENA .)
    ELSE            reduce using rule 27 (valor -> CADENA .)
    FOREACH         reduce using rule 27 (valor -> CADENA .)
    SWITCH          reduce using rule 27 (valor -> CADENA .)
    CADENA          reduce using rule 27 (valor -> CADENA .)
    BOOLEAN         reduce using rule 27 (valor -> CADENA .)
    ENTERO          reduce using rule 27 (valor -> CADENA .)
    RESTA           reduce using rule 27 (valor -> CADENA .)
    FLOTANTE        reduce using rule 27 (valor -> CADENA .)
    $end            reduce using rule 27 (valor -> CADENA .)
    PARENDER        reduce using rule 27 (valor -> CADENA .)
    CORCHETEDER     reduce using rule 27 (valor -> CADENA .)
    DOSPUNTOS       reduce using rule 27 (valor -> CADENA .)


state 58

    (28) valor -> BOOLEAN .

    IDENTICO        reduce using rule 28 (valor -> BOOLEAN .)
    NOIDENTICO      reduce using rule 28 (valor -> BOOLEAN .)
    IGUAL           reduce using rule 28 (valor -> BOOLEAN .)
    PUNTOCOMA       reduce using rule 28 (valor -> BOOLEAN .)
    COMA            reduce using rule 28 (valor -> BOOLEAN .)
    OPERADOR        reduce using rule 28 (valor -> BOOLEAN .)
    AND             reduce using rule 28 (valor -> BOOLEAN .)
    OR              reduce using rule 28 (valor -> BOOLEAN .)
    IDENTIFICADOR   reduce using rule 28 (valor -> BOOLEAN .)
    COMENTARIO      reduce using rule 28 (valor -> BOOLEAN .)
    LLAVEDER        reduce using rule 28 (valor -> BOOLEAN .)
    PRINT           reduce using rule 28 (valor -> BOOLEAN .)
    ECHO            reduce using rule 28 (valor -> BOOLEAN .)
    FUNCTION        reduce using rule 28 (valor -> BOOLEAN .)
    NAMEFUNCTION    reduce using rule 28 (valor -> BOOLEAN .)
    RETURN          reduce using rule 28 (valor -> BOOLEAN .)
    WHILE           reduce using rule 28 (valor -> BOOLEAN .)
    FOR             reduce using rule 28 (valor -> BOOLEAN .)
    IF              reduce using rule 28 (valor -> BOOLEAN .)
    ELSEIF          reduce using rule 28 (valor -> BOOLEAN .)
    ELSE            reduce using rule 28 (valor -> BOOLEAN .)
    FOREACH         reduce using rule 28 (valor -> BOOLEAN .)
    SWITCH          reduce using rule 28 (valor -> BOOLEAN .)
    CADENA          reduce using rule 28 (valor -> BOOLEAN .)
    BOOLEAN         reduce using rule 28 (valor -> BOOLEAN .)
    ENTERO          reduce using rule 28 (valor -> BOOLEAN .)
    RESTA           reduce using rule 28 (valor -> BOOLEAN .)
    FLOTANTE        reduce using rule 28 (valor -> BOOLEAN .)
    $end            reduce using rule 28 (valor -> BOOLEAN .)
    PARENDER        reduce using rule 28 (valor -> BOOLEAN .)
    CORCHETEDER     reduce using rule 28 (valor -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 28 (valor -> BOOLEAN .)


state 59

    (25) NUMERO -> FLOTANTE .

    MAYORQUE        reduce using rule 25 (NUMERO -> FLOTANTE .)
    MAYORIGUALQUE   reduce using rule 25 (NUMERO -> FLOTANTE .)
    MENORQUE        reduce using rule 25 (NUMERO -> FLOTANTE .)
    MENORIGUALQUE   reduce using rule 25 (NUMERO -> FLOTANTE .)
    SUMA            reduce using rule 25 (NUMERO -> FLOTANTE .)
    RESTA           reduce using rule 25 (NUMERO -> FLOTANTE .)
    MULT            reduce using rule 25 (NUMERO -> FLOTANTE .)
    DIVISION        reduce using rule 25 (NUMERO -> FLOTANTE .)
    DIVISIONENTERA  reduce using rule 25 (NUMERO -> FLOTANTE .)
    MODULO          reduce using rule 25 (NUMERO -> FLOTANTE .)
    POTENCIA        reduce using rule 25 (NUMERO -> FLOTANTE .)
    IDENTICO        reduce using rule 25 (NUMERO -> FLOTANTE .)
    NOIDENTICO      reduce using rule 25 (NUMERO -> FLOTANTE .)
    IGUAL           reduce using rule 25 (NUMERO -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 25 (NUMERO -> FLOTANTE .)
    COMA            reduce using rule 25 (NUMERO -> FLOTANTE .)
    OPERADOR        reduce using rule 25 (NUMERO -> FLOTANTE .)
    AND             reduce using rule 25 (NUMERO -> FLOTANTE .)
    OR              reduce using rule 25 (NUMERO -> FLOTANTE .)
    IDENTIFICADOR   reduce using rule 25 (NUMERO -> FLOTANTE .)
    COMENTARIO      reduce using rule 25 (NUMERO -> FLOTANTE .)
    LLAVEDER        reduce using rule 25 (NUMERO -> FLOTANTE .)
    PRINT           reduce using rule 25 (NUMERO -> FLOTANTE .)
    ECHO            reduce using rule 25 (NUMERO -> FLOTANTE .)
    FUNCTION        reduce using rule 25 (NUMERO -> FLOTANTE .)
    NAMEFUNCTION    reduce using rule 25 (NUMERO -> FLOTANTE .)
    RETURN          reduce using rule 25 (NUMERO -> FLOTANTE .)
    WHILE           reduce using rule 25 (NUMERO -> FLOTANTE .)
    FOR             reduce using rule 25 (NUMERO -> FLOTANTE .)
    IF              reduce using rule 25 (NUMERO -> FLOTANTE .)
    ELSEIF          reduce using rule 25 (NUMERO -> FLOTANTE .)
    ELSE            reduce using rule 25 (NUMERO -> FLOTANTE .)
    FOREACH         reduce using rule 25 (NUMERO -> FLOTANTE .)
    SWITCH          reduce using rule 25 (NUMERO -> FLOTANTE .)
    CADENA          reduce using rule 25 (NUMERO -> FLOTANTE .)
    BOOLEAN         reduce using rule 25 (NUMERO -> FLOTANTE .)
    ENTERO          reduce using rule 25 (NUMERO -> FLOTANTE .)
    FLOTANTE        reduce using rule 25 (NUMERO -> FLOTANTE .)
    $end            reduce using rule 25 (NUMERO -> FLOTANTE .)
    PARENDER        reduce using rule 25 (NUMERO -> FLOTANTE .)
    CORCHETEDER     reduce using rule 25 (NUMERO -> FLOTANTE .)
    DOSPUNTOS       reduce using rule 25 (NUMERO -> FLOTANTE .)


state 60

    (4) bloques -> bloque bloques .

    $end            reduce using rule 4 (bloques -> bloque bloques .)


state 61

    (24) NUMERO -> RESTA . ENTERO

    ENTERO          shift and go to state 62


state 62

    (24) NUMERO -> RESTA ENTERO .

    MAYORQUE        reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    MAYORIGUALQUE   reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    MENORQUE        reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    MENORIGUALQUE   reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    SUMA            reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    RESTA           reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    MULT            reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    DIVISION        reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    DIVISIONENTERA  reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    MODULO          reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    POTENCIA        reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    IDENTICO        reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    NOIDENTICO      reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    IGUAL           reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    PUNTOCOMA       reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    COMA            reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    OPERADOR        reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    AND             reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    OR              reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    IDENTIFICADOR   reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    COMENTARIO      reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    LLAVEDER        reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    PRINT           reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    ECHO            reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    FUNCTION        reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    NAMEFUNCTION    reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    RETURN          reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    WHILE           reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    FOR             reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    IF              reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    ELSEIF          reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    ELSE            reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    FOREACH         reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    SWITCH          reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    CADENA          reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    BOOLEAN         reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    ENTERO          reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    FLOTANTE        reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    $end            reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    PARENDER        reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    CORCHETEDER     reduce using rule 24 (NUMERO -> RESTA ENTERO .)
    DOSPUNTOS       reduce using rule 24 (NUMERO -> RESTA ENTERO .)


state 63

    (62) asignacion -> IDENTIFICADOR ASIGNAR . valor PUNTOCOMA
    (53) operaciones -> IDENTIFICADOR ASIGNAR . operaciones
    (50) longitud -> IDENTIFICADOR ASIGNAR . STRLEN PARENIZ valor PARENDER PUNTOCOMA
    (66) input -> IDENTIFICADOR ASIGNAR . FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA
    (72) funcion -> IDENTIFICADOR ASIGNAR . NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (106) queue -> IDENTIFICADOR ASIGNAR . NEW QUEUE PARENIZ PARENDER PUNTOCOMA
    (101) stack -> IDENTIFICADOR ASIGNAR . NEW STACK PARENIZ PARENDER PUNTOCOMA
    (114) array -> IDENTIFICADOR ASIGNAR . ARRAY PARENIZ PARENDER PUNTOCOMA
    (115) array -> IDENTIFICADOR ASIGNAR . ARRAY PARENIZ valores PARENDER PUNTOCOMA
    (116) array -> IDENTIFICADOR ASIGNAR . CORCHETEIZ valores CORCHETEDER PUNTOCOMA
    (26) valor -> . NUMERO
    (27) valor -> . CADENA
    (28) valor -> . BOOLEAN
    (29) valor -> . IDENTIFICADOR
    (51) operaciones -> . operacion
    (52) operaciones -> . operacion operadorAritmetico operaciones
    (53) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE
    (54) operacion -> . variable operadorAritmetico variable
    (37) variable -> . NUMERO
    (38) variable -> . IDENTIFICADOR

    STRLEN          shift and go to state 102
    FGETS           shift and go to state 103
    NAMEFUNCTION    shift and go to state 104
    NEW             shift and go to state 105
    ARRAY           shift and go to state 106
    CORCHETEIZ      shift and go to state 107
    CADENA          shift and go to state 57
    BOOLEAN         shift and go to state 58
    IDENTIFICADOR   shift and go to state 99
    ENTERO          shift and go to state 49
    RESTA           shift and go to state 61
    FLOTANTE        shift and go to state 59

    valor                          shift and go to state 100
    operaciones                    shift and go to state 101
    NUMERO                         shift and go to state 108
    operacion                      shift and go to state 39
    variable                       shift and go to state 109

state 64

    (107) queue -> IDENTIFICADOR FLECHASIMPLE . ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
    (108) queue -> IDENTIFICADOR FLECHASIMPLE . COUNT PARENIZ PARENDER PUNTOCOMA
    (109) queue -> IDENTIFICADOR FLECHASIMPLE . DEQUEUE PARENIZ PARENDER PUNTOCOMA
    (110) queue -> IDENTIFICADOR FLECHASIMPLE . NEXT PARENIZ PARENDER PUNTOCOMA
    (111) queue -> IDENTIFICADOR FLECHASIMPLE . REWIND PARENIZ PARENDER PUNTOCOMA
    (112) queue -> IDENTIFICADOR FLECHASIMPLE . CURRENT PARENIZ PARENDER PUNTOCOMA
    (113) queue -> IDENTIFICADOR FLECHASIMPLE . VALID PARENIZ PARENDER
    (99) stack -> IDENTIFICADOR FLECHASIMPLE . PUSH PARENIZ valor PARENDER PUNTOCOMA
    (100) stack -> IDENTIFICADOR FLECHASIMPLE . POP PARENIZ PARENDER PUNTOCOMA
    (102) stack -> IDENTIFICADOR FLECHASIMPLE . NEXT PARENIZ PARENDER PUNTOCOMA
    (103) stack -> IDENTIFICADOR FLECHASIMPLE . REWIND PARENIZ PARENDER PUNTOCOMA
    (104) stack -> IDENTIFICADOR FLECHASIMPLE . CURRENT PARENIZ PARENDER PUNTOCOMA
    (105) stack -> IDENTIFICADOR FLECHASIMPLE . VALID PARENIZ PARENDER

    ENQUEUE         shift and go to state 110
    COUNT           shift and go to state 111
    DEQUEUE         shift and go to state 112
    NEXT            shift and go to state 113
    REWIND          shift and go to state 114
    CURRENT         shift and go to state 115
    VALID           shift and go to state 116
    PUSH            shift and go to state 117
    POP             shift and go to state 118


state 65

    (42) comparacion -> valor comparador . valor
    (26) valor -> . NUMERO
    (27) valor -> . CADENA
    (28) valor -> . BOOLEAN
    (29) valor -> . IDENTIFICADOR
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 57
    BOOLEAN         shift and go to state 58
    IDENTIFICADOR   shift and go to state 80
    ENTERO          shift and go to state 49
    RESTA           shift and go to state 61
    FLOTANTE        shift and go to state 59

    valor                          shift and go to state 119
    NUMERO                         shift and go to state 79

state 66

    (34) comparador -> IDENTICO .

    CADENA          reduce using rule 34 (comparador -> IDENTICO .)
    BOOLEAN         reduce using rule 34 (comparador -> IDENTICO .)
    IDENTIFICADOR   reduce using rule 34 (comparador -> IDENTICO .)
    ENTERO          reduce using rule 34 (comparador -> IDENTICO .)
    RESTA           reduce using rule 34 (comparador -> IDENTICO .)
    FLOTANTE        reduce using rule 34 (comparador -> IDENTICO .)


state 67

    (35) comparador -> NOIDENTICO .

    CADENA          reduce using rule 35 (comparador -> NOIDENTICO .)
    BOOLEAN         reduce using rule 35 (comparador -> NOIDENTICO .)
    IDENTIFICADOR   reduce using rule 35 (comparador -> NOIDENTICO .)
    ENTERO          reduce using rule 35 (comparador -> NOIDENTICO .)
    RESTA           reduce using rule 35 (comparador -> NOIDENTICO .)
    FLOTANTE        reduce using rule 35 (comparador -> NOIDENTICO .)


state 68

    (36) comparador -> IGUAL .

    CADENA          reduce using rule 36 (comparador -> IGUAL .)
    BOOLEAN         reduce using rule 36 (comparador -> IGUAL .)
    IDENTIFICADOR   reduce using rule 36 (comparador -> IGUAL .)
    ENTERO          reduce using rule 36 (comparador -> IGUAL .)
    RESTA           reduce using rule 36 (comparador -> IGUAL .)
    FLOTANTE        reduce using rule 36 (comparador -> IGUAL .)


state 69

    (40) comparaciones -> comparacion operadores . comparaciones
    (39) comparaciones -> . comparacion
    (40) comparaciones -> . comparacion operadores comparaciones
    (41) comparacion -> . variable comparadorNum variable
    (42) comparacion -> . valor comparador valor
    (37) variable -> . NUMERO
    (38) variable -> . IDENTIFICADOR
    (26) valor -> . NUMERO
    (27) valor -> . CADENA
    (28) valor -> . BOOLEAN
    (29) valor -> . IDENTIFICADOR
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 122
    CADENA          shift and go to state 57
    BOOLEAN         shift and go to state 58
    ENTERO          shift and go to state 49
    RESTA           shift and go to state 61
    FLOTANTE        shift and go to state 59

    comparacion                    shift and go to state 38
    comparaciones                  shift and go to state 120
    variable                       shift and go to state 121
    valor                          shift and go to state 25
    NUMERO                         shift and go to state 56

state 70

    (47) operadores -> OPERADOR .

    IDENTIFICADOR   reduce using rule 47 (operadores -> OPERADOR .)
    CADENA          reduce using rule 47 (operadores -> OPERADOR .)
    BOOLEAN         reduce using rule 47 (operadores -> OPERADOR .)
    ENTERO          reduce using rule 47 (operadores -> OPERADOR .)
    RESTA           reduce using rule 47 (operadores -> OPERADOR .)
    FLOTANTE        reduce using rule 47 (operadores -> OPERADOR .)


state 71

    (48) operadores -> AND .

    IDENTIFICADOR   reduce using rule 48 (operadores -> AND .)
    CADENA          reduce using rule 48 (operadores -> AND .)
    BOOLEAN         reduce using rule 48 (operadores -> AND .)
    ENTERO          reduce using rule 48 (operadores -> AND .)
    RESTA           reduce using rule 48 (operadores -> AND .)
    FLOTANTE        reduce using rule 48 (operadores -> AND .)


state 72

    (49) operadores -> OR .

    IDENTIFICADOR   reduce using rule 49 (operadores -> OR .)
    CADENA          reduce using rule 49 (operadores -> OR .)
    BOOLEAN         reduce using rule 49 (operadores -> OR .)
    ENTERO          reduce using rule 49 (operadores -> OR .)
    RESTA           reduce using rule 49 (operadores -> OR .)
    FLOTANTE        reduce using rule 49 (operadores -> OR .)


state 73

    (52) operaciones -> operacion operadorAritmetico . operaciones
    (51) operaciones -> . operacion
    (52) operaciones -> . operacion operadorAritmetico operaciones
    (53) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (54) operacion -> . variable operadorAritmetico variable
    (37) variable -> . NUMERO
    (38) variable -> . IDENTIFICADOR
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 124
    ENTERO          shift and go to state 49
    RESTA           shift and go to state 61
    FLOTANTE        shift and go to state 59

    operacion                      shift and go to state 39
    operaciones                    shift and go to state 123
    variable                       shift and go to state 109
    NUMERO                         shift and go to state 125

state 74

    (56) operadorAritmetico -> RESTA .

    IDENTIFICADOR   reduce using rule 56 (operadorAritmetico -> RESTA .)
    ENTERO          reduce using rule 56 (operadorAritmetico -> RESTA .)
    RESTA           reduce using rule 56 (operadorAritmetico -> RESTA .)
    FLOTANTE        reduce using rule 56 (operadorAritmetico -> RESTA .)


state 75

    (90) elseif -> LLAVEDER ELSEIF . PARENIZ comparaciones PARENDER LLAVEIZ
    (91) elseif -> LLAVEDER ELSEIF . PARENIZ IDENTIFICADOR PARENDER LLAVEIZ

    PARENIZ         shift and go to state 126


state 76

    (94) else -> LLAVEDER ELSE . LLAVEIZ

    LLAVEIZ         shift and go to state 127


state 77

    (63) print -> PRINT PARENIZ . valores PARENDER PUNTOCOMA
    (65) print -> PRINT PARENIZ . PARENDER PUNTOCOMA
    (21) valores -> . valor
    (22) valores -> . valor COMA valores
    (26) valor -> . NUMERO
    (27) valor -> . CADENA
    (28) valor -> . BOOLEAN
    (29) valor -> . IDENTIFICADOR
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE

    PARENDER        shift and go to state 129
    CADENA          shift and go to state 57
    BOOLEAN         shift and go to state 58
    IDENTIFICADOR   shift and go to state 80
    ENTERO          shift and go to state 49
    RESTA           shift and go to state 61
    FLOTANTE        shift and go to state 59

    valores                        shift and go to state 128
    valor                          shift and go to state 82
    NUMERO                         shift and go to state 79

state 78

    (64) print -> PRINT valor . PUNTOCOMA

    PUNTOCOMA       shift and go to state 130


state 79

    (26) valor -> NUMERO .

    PUNTOCOMA       reduce using rule 26 (valor -> NUMERO .)
    COMA            reduce using rule 26 (valor -> NUMERO .)
    OPERADOR        reduce using rule 26 (valor -> NUMERO .)
    AND             reduce using rule 26 (valor -> NUMERO .)
    OR              reduce using rule 26 (valor -> NUMERO .)
    IDENTIFICADOR   reduce using rule 26 (valor -> NUMERO .)
    COMENTARIO      reduce using rule 26 (valor -> NUMERO .)
    LLAVEDER        reduce using rule 26 (valor -> NUMERO .)
    PRINT           reduce using rule 26 (valor -> NUMERO .)
    ECHO            reduce using rule 26 (valor -> NUMERO .)
    FUNCTION        reduce using rule 26 (valor -> NUMERO .)
    NAMEFUNCTION    reduce using rule 26 (valor -> NUMERO .)
    RETURN          reduce using rule 26 (valor -> NUMERO .)
    WHILE           reduce using rule 26 (valor -> NUMERO .)
    FOR             reduce using rule 26 (valor -> NUMERO .)
    IF              reduce using rule 26 (valor -> NUMERO .)
    ELSEIF          reduce using rule 26 (valor -> NUMERO .)
    ELSE            reduce using rule 26 (valor -> NUMERO .)
    FOREACH         reduce using rule 26 (valor -> NUMERO .)
    SWITCH          reduce using rule 26 (valor -> NUMERO .)
    CADENA          reduce using rule 26 (valor -> NUMERO .)
    BOOLEAN         reduce using rule 26 (valor -> NUMERO .)
    ENTERO          reduce using rule 26 (valor -> NUMERO .)
    RESTA           reduce using rule 26 (valor -> NUMERO .)
    FLOTANTE        reduce using rule 26 (valor -> NUMERO .)
    $end            reduce using rule 26 (valor -> NUMERO .)
    PARENDER        reduce using rule 26 (valor -> NUMERO .)
    CORCHETEDER     reduce using rule 26 (valor -> NUMERO .)
    DOSPUNTOS       reduce using rule 26 (valor -> NUMERO .)


state 80

    (29) valor -> IDENTIFICADOR .

    PUNTOCOMA       reduce using rule 29 (valor -> IDENTIFICADOR .)
    COMA            reduce using rule 29 (valor -> IDENTIFICADOR .)
    OPERADOR        reduce using rule 29 (valor -> IDENTIFICADOR .)
    AND             reduce using rule 29 (valor -> IDENTIFICADOR .)
    OR              reduce using rule 29 (valor -> IDENTIFICADOR .)
    IDENTIFICADOR   reduce using rule 29 (valor -> IDENTIFICADOR .)
    COMENTARIO      reduce using rule 29 (valor -> IDENTIFICADOR .)
    LLAVEDER        reduce using rule 29 (valor -> IDENTIFICADOR .)
    PRINT           reduce using rule 29 (valor -> IDENTIFICADOR .)
    ECHO            reduce using rule 29 (valor -> IDENTIFICADOR .)
    FUNCTION        reduce using rule 29 (valor -> IDENTIFICADOR .)
    NAMEFUNCTION    reduce using rule 29 (valor -> IDENTIFICADOR .)
    RETURN          reduce using rule 29 (valor -> IDENTIFICADOR .)
    WHILE           reduce using rule 29 (valor -> IDENTIFICADOR .)
    FOR             reduce using rule 29 (valor -> IDENTIFICADOR .)
    IF              reduce using rule 29 (valor -> IDENTIFICADOR .)
    ELSEIF          reduce using rule 29 (valor -> IDENTIFICADOR .)
    ELSE            reduce using rule 29 (valor -> IDENTIFICADOR .)
    FOREACH         reduce using rule 29 (valor -> IDENTIFICADOR .)
    SWITCH          reduce using rule 29 (valor -> IDENTIFICADOR .)
    CADENA          reduce using rule 29 (valor -> IDENTIFICADOR .)
    BOOLEAN         reduce using rule 29 (valor -> IDENTIFICADOR .)
    ENTERO          reduce using rule 29 (valor -> IDENTIFICADOR .)
    RESTA           reduce using rule 29 (valor -> IDENTIFICADOR .)
    FLOTANTE        reduce using rule 29 (valor -> IDENTIFICADOR .)
    $end            reduce using rule 29 (valor -> IDENTIFICADOR .)
    PARENDER        reduce using rule 29 (valor -> IDENTIFICADOR .)
    CORCHETEDER     reduce using rule 29 (valor -> IDENTIFICADOR .)
    DOSPUNTOS       reduce using rule 29 (valor -> IDENTIFICADOR .)


state 81

    (67) echo -> ECHO valores . PUNTOCOMA

    PUNTOCOMA       shift and go to state 131


state 82

    (21) valores -> valor .
    (22) valores -> valor . COMA valores

    PUNTOCOMA       reduce using rule 21 (valores -> valor .)
    PARENDER        reduce using rule 21 (valores -> valor .)
    CORCHETEDER     reduce using rule 21 (valores -> valor .)
    COMA            shift and go to state 132


state 83

    (68) funcion -> FUNCTION NAMEFUNCTION . PARENIZ parametro PARENDER LLAVEIZ

    PARENIZ         shift and go to state 133


state 84

    (71) funcion -> NAMEFUNCTION PARENIZ . parametro PARENDER PUNTOCOMA
    (69) parametro -> . IDENTIFICADOR
    (70) parametro -> . IDENTIFICADOR COMA parametro

    IDENTIFICADOR   shift and go to state 135

    parametro                      shift and go to state 134

state 85

    (73) return -> RETURN IDENTIFICADOR . PUNTOCOMA

    PUNTOCOMA       shift and go to state 136


state 86

    (81) while -> WHILE PARENIZ . comparaciones PARENDER LLAVEIZ
    (39) comparaciones -> . comparacion
    (40) comparaciones -> . comparacion operadores comparaciones
    (41) comparacion -> . variable comparadorNum variable
    (42) comparacion -> . valor comparador valor
    (37) variable -> . NUMERO
    (38) variable -> . IDENTIFICADOR
    (26) valor -> . NUMERO
    (27) valor -> . CADENA
    (28) valor -> . BOOLEAN
    (29) valor -> . IDENTIFICADOR
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 122
    CADENA          shift and go to state 57
    BOOLEAN         shift and go to state 58
    ENTERO          shift and go to state 49
    RESTA           shift and go to state 61
    FLOTANTE        shift and go to state 59

    comparaciones                  shift and go to state 137
    comparacion                    shift and go to state 38
    variable                       shift and go to state 121
    valor                          shift and go to state 25
    NUMERO                         shift and go to state 56

state 87

    (82) for -> FOR PARENIZ . IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 138


state 88

    (88) if -> IF PARENIZ . comparaciones PARENDER LLAVEIZ
    (89) if -> IF PARENIZ . IDENTIFICADOR PARENDER LLAVEIZ
    (39) comparaciones -> . comparacion
    (40) comparaciones -> . comparacion operadores comparaciones
    (41) comparacion -> . variable comparadorNum variable
    (42) comparacion -> . valor comparador valor
    (37) variable -> . NUMERO
    (38) variable -> . IDENTIFICADOR
    (26) valor -> . NUMERO
    (27) valor -> . CADENA
    (28) valor -> . BOOLEAN
    (29) valor -> . IDENTIFICADOR
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 140
    CADENA          shift and go to state 57
    BOOLEAN         shift and go to state 58
    ENTERO          shift and go to state 49
    RESTA           shift and go to state 61
    FLOTANTE        shift and go to state 59

    comparaciones                  shift and go to state 139
    comparacion                    shift and go to state 38
    variable                       shift and go to state 121
    valor                          shift and go to state 25
    NUMERO                         shift and go to state 56

state 89

    (92) elseif -> ELSEIF PARENIZ . comparaciones PARENDER LLAVEIZ
    (93) elseif -> ELSEIF PARENIZ . IDENTIFICADOR PARENDER LLAVEIZ
    (39) comparaciones -> . comparacion
    (40) comparaciones -> . comparacion operadores comparaciones
    (41) comparacion -> . variable comparadorNum variable
    (42) comparacion -> . valor comparador valor
    (37) variable -> . NUMERO
    (38) variable -> . IDENTIFICADOR
    (26) valor -> . NUMERO
    (27) valor -> . CADENA
    (28) valor -> . BOOLEAN
    (29) valor -> . IDENTIFICADOR
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 142
    CADENA          shift and go to state 57
    BOOLEAN         shift and go to state 58
    ENTERO          shift and go to state 49
    RESTA           shift and go to state 61
    FLOTANTE        shift and go to state 59

    comparaciones                  shift and go to state 141
    comparacion                    shift and go to state 38
    variable                       shift and go to state 121
    valor                          shift and go to state 25
    NUMERO                         shift and go to state 56

state 90

    (95) else -> ELSE LLAVEIZ .

    IDENTIFICADOR   reduce using rule 95 (else -> ELSE LLAVEIZ .)
    COMENTARIO      reduce using rule 95 (else -> ELSE LLAVEIZ .)
    LLAVEDER        reduce using rule 95 (else -> ELSE LLAVEIZ .)
    PRINT           reduce using rule 95 (else -> ELSE LLAVEIZ .)
    ECHO            reduce using rule 95 (else -> ELSE LLAVEIZ .)
    FUNCTION        reduce using rule 95 (else -> ELSE LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 95 (else -> ELSE LLAVEIZ .)
    RETURN          reduce using rule 95 (else -> ELSE LLAVEIZ .)
    WHILE           reduce using rule 95 (else -> ELSE LLAVEIZ .)
    FOR             reduce using rule 95 (else -> ELSE LLAVEIZ .)
    IF              reduce using rule 95 (else -> ELSE LLAVEIZ .)
    ELSEIF          reduce using rule 95 (else -> ELSE LLAVEIZ .)
    ELSE            reduce using rule 95 (else -> ELSE LLAVEIZ .)
    FOREACH         reduce using rule 95 (else -> ELSE LLAVEIZ .)
    SWITCH          reduce using rule 95 (else -> ELSE LLAVEIZ .)
    CADENA          reduce using rule 95 (else -> ELSE LLAVEIZ .)
    BOOLEAN         reduce using rule 95 (else -> ELSE LLAVEIZ .)
    ENTERO          reduce using rule 95 (else -> ELSE LLAVEIZ .)
    RESTA           reduce using rule 95 (else -> ELSE LLAVEIZ .)
    FLOTANTE        reduce using rule 95 (else -> ELSE LLAVEIZ .)
    $end            reduce using rule 95 (else -> ELSE LLAVEIZ .)


state 91

    (83) foreach -> FOREACH PARENIZ . IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 143


state 92

    (84) switch -> SWITCH PARENIZ . valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER
    (26) valor -> . NUMERO
    (27) valor -> . CADENA
    (28) valor -> . BOOLEAN
    (29) valor -> . IDENTIFICADOR
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 57
    BOOLEAN         shift and go to state 58
    IDENTIFICADOR   shift and go to state 80
    ENTERO          shift and go to state 49
    RESTA           shift and go to state 61
    FLOTANTE        shift and go to state 59

    valor                          shift and go to state 144
    NUMERO                         shift and go to state 79

state 93

    (41) comparacion -> variable comparadorNum . variable
    (37) variable -> . NUMERO
    (38) variable -> . IDENTIFICADOR
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 146
    ENTERO          shift and go to state 49
    RESTA           shift and go to state 61
    FLOTANTE        shift and go to state 59

    variable                       shift and go to state 145
    NUMERO                         shift and go to state 125

state 94

    (54) operacion -> variable operadorAritmetico . variable
    (37) variable -> . NUMERO
    (38) variable -> . IDENTIFICADOR
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 146
    ENTERO          shift and go to state 49
    RESTA           shift and go to state 61
    FLOTANTE        shift and go to state 59

    variable                       shift and go to state 147
    NUMERO                         shift and go to state 125

state 95

    (30) comparadorNum -> MAYORQUE .

    IDENTIFICADOR   reduce using rule 30 (comparadorNum -> MAYORQUE .)
    ENTERO          reduce using rule 30 (comparadorNum -> MAYORQUE .)
    RESTA           reduce using rule 30 (comparadorNum -> MAYORQUE .)
    FLOTANTE        reduce using rule 30 (comparadorNum -> MAYORQUE .)


state 96

    (31) comparadorNum -> MAYORIGUALQUE .

    IDENTIFICADOR   reduce using rule 31 (comparadorNum -> MAYORIGUALQUE .)
    ENTERO          reduce using rule 31 (comparadorNum -> MAYORIGUALQUE .)
    RESTA           reduce using rule 31 (comparadorNum -> MAYORIGUALQUE .)
    FLOTANTE        reduce using rule 31 (comparadorNum -> MAYORIGUALQUE .)


state 97

    (32) comparadorNum -> MENORQUE .

    IDENTIFICADOR   reduce using rule 32 (comparadorNum -> MENORQUE .)
    ENTERO          reduce using rule 32 (comparadorNum -> MENORQUE .)
    RESTA           reduce using rule 32 (comparadorNum -> MENORQUE .)
    FLOTANTE        reduce using rule 32 (comparadorNum -> MENORQUE .)


state 98

    (33) comparadorNum -> MENORIGUALQUE .

    IDENTIFICADOR   reduce using rule 33 (comparadorNum -> MENORIGUALQUE .)
    ENTERO          reduce using rule 33 (comparadorNum -> MENORIGUALQUE .)
    RESTA           reduce using rule 33 (comparadorNum -> MENORIGUALQUE .)
    FLOTANTE        reduce using rule 33 (comparadorNum -> MENORIGUALQUE .)


state 99

    (29) valor -> IDENTIFICADOR .
    (53) operaciones -> IDENTIFICADOR . ASIGNAR operaciones
    (38) variable -> IDENTIFICADOR .

    PUNTOCOMA       reduce using rule 29 (valor -> IDENTIFICADOR .)
    ASIGNAR         shift and go to state 148
    SUMA            reduce using rule 38 (variable -> IDENTIFICADOR .)
    RESTA           reduce using rule 38 (variable -> IDENTIFICADOR .)
    MULT            reduce using rule 38 (variable -> IDENTIFICADOR .)
    DIVISION        reduce using rule 38 (variable -> IDENTIFICADOR .)
    DIVISIONENTERA  reduce using rule 38 (variable -> IDENTIFICADOR .)
    MODULO          reduce using rule 38 (variable -> IDENTIFICADOR .)
    POTENCIA        reduce using rule 38 (variable -> IDENTIFICADOR .)


state 100

    (62) asignacion -> IDENTIFICADOR ASIGNAR valor . PUNTOCOMA

    PUNTOCOMA       shift and go to state 149


state 101

    (53) operaciones -> IDENTIFICADOR ASIGNAR operaciones .

    IDENTIFICADOR   reduce using rule 53 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    COMENTARIO      reduce using rule 53 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    LLAVEDER        reduce using rule 53 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    PRINT           reduce using rule 53 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    ECHO            reduce using rule 53 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    FUNCTION        reduce using rule 53 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    NAMEFUNCTION    reduce using rule 53 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    RETURN          reduce using rule 53 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    WHILE           reduce using rule 53 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    FOR             reduce using rule 53 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    IF              reduce using rule 53 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    ELSEIF          reduce using rule 53 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    ELSE            reduce using rule 53 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    FOREACH         reduce using rule 53 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    SWITCH          reduce using rule 53 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    CADENA          reduce using rule 53 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    BOOLEAN         reduce using rule 53 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    ENTERO          reduce using rule 53 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    RESTA           reduce using rule 53 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    FLOTANTE        reduce using rule 53 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    $end            reduce using rule 53 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)


state 102

    (50) longitud -> IDENTIFICADOR ASIGNAR STRLEN . PARENIZ valor PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 150


state 103

    (66) input -> IDENTIFICADOR ASIGNAR FGETS . PARENIZ FLUJOS PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 151


state 104

    (72) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION . PARENIZ parametro PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 152


state 105

    (106) queue -> IDENTIFICADOR ASIGNAR NEW . QUEUE PARENIZ PARENDER PUNTOCOMA
    (101) stack -> IDENTIFICADOR ASIGNAR NEW . STACK PARENIZ PARENDER PUNTOCOMA

    QUEUE           shift and go to state 153
    STACK           shift and go to state 154


state 106

    (114) array -> IDENTIFICADOR ASIGNAR ARRAY . PARENIZ PARENDER PUNTOCOMA
    (115) array -> IDENTIFICADOR ASIGNAR ARRAY . PARENIZ valores PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 155


state 107

    (116) array -> IDENTIFICADOR ASIGNAR CORCHETEIZ . valores CORCHETEDER PUNTOCOMA
    (21) valores -> . valor
    (22) valores -> . valor COMA valores
    (26) valor -> . NUMERO
    (27) valor -> . CADENA
    (28) valor -> . BOOLEAN
    (29) valor -> . IDENTIFICADOR
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 57
    BOOLEAN         shift and go to state 58
    IDENTIFICADOR   shift and go to state 80
    ENTERO          shift and go to state 49
    RESTA           shift and go to state 61
    FLOTANTE        shift and go to state 59

    valores                        shift and go to state 156
    valor                          shift and go to state 82
    NUMERO                         shift and go to state 79

state 108

    (26) valor -> NUMERO .
    (37) variable -> NUMERO .

    PUNTOCOMA       reduce using rule 26 (valor -> NUMERO .)
    SUMA            reduce using rule 37 (variable -> NUMERO .)
    RESTA           reduce using rule 37 (variable -> NUMERO .)
    MULT            reduce using rule 37 (variable -> NUMERO .)
    DIVISION        reduce using rule 37 (variable -> NUMERO .)
    DIVISIONENTERA  reduce using rule 37 (variable -> NUMERO .)
    MODULO          reduce using rule 37 (variable -> NUMERO .)
    POTENCIA        reduce using rule 37 (variable -> NUMERO .)


state 109

    (54) operacion -> variable . operadorAritmetico variable
    (55) operadorAritmetico -> . SUMA
    (56) operadorAritmetico -> . RESTA
    (57) operadorAritmetico -> . MULT
    (58) operadorAritmetico -> . DIVISION
    (59) operadorAritmetico -> . DIVISIONENTERA
    (60) operadorAritmetico -> . MODULO
    (61) operadorAritmetico -> . POTENCIA

    SUMA            shift and go to state 5
    RESTA           shift and go to state 74
    MULT            shift and go to state 7
    DIVISION        shift and go to state 8
    DIVISIONENTERA  shift and go to state 9
    MODULO          shift and go to state 10
    POTENCIA        shift and go to state 11

    operadorAritmetico             shift and go to state 94

state 110

    (107) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE . PARENIZ valor PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 157


state 111

    (108) queue -> IDENTIFICADOR FLECHASIMPLE COUNT . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 158


state 112

    (109) queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 159


state 113

    (110) queue -> IDENTIFICADOR FLECHASIMPLE NEXT . PARENIZ PARENDER PUNTOCOMA
    (102) stack -> IDENTIFICADOR FLECHASIMPLE NEXT . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 160


state 114

    (111) queue -> IDENTIFICADOR FLECHASIMPLE REWIND . PARENIZ PARENDER PUNTOCOMA
    (103) stack -> IDENTIFICADOR FLECHASIMPLE REWIND . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 161


state 115

    (112) queue -> IDENTIFICADOR FLECHASIMPLE CURRENT . PARENIZ PARENDER PUNTOCOMA
    (104) stack -> IDENTIFICADOR FLECHASIMPLE CURRENT . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 162


state 116

    (113) queue -> IDENTIFICADOR FLECHASIMPLE VALID . PARENIZ PARENDER
    (105) stack -> IDENTIFICADOR FLECHASIMPLE VALID . PARENIZ PARENDER

    PARENIZ         shift and go to state 163


state 117

    (99) stack -> IDENTIFICADOR FLECHASIMPLE PUSH . PARENIZ valor PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 164


state 118

    (100) stack -> IDENTIFICADOR FLECHASIMPLE POP . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 165


state 119

    (42) comparacion -> valor comparador valor .

    OPERADOR        reduce using rule 42 (comparacion -> valor comparador valor .)
    AND             reduce using rule 42 (comparacion -> valor comparador valor .)
    OR              reduce using rule 42 (comparacion -> valor comparador valor .)
    IDENTIFICADOR   reduce using rule 42 (comparacion -> valor comparador valor .)
    COMENTARIO      reduce using rule 42 (comparacion -> valor comparador valor .)
    LLAVEDER        reduce using rule 42 (comparacion -> valor comparador valor .)
    PRINT           reduce using rule 42 (comparacion -> valor comparador valor .)
    ECHO            reduce using rule 42 (comparacion -> valor comparador valor .)
    FUNCTION        reduce using rule 42 (comparacion -> valor comparador valor .)
    NAMEFUNCTION    reduce using rule 42 (comparacion -> valor comparador valor .)
    RETURN          reduce using rule 42 (comparacion -> valor comparador valor .)
    WHILE           reduce using rule 42 (comparacion -> valor comparador valor .)
    FOR             reduce using rule 42 (comparacion -> valor comparador valor .)
    IF              reduce using rule 42 (comparacion -> valor comparador valor .)
    ELSEIF          reduce using rule 42 (comparacion -> valor comparador valor .)
    ELSE            reduce using rule 42 (comparacion -> valor comparador valor .)
    FOREACH         reduce using rule 42 (comparacion -> valor comparador valor .)
    SWITCH          reduce using rule 42 (comparacion -> valor comparador valor .)
    CADENA          reduce using rule 42 (comparacion -> valor comparador valor .)
    BOOLEAN         reduce using rule 42 (comparacion -> valor comparador valor .)
    ENTERO          reduce using rule 42 (comparacion -> valor comparador valor .)
    RESTA           reduce using rule 42 (comparacion -> valor comparador valor .)
    FLOTANTE        reduce using rule 42 (comparacion -> valor comparador valor .)
    $end            reduce using rule 42 (comparacion -> valor comparador valor .)
    PARENDER        reduce using rule 42 (comparacion -> valor comparador valor .)


state 120

    (40) comparaciones -> comparacion operadores comparaciones .

    IDENTIFICADOR   reduce using rule 40 (comparaciones -> comparacion operadores comparaciones .)
    COMENTARIO      reduce using rule 40 (comparaciones -> comparacion operadores comparaciones .)
    LLAVEDER        reduce using rule 40 (comparaciones -> comparacion operadores comparaciones .)
    PRINT           reduce using rule 40 (comparaciones -> comparacion operadores comparaciones .)
    ECHO            reduce using rule 40 (comparaciones -> comparacion operadores comparaciones .)
    FUNCTION        reduce using rule 40 (comparaciones -> comparacion operadores comparaciones .)
    NAMEFUNCTION    reduce using rule 40 (comparaciones -> comparacion operadores comparaciones .)
    RETURN          reduce using rule 40 (comparaciones -> comparacion operadores comparaciones .)
    WHILE           reduce using rule 40 (comparaciones -> comparacion operadores comparaciones .)
    FOR             reduce using rule 40 (comparaciones -> comparacion operadores comparaciones .)
    IF              reduce using rule 40 (comparaciones -> comparacion operadores comparaciones .)
    ELSEIF          reduce using rule 40 (comparaciones -> comparacion operadores comparaciones .)
    ELSE            reduce using rule 40 (comparaciones -> comparacion operadores comparaciones .)
    FOREACH         reduce using rule 40 (comparaciones -> comparacion operadores comparaciones .)
    SWITCH          reduce using rule 40 (comparaciones -> comparacion operadores comparaciones .)
    CADENA          reduce using rule 40 (comparaciones -> comparacion operadores comparaciones .)
    BOOLEAN         reduce using rule 40 (comparaciones -> comparacion operadores comparaciones .)
    ENTERO          reduce using rule 40 (comparaciones -> comparacion operadores comparaciones .)
    RESTA           reduce using rule 40 (comparaciones -> comparacion operadores comparaciones .)
    FLOTANTE        reduce using rule 40 (comparaciones -> comparacion operadores comparaciones .)
    $end            reduce using rule 40 (comparaciones -> comparacion operadores comparaciones .)
    PARENDER        reduce using rule 40 (comparaciones -> comparacion operadores comparaciones .)


state 121

    (41) comparacion -> variable . comparadorNum variable
    (30) comparadorNum -> . MAYORQUE
    (31) comparadorNum -> . MAYORIGUALQUE
    (32) comparadorNum -> . MENORQUE
    (33) comparadorNum -> . MENORIGUALQUE

    MAYORQUE        shift and go to state 95
    MAYORIGUALQUE   shift and go to state 96
    MENORQUE        shift and go to state 97
    MENORIGUALQUE   shift and go to state 98

    comparadorNum                  shift and go to state 93

state 122

    (38) variable -> IDENTIFICADOR .
    (29) valor -> IDENTIFICADOR .

    MAYORQUE        reduce using rule 38 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 38 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 38 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 38 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 29 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 29 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 29 (valor -> IDENTIFICADOR .)


state 123

    (52) operaciones -> operacion operadorAritmetico operaciones .

    IDENTIFICADOR   reduce using rule 52 (operaciones -> operacion operadorAritmetico operaciones .)
    COMENTARIO      reduce using rule 52 (operaciones -> operacion operadorAritmetico operaciones .)
    LLAVEDER        reduce using rule 52 (operaciones -> operacion operadorAritmetico operaciones .)
    PRINT           reduce using rule 52 (operaciones -> operacion operadorAritmetico operaciones .)
    ECHO            reduce using rule 52 (operaciones -> operacion operadorAritmetico operaciones .)
    FUNCTION        reduce using rule 52 (operaciones -> operacion operadorAritmetico operaciones .)
    NAMEFUNCTION    reduce using rule 52 (operaciones -> operacion operadorAritmetico operaciones .)
    RETURN          reduce using rule 52 (operaciones -> operacion operadorAritmetico operaciones .)
    WHILE           reduce using rule 52 (operaciones -> operacion operadorAritmetico operaciones .)
    FOR             reduce using rule 52 (operaciones -> operacion operadorAritmetico operaciones .)
    IF              reduce using rule 52 (operaciones -> operacion operadorAritmetico operaciones .)
    ELSEIF          reduce using rule 52 (operaciones -> operacion operadorAritmetico operaciones .)
    ELSE            reduce using rule 52 (operaciones -> operacion operadorAritmetico operaciones .)
    FOREACH         reduce using rule 52 (operaciones -> operacion operadorAritmetico operaciones .)
    SWITCH          reduce using rule 52 (operaciones -> operacion operadorAritmetico operaciones .)
    CADENA          reduce using rule 52 (operaciones -> operacion operadorAritmetico operaciones .)
    BOOLEAN         reduce using rule 52 (operaciones -> operacion operadorAritmetico operaciones .)
    ENTERO          reduce using rule 52 (operaciones -> operacion operadorAritmetico operaciones .)
    RESTA           reduce using rule 52 (operaciones -> operacion operadorAritmetico operaciones .)
    FLOTANTE        reduce using rule 52 (operaciones -> operacion operadorAritmetico operaciones .)
    $end            reduce using rule 52 (operaciones -> operacion operadorAritmetico operaciones .)


state 124

    (53) operaciones -> IDENTIFICADOR . ASIGNAR operaciones
    (38) variable -> IDENTIFICADOR .

    ASIGNAR         shift and go to state 148
    SUMA            reduce using rule 38 (variable -> IDENTIFICADOR .)
    RESTA           reduce using rule 38 (variable -> IDENTIFICADOR .)
    MULT            reduce using rule 38 (variable -> IDENTIFICADOR .)
    DIVISION        reduce using rule 38 (variable -> IDENTIFICADOR .)
    DIVISIONENTERA  reduce using rule 38 (variable -> IDENTIFICADOR .)
    MODULO          reduce using rule 38 (variable -> IDENTIFICADOR .)
    POTENCIA        reduce using rule 38 (variable -> IDENTIFICADOR .)


state 125

    (37) variable -> NUMERO .

    SUMA            reduce using rule 37 (variable -> NUMERO .)
    RESTA           reduce using rule 37 (variable -> NUMERO .)
    MULT            reduce using rule 37 (variable -> NUMERO .)
    DIVISION        reduce using rule 37 (variable -> NUMERO .)
    DIVISIONENTERA  reduce using rule 37 (variable -> NUMERO .)
    MODULO          reduce using rule 37 (variable -> NUMERO .)
    POTENCIA        reduce using rule 37 (variable -> NUMERO .)
    OPERADOR        reduce using rule 37 (variable -> NUMERO .)
    AND             reduce using rule 37 (variable -> NUMERO .)
    OR              reduce using rule 37 (variable -> NUMERO .)
    IDENTIFICADOR   reduce using rule 37 (variable -> NUMERO .)
    COMENTARIO      reduce using rule 37 (variable -> NUMERO .)
    LLAVEDER        reduce using rule 37 (variable -> NUMERO .)
    PRINT           reduce using rule 37 (variable -> NUMERO .)
    ECHO            reduce using rule 37 (variable -> NUMERO .)
    FUNCTION        reduce using rule 37 (variable -> NUMERO .)
    NAMEFUNCTION    reduce using rule 37 (variable -> NUMERO .)
    RETURN          reduce using rule 37 (variable -> NUMERO .)
    WHILE           reduce using rule 37 (variable -> NUMERO .)
    FOR             reduce using rule 37 (variable -> NUMERO .)
    IF              reduce using rule 37 (variable -> NUMERO .)
    ELSEIF          reduce using rule 37 (variable -> NUMERO .)
    ELSE            reduce using rule 37 (variable -> NUMERO .)
    FOREACH         reduce using rule 37 (variable -> NUMERO .)
    SWITCH          reduce using rule 37 (variable -> NUMERO .)
    CADENA          reduce using rule 37 (variable -> NUMERO .)
    BOOLEAN         reduce using rule 37 (variable -> NUMERO .)
    ENTERO          reduce using rule 37 (variable -> NUMERO .)
    FLOTANTE        reduce using rule 37 (variable -> NUMERO .)
    $end            reduce using rule 37 (variable -> NUMERO .)
    PARENDER        reduce using rule 37 (variable -> NUMERO .)


state 126

    (90) elseif -> LLAVEDER ELSEIF PARENIZ . comparaciones PARENDER LLAVEIZ
    (91) elseif -> LLAVEDER ELSEIF PARENIZ . IDENTIFICADOR PARENDER LLAVEIZ
    (39) comparaciones -> . comparacion
    (40) comparaciones -> . comparacion operadores comparaciones
    (41) comparacion -> . variable comparadorNum variable
    (42) comparacion -> . valor comparador valor
    (37) variable -> . NUMERO
    (38) variable -> . IDENTIFICADOR
    (26) valor -> . NUMERO
    (27) valor -> . CADENA
    (28) valor -> . BOOLEAN
    (29) valor -> . IDENTIFICADOR
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 167
    CADENA          shift and go to state 57
    BOOLEAN         shift and go to state 58
    ENTERO          shift and go to state 49
    RESTA           shift and go to state 61
    FLOTANTE        shift and go to state 59

    comparaciones                  shift and go to state 166
    comparacion                    shift and go to state 38
    variable                       shift and go to state 121
    valor                          shift and go to state 25
    NUMERO                         shift and go to state 56

state 127

    (94) else -> LLAVEDER ELSE LLAVEIZ .

    IDENTIFICADOR   reduce using rule 94 (else -> LLAVEDER ELSE LLAVEIZ .)
    COMENTARIO      reduce using rule 94 (else -> LLAVEDER ELSE LLAVEIZ .)
    LLAVEDER        reduce using rule 94 (else -> LLAVEDER ELSE LLAVEIZ .)
    PRINT           reduce using rule 94 (else -> LLAVEDER ELSE LLAVEIZ .)
    ECHO            reduce using rule 94 (else -> LLAVEDER ELSE LLAVEIZ .)
    FUNCTION        reduce using rule 94 (else -> LLAVEDER ELSE LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 94 (else -> LLAVEDER ELSE LLAVEIZ .)
    RETURN          reduce using rule 94 (else -> LLAVEDER ELSE LLAVEIZ .)
    WHILE           reduce using rule 94 (else -> LLAVEDER ELSE LLAVEIZ .)
    FOR             reduce using rule 94 (else -> LLAVEDER ELSE LLAVEIZ .)
    IF              reduce using rule 94 (else -> LLAVEDER ELSE LLAVEIZ .)
    ELSEIF          reduce using rule 94 (else -> LLAVEDER ELSE LLAVEIZ .)
    ELSE            reduce using rule 94 (else -> LLAVEDER ELSE LLAVEIZ .)
    FOREACH         reduce using rule 94 (else -> LLAVEDER ELSE LLAVEIZ .)
    SWITCH          reduce using rule 94 (else -> LLAVEDER ELSE LLAVEIZ .)
    CADENA          reduce using rule 94 (else -> LLAVEDER ELSE LLAVEIZ .)
    BOOLEAN         reduce using rule 94 (else -> LLAVEDER ELSE LLAVEIZ .)
    ENTERO          reduce using rule 94 (else -> LLAVEDER ELSE LLAVEIZ .)
    RESTA           reduce using rule 94 (else -> LLAVEDER ELSE LLAVEIZ .)
    FLOTANTE        reduce using rule 94 (else -> LLAVEDER ELSE LLAVEIZ .)
    $end            reduce using rule 94 (else -> LLAVEDER ELSE LLAVEIZ .)


state 128

    (63) print -> PRINT PARENIZ valores . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 168


state 129

    (65) print -> PRINT PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 169


state 130

    (64) print -> PRINT valor PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 64 (print -> PRINT valor PUNTOCOMA .)
    COMENTARIO      reduce using rule 64 (print -> PRINT valor PUNTOCOMA .)
    LLAVEDER        reduce using rule 64 (print -> PRINT valor PUNTOCOMA .)
    PRINT           reduce using rule 64 (print -> PRINT valor PUNTOCOMA .)
    ECHO            reduce using rule 64 (print -> PRINT valor PUNTOCOMA .)
    FUNCTION        reduce using rule 64 (print -> PRINT valor PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 64 (print -> PRINT valor PUNTOCOMA .)
    RETURN          reduce using rule 64 (print -> PRINT valor PUNTOCOMA .)
    WHILE           reduce using rule 64 (print -> PRINT valor PUNTOCOMA .)
    FOR             reduce using rule 64 (print -> PRINT valor PUNTOCOMA .)
    IF              reduce using rule 64 (print -> PRINT valor PUNTOCOMA .)
    ELSEIF          reduce using rule 64 (print -> PRINT valor PUNTOCOMA .)
    ELSE            reduce using rule 64 (print -> PRINT valor PUNTOCOMA .)
    FOREACH         reduce using rule 64 (print -> PRINT valor PUNTOCOMA .)
    SWITCH          reduce using rule 64 (print -> PRINT valor PUNTOCOMA .)
    CADENA          reduce using rule 64 (print -> PRINT valor PUNTOCOMA .)
    BOOLEAN         reduce using rule 64 (print -> PRINT valor PUNTOCOMA .)
    ENTERO          reduce using rule 64 (print -> PRINT valor PUNTOCOMA .)
    RESTA           reduce using rule 64 (print -> PRINT valor PUNTOCOMA .)
    FLOTANTE        reduce using rule 64 (print -> PRINT valor PUNTOCOMA .)
    $end            reduce using rule 64 (print -> PRINT valor PUNTOCOMA .)


state 131

    (67) echo -> ECHO valores PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 67 (echo -> ECHO valores PUNTOCOMA .)
    COMENTARIO      reduce using rule 67 (echo -> ECHO valores PUNTOCOMA .)
    LLAVEDER        reduce using rule 67 (echo -> ECHO valores PUNTOCOMA .)
    PRINT           reduce using rule 67 (echo -> ECHO valores PUNTOCOMA .)
    ECHO            reduce using rule 67 (echo -> ECHO valores PUNTOCOMA .)
    FUNCTION        reduce using rule 67 (echo -> ECHO valores PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 67 (echo -> ECHO valores PUNTOCOMA .)
    RETURN          reduce using rule 67 (echo -> ECHO valores PUNTOCOMA .)
    WHILE           reduce using rule 67 (echo -> ECHO valores PUNTOCOMA .)
    FOR             reduce using rule 67 (echo -> ECHO valores PUNTOCOMA .)
    IF              reduce using rule 67 (echo -> ECHO valores PUNTOCOMA .)
    ELSEIF          reduce using rule 67 (echo -> ECHO valores PUNTOCOMA .)
    ELSE            reduce using rule 67 (echo -> ECHO valores PUNTOCOMA .)
    FOREACH         reduce using rule 67 (echo -> ECHO valores PUNTOCOMA .)
    SWITCH          reduce using rule 67 (echo -> ECHO valores PUNTOCOMA .)
    CADENA          reduce using rule 67 (echo -> ECHO valores PUNTOCOMA .)
    BOOLEAN         reduce using rule 67 (echo -> ECHO valores PUNTOCOMA .)
    ENTERO          reduce using rule 67 (echo -> ECHO valores PUNTOCOMA .)
    RESTA           reduce using rule 67 (echo -> ECHO valores PUNTOCOMA .)
    FLOTANTE        reduce using rule 67 (echo -> ECHO valores PUNTOCOMA .)
    $end            reduce using rule 67 (echo -> ECHO valores PUNTOCOMA .)
    BREAK           reduce using rule 67 (echo -> ECHO valores PUNTOCOMA .)


state 132

    (22) valores -> valor COMA . valores
    (21) valores -> . valor
    (22) valores -> . valor COMA valores
    (26) valor -> . NUMERO
    (27) valor -> . CADENA
    (28) valor -> . BOOLEAN
    (29) valor -> . IDENTIFICADOR
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 57
    BOOLEAN         shift and go to state 58
    IDENTIFICADOR   shift and go to state 80
    ENTERO          shift and go to state 49
    RESTA           shift and go to state 61
    FLOTANTE        shift and go to state 59

    valor                          shift and go to state 82
    valores                        shift and go to state 170
    NUMERO                         shift and go to state 79

state 133

    (68) funcion -> FUNCTION NAMEFUNCTION PARENIZ . parametro PARENDER LLAVEIZ
    (69) parametro -> . IDENTIFICADOR
    (70) parametro -> . IDENTIFICADOR COMA parametro

    IDENTIFICADOR   shift and go to state 135

    parametro                      shift and go to state 171

state 134

    (71) funcion -> NAMEFUNCTION PARENIZ parametro . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 172


state 135

    (69) parametro -> IDENTIFICADOR .
    (70) parametro -> IDENTIFICADOR . COMA parametro

    PARENDER        reduce using rule 69 (parametro -> IDENTIFICADOR .)
    COMA            shift and go to state 173


state 136

    (73) return -> RETURN IDENTIFICADOR PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 73 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    COMENTARIO      reduce using rule 73 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    LLAVEDER        reduce using rule 73 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    PRINT           reduce using rule 73 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    ECHO            reduce using rule 73 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    FUNCTION        reduce using rule 73 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 73 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    RETURN          reduce using rule 73 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    WHILE           reduce using rule 73 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    FOR             reduce using rule 73 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    IF              reduce using rule 73 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    ELSEIF          reduce using rule 73 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    ELSE            reduce using rule 73 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    FOREACH         reduce using rule 73 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    SWITCH          reduce using rule 73 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    CADENA          reduce using rule 73 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    BOOLEAN         reduce using rule 73 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    ENTERO          reduce using rule 73 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    RESTA           reduce using rule 73 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    FLOTANTE        reduce using rule 73 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    $end            reduce using rule 73 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)


state 137

    (81) while -> WHILE PARENIZ comparaciones . PARENDER LLAVEIZ

    PARENDER        shift and go to state 174


state 138

    (82) for -> FOR PARENIZ IDENTIFICADOR . ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    ASIGNAR         shift and go to state 175


state 139

    (88) if -> IF PARENIZ comparaciones . PARENDER LLAVEIZ

    PARENDER        shift and go to state 176


state 140

    (89) if -> IF PARENIZ IDENTIFICADOR . PARENDER LLAVEIZ
    (38) variable -> IDENTIFICADOR .
    (29) valor -> IDENTIFICADOR .

    PARENDER        shift and go to state 177
    MAYORQUE        reduce using rule 38 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 38 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 38 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 38 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 29 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 29 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 29 (valor -> IDENTIFICADOR .)


state 141

    (92) elseif -> ELSEIF PARENIZ comparaciones . PARENDER LLAVEIZ

    PARENDER        shift and go to state 178


state 142

    (93) elseif -> ELSEIF PARENIZ IDENTIFICADOR . PARENDER LLAVEIZ
    (38) variable -> IDENTIFICADOR .
    (29) valor -> IDENTIFICADOR .

    PARENDER        shift and go to state 179
    MAYORQUE        reduce using rule 38 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 38 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 38 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 38 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 29 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 29 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 29 (valor -> IDENTIFICADOR .)


state 143

    (83) foreach -> FOREACH PARENIZ IDENTIFICADOR . AS IDENTIFICADOR PARENDER LLAVEIZ

    AS              shift and go to state 180


state 144

    (84) switch -> SWITCH PARENIZ valor . PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER

    PARENDER        shift and go to state 181


state 145

    (41) comparacion -> variable comparadorNum variable .

    OPERADOR        reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    AND             reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    OR              reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    IDENTIFICADOR   reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    COMENTARIO      reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    LLAVEDER        reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    PRINT           reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    ECHO            reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    FUNCTION        reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    NAMEFUNCTION    reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    RETURN          reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    WHILE           reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    FOR             reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    IF              reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    ELSEIF          reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    ELSE            reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    FOREACH         reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    SWITCH          reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    CADENA          reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    BOOLEAN         reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    ENTERO          reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    RESTA           reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    FLOTANTE        reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    $end            reduce using rule 41 (comparacion -> variable comparadorNum variable .)
    PARENDER        reduce using rule 41 (comparacion -> variable comparadorNum variable .)


state 146

    (38) variable -> IDENTIFICADOR .

    OPERADOR        reduce using rule 38 (variable -> IDENTIFICADOR .)
    AND             reduce using rule 38 (variable -> IDENTIFICADOR .)
    OR              reduce using rule 38 (variable -> IDENTIFICADOR .)
    IDENTIFICADOR   reduce using rule 38 (variable -> IDENTIFICADOR .)
    COMENTARIO      reduce using rule 38 (variable -> IDENTIFICADOR .)
    LLAVEDER        reduce using rule 38 (variable -> IDENTIFICADOR .)
    PRINT           reduce using rule 38 (variable -> IDENTIFICADOR .)
    ECHO            reduce using rule 38 (variable -> IDENTIFICADOR .)
    FUNCTION        reduce using rule 38 (variable -> IDENTIFICADOR .)
    NAMEFUNCTION    reduce using rule 38 (variable -> IDENTIFICADOR .)
    RETURN          reduce using rule 38 (variable -> IDENTIFICADOR .)
    WHILE           reduce using rule 38 (variable -> IDENTIFICADOR .)
    FOR             reduce using rule 38 (variable -> IDENTIFICADOR .)
    IF              reduce using rule 38 (variable -> IDENTIFICADOR .)
    ELSEIF          reduce using rule 38 (variable -> IDENTIFICADOR .)
    ELSE            reduce using rule 38 (variable -> IDENTIFICADOR .)
    FOREACH         reduce using rule 38 (variable -> IDENTIFICADOR .)
    SWITCH          reduce using rule 38 (variable -> IDENTIFICADOR .)
    CADENA          reduce using rule 38 (variable -> IDENTIFICADOR .)
    BOOLEAN         reduce using rule 38 (variable -> IDENTIFICADOR .)
    ENTERO          reduce using rule 38 (variable -> IDENTIFICADOR .)
    RESTA           reduce using rule 38 (variable -> IDENTIFICADOR .)
    FLOTANTE        reduce using rule 38 (variable -> IDENTIFICADOR .)
    $end            reduce using rule 38 (variable -> IDENTIFICADOR .)
    PARENDER        reduce using rule 38 (variable -> IDENTIFICADOR .)
    SUMA            reduce using rule 38 (variable -> IDENTIFICADOR .)
    MULT            reduce using rule 38 (variable -> IDENTIFICADOR .)
    DIVISION        reduce using rule 38 (variable -> IDENTIFICADOR .)
    DIVISIONENTERA  reduce using rule 38 (variable -> IDENTIFICADOR .)
    MODULO          reduce using rule 38 (variable -> IDENTIFICADOR .)
    POTENCIA        reduce using rule 38 (variable -> IDENTIFICADOR .)


state 147

    (54) operacion -> variable operadorAritmetico variable .

    SUMA            reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    RESTA           reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    MULT            reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    DIVISION        reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    DIVISIONENTERA  reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    MODULO          reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    POTENCIA        reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    IDENTIFICADOR   reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    COMENTARIO      reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    LLAVEDER        reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    PRINT           reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    ECHO            reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    FUNCTION        reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    NAMEFUNCTION    reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    RETURN          reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    WHILE           reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    FOR             reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    IF              reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    ELSEIF          reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    ELSE            reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    FOREACH         reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    SWITCH          reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    CADENA          reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    BOOLEAN         reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    ENTERO          reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    FLOTANTE        reduce using rule 54 (operacion -> variable operadorAritmetico variable .)
    $end            reduce using rule 54 (operacion -> variable operadorAritmetico variable .)


state 148

    (53) operaciones -> IDENTIFICADOR ASIGNAR . operaciones
    (51) operaciones -> . operacion
    (52) operaciones -> . operacion operadorAritmetico operaciones
    (53) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (54) operacion -> . variable operadorAritmetico variable
    (37) variable -> . NUMERO
    (38) variable -> . IDENTIFICADOR
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 124
    ENTERO          shift and go to state 49
    RESTA           shift and go to state 61
    FLOTANTE        shift and go to state 59

    operaciones                    shift and go to state 101
    operacion                      shift and go to state 39
    variable                       shift and go to state 109
    NUMERO                         shift and go to state 125

state 149

    (62) asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 62 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    COMENTARIO      reduce using rule 62 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    LLAVEDER        reduce using rule 62 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    PRINT           reduce using rule 62 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    ECHO            reduce using rule 62 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    FUNCTION        reduce using rule 62 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 62 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    RETURN          reduce using rule 62 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    WHILE           reduce using rule 62 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    FOR             reduce using rule 62 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    IF              reduce using rule 62 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    ELSEIF          reduce using rule 62 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    ELSE            reduce using rule 62 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    FOREACH         reduce using rule 62 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    SWITCH          reduce using rule 62 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    CADENA          reduce using rule 62 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    BOOLEAN         reduce using rule 62 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    ENTERO          reduce using rule 62 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    RESTA           reduce using rule 62 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    FLOTANTE        reduce using rule 62 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    $end            reduce using rule 62 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)


state 150

    (50) longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ . valor PARENDER PUNTOCOMA
    (26) valor -> . NUMERO
    (27) valor -> . CADENA
    (28) valor -> . BOOLEAN
    (29) valor -> . IDENTIFICADOR
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 57
    BOOLEAN         shift and go to state 58
    IDENTIFICADOR   shift and go to state 80
    ENTERO          shift and go to state 49
    RESTA           shift and go to state 61
    FLOTANTE        shift and go to state 59

    valor                          shift and go to state 182
    NUMERO                         shift and go to state 79

state 151

    (66) input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ . FLUJOS PARENDER PUNTOCOMA

    FLUJOS          shift and go to state 183


state 152

    (72) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ . parametro PARENDER PUNTOCOMA
    (69) parametro -> . IDENTIFICADOR
    (70) parametro -> . IDENTIFICADOR COMA parametro

    IDENTIFICADOR   shift and go to state 135

    parametro                      shift and go to state 184

state 153

    (106) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 185


state 154

    (101) stack -> IDENTIFICADOR ASIGNAR NEW STACK . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 186


state 155

    (114) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ . PARENDER PUNTOCOMA
    (115) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ . valores PARENDER PUNTOCOMA
    (21) valores -> . valor
    (22) valores -> . valor COMA valores
    (26) valor -> . NUMERO
    (27) valor -> . CADENA
    (28) valor -> . BOOLEAN
    (29) valor -> . IDENTIFICADOR
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE

    PARENDER        shift and go to state 187
    CADENA          shift and go to state 57
    BOOLEAN         shift and go to state 58
    IDENTIFICADOR   shift and go to state 80
    ENTERO          shift and go to state 49
    RESTA           shift and go to state 61
    FLOTANTE        shift and go to state 59

    valores                        shift and go to state 188
    valor                          shift and go to state 82
    NUMERO                         shift and go to state 79

state 156

    (116) array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores . CORCHETEDER PUNTOCOMA

    CORCHETEDER     shift and go to state 189


state 157

    (107) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ . valor PARENDER PUNTOCOMA
    (26) valor -> . NUMERO
    (27) valor -> . CADENA
    (28) valor -> . BOOLEAN
    (29) valor -> . IDENTIFICADOR
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 57
    BOOLEAN         shift and go to state 58
    IDENTIFICADOR   shift and go to state 80
    ENTERO          shift and go to state 49
    RESTA           shift and go to state 61
    FLOTANTE        shift and go to state 59

    valor                          shift and go to state 190
    NUMERO                         shift and go to state 79

state 158

    (108) queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 191


state 159

    (109) queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 192


state 160

    (110) queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ . PARENDER PUNTOCOMA
    (102) stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 193


state 161

    (111) queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ . PARENDER PUNTOCOMA
    (103) stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 194


state 162

    (112) queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ . PARENDER PUNTOCOMA
    (104) stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 195


state 163

    (113) queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ . PARENDER
    (105) stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ . PARENDER

    PARENDER        shift and go to state 196


state 164

    (99) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ . valor PARENDER PUNTOCOMA
    (26) valor -> . NUMERO
    (27) valor -> . CADENA
    (28) valor -> . BOOLEAN
    (29) valor -> . IDENTIFICADOR
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 57
    BOOLEAN         shift and go to state 58
    IDENTIFICADOR   shift and go to state 80
    ENTERO          shift and go to state 49
    RESTA           shift and go to state 61
    FLOTANTE        shift and go to state 59

    valor                          shift and go to state 197
    NUMERO                         shift and go to state 79

state 165

    (100) stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 198


state 166

    (90) elseif -> LLAVEDER ELSEIF PARENIZ comparaciones . PARENDER LLAVEIZ

    PARENDER        shift and go to state 199


state 167

    (91) elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR . PARENDER LLAVEIZ
    (38) variable -> IDENTIFICADOR .
    (29) valor -> IDENTIFICADOR .

    PARENDER        shift and go to state 200
    MAYORQUE        reduce using rule 38 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 38 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 38 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 38 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 29 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 29 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 29 (valor -> IDENTIFICADOR .)


state 168

    (63) print -> PRINT PARENIZ valores PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 201


state 169

    (65) print -> PRINT PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 65 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 65 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 65 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 65 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 65 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 65 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 65 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 65 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 65 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 65 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 65 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 65 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 65 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 65 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 65 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 65 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 65 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 65 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 65 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 65 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 65 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)


state 170

    (22) valores -> valor COMA valores .

    PUNTOCOMA       reduce using rule 22 (valores -> valor COMA valores .)
    PARENDER        reduce using rule 22 (valores -> valor COMA valores .)
    CORCHETEDER     reduce using rule 22 (valores -> valor COMA valores .)


state 171

    (68) funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro . PARENDER LLAVEIZ

    PARENDER        shift and go to state 202


state 172

    (71) funcion -> NAMEFUNCTION PARENIZ parametro PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 203


state 173

    (70) parametro -> IDENTIFICADOR COMA . parametro
    (69) parametro -> . IDENTIFICADOR
    (70) parametro -> . IDENTIFICADOR COMA parametro

    IDENTIFICADOR   shift and go to state 135

    parametro                      shift and go to state 204

state 174

    (81) while -> WHILE PARENIZ comparaciones PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 205


state 175

    (82) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR . ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    ENTERO          shift and go to state 206


state 176

    (88) if -> IF PARENIZ comparaciones PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 207


state 177

    (89) if -> IF PARENIZ IDENTIFICADOR PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 208


state 178

    (92) elseif -> ELSEIF PARENIZ comparaciones PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 209


state 179

    (93) elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 210


state 180

    (83) foreach -> FOREACH PARENIZ IDENTIFICADOR AS . IDENTIFICADOR PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 211


state 181

    (84) switch -> SWITCH PARENIZ valor PARENDER . LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER

    LLAVEIZ         shift and go to state 212


state 182

    (50) longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 213


state 183

    (66) input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 214


state 184

    (72) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 215


state 185

    (106) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 216


state 186

    (101) stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 217


state 187

    (114) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 218


state 188

    (115) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 219


state 189

    (116) array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 220


state 190

    (107) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 221


state 191

    (108) queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 222


state 192

    (109) queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 223


state 193

    (110) queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER . PUNTOCOMA
    (102) stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 224


state 194

    (111) queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER . PUNTOCOMA
    (103) stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 225


state 195

    (112) queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER . PUNTOCOMA
    (104) stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 226


state 196

    (113) queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .
    (105) stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for PRINT resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for ECHO resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for NAMEFUNCTION resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for RETURN resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for WHILE resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for FOR resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for IF resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for ELSE resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for FOREACH resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for SWITCH resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for CADENA resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for ENTERO resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for RESTA resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for $end resolved using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    IDENTIFICADOR   reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    COMENTARIO      reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    LLAVEDER        reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    PRINT           reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    ECHO            reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    FUNCTION        reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    NAMEFUNCTION    reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    RETURN          reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    WHILE           reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    FOR             reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    IF              reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    ELSEIF          reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    ELSE            reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    FOREACH         reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    SWITCH          reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    CADENA          reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    BOOLEAN         reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    ENTERO          reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    RESTA           reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    FLOTANTE        reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    $end            reduce using rule 105 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)

  ! IDENTIFICADOR   [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! COMENTARIO      [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! LLAVEDER        [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! PRINT           [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! ECHO            [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! FUNCTION        [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! NAMEFUNCTION    [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! RETURN          [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! WHILE           [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! FOR             [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! IF              [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! ELSEIF          [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! ELSE            [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! FOREACH         [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! SWITCH          [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! CADENA          [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! BOOLEAN         [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! ENTERO          [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! RESTA           [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! FLOTANTE        [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! $end            [ reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]


state 197

    (99) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 227


state 198

    (100) stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 228


state 199

    (90) elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 229


state 200

    (91) elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 230


state 201

    (63) print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 63 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 63 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 63 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 63 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 63 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 63 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 63 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 63 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 63 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    FOR             reduce using rule 63 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    IF              reduce using rule 63 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 63 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 63 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 63 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 63 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 63 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 63 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 63 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 63 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 63 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    $end            reduce using rule 63 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)


state 202

    (68) funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 231


state 203

    (71) funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 71 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 71 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 71 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 71 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 71 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 71 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 71 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 71 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 71 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FOR             reduce using rule 71 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    IF              reduce using rule 71 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 71 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 71 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 71 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 71 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 71 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 71 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 71 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 71 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 71 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    $end            reduce using rule 71 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)


state 204

    (70) parametro -> IDENTIFICADOR COMA parametro .

    PARENDER        reduce using rule 70 (parametro -> IDENTIFICADOR COMA parametro .)


state 205

    (81) while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 81 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 81 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 81 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    PRINT           reduce using rule 81 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    ECHO            reduce using rule 81 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 81 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 81 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    RETURN          reduce using rule 81 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    WHILE           reduce using rule 81 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOR             reduce using rule 81 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    IF              reduce using rule 81 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 81 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSE            reduce using rule 81 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 81 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 81 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    CADENA          reduce using rule 81 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 81 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 81 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    RESTA           reduce using rule 81 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 81 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    $end            reduce using rule 81 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)


state 206

    (82) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO . PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    PUNTOCOMA       shift and go to state 232


state 207

    (88) if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 88 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 88 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 88 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    PRINT           reduce using rule 88 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ECHO            reduce using rule 88 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 88 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 88 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RETURN          reduce using rule 88 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    WHILE           reduce using rule 88 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOR             reduce using rule 88 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    IF              reduce using rule 88 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 88 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSE            reduce using rule 88 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 88 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 88 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    CADENA          reduce using rule 88 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 88 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 88 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RESTA           reduce using rule 88 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 88 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    $end            reduce using rule 88 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)


state 208

    (89) if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 89 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 89 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 89 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    PRINT           reduce using rule 89 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ECHO            reduce using rule 89 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 89 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 89 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RETURN          reduce using rule 89 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    WHILE           reduce using rule 89 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOR             reduce using rule 89 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    IF              reduce using rule 89 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 89 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSE            reduce using rule 89 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 89 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 89 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    CADENA          reduce using rule 89 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 89 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 89 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RESTA           reduce using rule 89 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 89 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    $end            reduce using rule 89 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)


state 209

    (92) elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 92 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 92 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 92 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    PRINT           reduce using rule 92 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ECHO            reduce using rule 92 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 92 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 92 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RETURN          reduce using rule 92 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    WHILE           reduce using rule 92 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOR             reduce using rule 92 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    IF              reduce using rule 92 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 92 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSE            reduce using rule 92 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 92 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 92 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    CADENA          reduce using rule 92 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 92 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 92 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RESTA           reduce using rule 92 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 92 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    $end            reduce using rule 92 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)


state 210

    (93) elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 93 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 93 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 93 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    PRINT           reduce using rule 93 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ECHO            reduce using rule 93 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 93 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 93 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RETURN          reduce using rule 93 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    WHILE           reduce using rule 93 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOR             reduce using rule 93 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    IF              reduce using rule 93 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 93 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSE            reduce using rule 93 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 93 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 93 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    CADENA          reduce using rule 93 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 93 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 93 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RESTA           reduce using rule 93 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 93 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    $end            reduce using rule 93 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)


state 211

    (83) foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR . PARENDER LLAVEIZ

    PARENDER        shift and go to state 233


state 212

    (84) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ . casos DEFAULT DOSPUNTOS echo LLAVEDER
    (85) casos -> . caso
    (86) casos -> . caso casos
    (87) caso -> . CASE valor DOSPUNTOS echo BREAK PUNTOCOMA

    CASE            shift and go to state 236

    casos                          shift and go to state 234
    caso                           shift and go to state 235

state 213

    (50) longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 237


state 214

    (66) input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 238


state 215

    (72) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 239


state 216

    (106) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 240


state 217

    (101) stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 241


state 218

    (114) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 114 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 114 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 114 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 114 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 114 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 114 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 114 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 114 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 114 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 114 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 114 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 114 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 114 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 114 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 114 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 114 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 114 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 114 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 114 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 114 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 114 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)


state 219

    (115) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 242


state 220

    (116) array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    PRINT           reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    ECHO            reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    FUNCTION        reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    RETURN          reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    WHILE           reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    FOR             reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    IF              reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    ELSEIF          reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    ELSE            reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    FOREACH         reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    SWITCH          reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    CADENA          reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    ENTERO          reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    RESTA           reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    $end            reduce using rule 116 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)


state 221

    (107) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 243


state 222

    (108) queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)


state 223

    (109) queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 109 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)


state 224

    (110) queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .
    (102) stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ECHO resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for NAMEFUNCTION resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RETURN resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOREACH resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for SWITCH resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for CADENA resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RESTA resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for $end resolved using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 102 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)

  ! IDENTIFICADOR   [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! COMENTARIO      [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! LLAVEDER        [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! PRINT           [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ECHO            [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FUNCTION        [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! NAMEFUNCTION    [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! RETURN          [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! WHILE           [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOR             [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! IF              [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSEIF          [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSE            [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOREACH         [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! SWITCH          [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! CADENA          [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! BOOLEAN         [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ENTERO          [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! RESTA           [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FLOTANTE        [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! $end            [ reduce using rule 110 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]


state 225

    (111) queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .
    (103) stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ECHO resolved using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for NAMEFUNCTION resolved using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RETURN resolved using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOREACH resolved using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for SWITCH resolved using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for CADENA resolved using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RESTA resolved using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for $end resolved using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)

  ! IDENTIFICADOR   [ reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! COMENTARIO      [ reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! LLAVEDER        [ reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! PRINT           [ reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! ECHO            [ reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! FUNCTION        [ reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! NAMEFUNCTION    [ reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! RETURN          [ reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! WHILE           [ reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOR             [ reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! IF              [ reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSEIF          [ reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSE            [ reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOREACH         [ reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! SWITCH          [ reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! CADENA          [ reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! BOOLEAN         [ reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! ENTERO          [ reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! RESTA           [ reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! FLOTANTE        [ reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! $end            [ reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]


state 226

    (112) queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .
    (104) stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ECHO resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for NAMEFUNCTION resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RETURN resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOREACH resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for SWITCH resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for CADENA resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RESTA resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for $end resolved using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)

  ! IDENTIFICADOR   [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! COMENTARIO      [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! LLAVEDER        [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! PRINT           [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ECHO            [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FUNCTION        [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! NAMEFUNCTION    [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! RETURN          [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! WHILE           [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOR             [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! IF              [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSEIF          [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSE            [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOREACH         [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! SWITCH          [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! CADENA          [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! BOOLEAN         [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ENTERO          [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! RESTA           [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FLOTANTE        [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! $end            [ reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]


state 227

    (99) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 244


state 228

    (100) stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)


state 229

    (90) elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 90 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 90 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 90 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    PRINT           reduce using rule 90 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ECHO            reduce using rule 90 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 90 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 90 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RETURN          reduce using rule 90 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    WHILE           reduce using rule 90 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOR             reduce using rule 90 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    IF              reduce using rule 90 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 90 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSE            reduce using rule 90 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 90 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 90 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    CADENA          reduce using rule 90 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 90 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 90 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RESTA           reduce using rule 90 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 90 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    $end            reduce using rule 90 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)


state 230

    (91) elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 91 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 91 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 91 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    PRINT           reduce using rule 91 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ECHO            reduce using rule 91 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 91 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 91 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RETURN          reduce using rule 91 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    WHILE           reduce using rule 91 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOR             reduce using rule 91 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    IF              reduce using rule 91 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 91 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSE            reduce using rule 91 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 91 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 91 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    CADENA          reduce using rule 91 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 91 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 91 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RESTA           reduce using rule 91 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 91 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    $end            reduce using rule 91 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)


state 231

    (68) funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 68 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 68 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 68 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    PRINT           reduce using rule 68 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    ECHO            reduce using rule 68 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 68 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 68 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    RETURN          reduce using rule 68 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    WHILE           reduce using rule 68 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    FOR             reduce using rule 68 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    IF              reduce using rule 68 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 68 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    ELSE            reduce using rule 68 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 68 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 68 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    CADENA          reduce using rule 68 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 68 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 68 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    RESTA           reduce using rule 68 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 68 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    $end            reduce using rule 68 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)


state 232

    (82) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA . IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 245


state 233

    (83) foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 246


state 234

    (84) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos . DEFAULT DOSPUNTOS echo LLAVEDER

    DEFAULT         shift and go to state 247


state 235

    (85) casos -> caso .
    (86) casos -> caso . casos
    (85) casos -> . caso
    (86) casos -> . caso casos
    (87) caso -> . CASE valor DOSPUNTOS echo BREAK PUNTOCOMA

    DEFAULT         reduce using rule 85 (casos -> caso .)
    CASE            shift and go to state 236

    caso                           shift and go to state 235
    casos                          shift and go to state 248

state 236

    (87) caso -> CASE . valor DOSPUNTOS echo BREAK PUNTOCOMA
    (26) valor -> . NUMERO
    (27) valor -> . CADENA
    (28) valor -> . BOOLEAN
    (29) valor -> . IDENTIFICADOR
    (23) NUMERO -> . ENTERO
    (24) NUMERO -> . RESTA ENTERO
    (25) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 57
    BOOLEAN         shift and go to state 58
    IDENTIFICADOR   shift and go to state 80
    ENTERO          shift and go to state 49
    RESTA           shift and go to state 61
    FLOTANTE        shift and go to state 59

    valor                          shift and go to state 249
    NUMERO                         shift and go to state 79

state 237

    (50) longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 50 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 50 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 50 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 50 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 50 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 50 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 50 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 50 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 50 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    FOR             reduce using rule 50 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    IF              reduce using rule 50 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 50 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 50 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 50 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 50 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 50 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 50 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 50 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 50 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 50 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    $end            reduce using rule 50 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)


state 238

    (66) input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 66 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 66 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 66 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 66 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 66 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 66 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 66 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 66 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 66 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    FOR             reduce using rule 66 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    IF              reduce using rule 66 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 66 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 66 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 66 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 66 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 66 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 66 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 66 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 66 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 66 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    $end            reduce using rule 66 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)


state 239

    (72) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 72 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 72 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 72 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 72 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 72 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 72 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 72 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 72 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 72 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FOR             reduce using rule 72 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    IF              reduce using rule 72 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 72 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 72 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 72 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 72 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 72 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 72 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 72 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 72 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 72 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    $end            reduce using rule 72 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)


state 240

    (106) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 106 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 106 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 106 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 106 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 106 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 106 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 106 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 106 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 106 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 106 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 106 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 106 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 106 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 106 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 106 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 106 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 106 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 106 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 106 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 106 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 106 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)


state 241

    (101) stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 101 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 101 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 101 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 101 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 101 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 101 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 101 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 101 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 101 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 101 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 101 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 101 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 101 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 101 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 101 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 101 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 101 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 101 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 101 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 101 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 101 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)


state 242

    (115) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 115 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 115 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 115 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 115 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 115 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 115 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 115 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 115 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 115 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    FOR             reduce using rule 115 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    IF              reduce using rule 115 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 115 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 115 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 115 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 115 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 115 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 115 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 115 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 115 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 115 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    $end            reduce using rule 115 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)


state 243

    (107) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    FOR             reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    IF              reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    $end            reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)


state 244

    (99) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    FOR             reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    IF              reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    $end            reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)


state 245

    (82) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR . comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ
    (30) comparadorNum -> . MAYORQUE
    (31) comparadorNum -> . MAYORIGUALQUE
    (32) comparadorNum -> . MENORQUE
    (33) comparadorNum -> . MENORIGUALQUE

    MAYORQUE        shift and go to state 95
    MAYORIGUALQUE   shift and go to state 96
    MENORQUE        shift and go to state 97
    MENORIGUALQUE   shift and go to state 98

    comparadorNum                  shift and go to state 250

state 246

    (83) foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 83 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 83 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 83 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    PRINT           reduce using rule 83 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    ECHO            reduce using rule 83 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 83 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 83 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    RETURN          reduce using rule 83 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    WHILE           reduce using rule 83 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    FOR             reduce using rule 83 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    IF              reduce using rule 83 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 83 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSE            reduce using rule 83 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 83 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 83 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    CADENA          reduce using rule 83 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 83 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 83 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    RESTA           reduce using rule 83 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 83 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    $end            reduce using rule 83 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)


state 247

    (84) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT . DOSPUNTOS echo LLAVEDER

    DOSPUNTOS       shift and go to state 251


state 248

    (86) casos -> caso casos .

    DEFAULT         reduce using rule 86 (casos -> caso casos .)


state 249

    (87) caso -> CASE valor . DOSPUNTOS echo BREAK PUNTOCOMA

    DOSPUNTOS       shift and go to state 252


state 250

    (82) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum . ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    ENTERO          shift and go to state 253


state 251

    (84) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS . echo LLAVEDER
    (67) echo -> . ECHO valores PUNTOCOMA

    ECHO            shift and go to state 43

    echo                           shift and go to state 254

state 252

    (87) caso -> CASE valor DOSPUNTOS . echo BREAK PUNTOCOMA
    (67) echo -> . ECHO valores PUNTOCOMA

    ECHO            shift and go to state 43

    echo                           shift and go to state 255

state 253

    (82) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO . PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    PUNTOCOMA       shift and go to state 256


state 254

    (84) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo . LLAVEDER

    LLAVEDER        shift and go to state 257


state 255

    (87) caso -> CASE valor DOSPUNTOS echo . BREAK PUNTOCOMA

    BREAK           shift and go to state 258


state 256

    (82) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA . IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 259


state 257

    (84) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .

    IDENTIFICADOR   reduce using rule 84 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    COMENTARIO      reduce using rule 84 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    LLAVEDER        reduce using rule 84 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    PRINT           reduce using rule 84 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    ECHO            reduce using rule 84 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    FUNCTION        reduce using rule 84 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    NAMEFUNCTION    reduce using rule 84 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    RETURN          reduce using rule 84 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    WHILE           reduce using rule 84 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    FOR             reduce using rule 84 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    IF              reduce using rule 84 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    ELSEIF          reduce using rule 84 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    ELSE            reduce using rule 84 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    FOREACH         reduce using rule 84 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    SWITCH          reduce using rule 84 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    CADENA          reduce using rule 84 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    BOOLEAN         reduce using rule 84 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    ENTERO          reduce using rule 84 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    RESTA           reduce using rule 84 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    FLOTANTE        reduce using rule 84 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    $end            reduce using rule 84 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)


state 258

    (87) caso -> CASE valor DOSPUNTOS echo BREAK . PUNTOCOMA

    PUNTOCOMA       shift and go to state 260


state 259

    (82) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR . incrementoDecremento PARENDER LLAVEIZ
    (43) incrementoDecremento -> . INCREMENTO
    (44) incrementoDecremento -> . DECREMENTO
    (45) incrementoDecremento -> . SUMA ENTERO
    (46) incrementoDecremento -> . RESTA ENTERO

    INCREMENTO      shift and go to state 262
    DECREMENTO      shift and go to state 263
    SUMA            shift and go to state 264
    RESTA           shift and go to state 265

    incrementoDecremento           shift and go to state 261

state 260

    (87) caso -> CASE valor DOSPUNTOS echo BREAK PUNTOCOMA .

    CASE            reduce using rule 87 (caso -> CASE valor DOSPUNTOS echo BREAK PUNTOCOMA .)
    DEFAULT         reduce using rule 87 (caso -> CASE valor DOSPUNTOS echo BREAK PUNTOCOMA .)


state 261

    (82) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento . PARENDER LLAVEIZ

    PARENDER        shift and go to state 266


state 262

    (43) incrementoDecremento -> INCREMENTO .

    PARENDER        reduce using rule 43 (incrementoDecremento -> INCREMENTO .)


state 263

    (44) incrementoDecremento -> DECREMENTO .

    PARENDER        reduce using rule 44 (incrementoDecremento -> DECREMENTO .)


state 264

    (45) incrementoDecremento -> SUMA . ENTERO

    ENTERO          shift and go to state 267


state 265

    (46) incrementoDecremento -> RESTA . ENTERO

    ENTERO          shift and go to state 268


state 266

    (82) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 269


state 267

    (45) incrementoDecremento -> SUMA ENTERO .

    PARENDER        reduce using rule 45 (incrementoDecremento -> SUMA ENTERO .)


state 268

    (46) incrementoDecremento -> RESTA ENTERO .

    PARENDER        reduce using rule 46 (incrementoDecremento -> RESTA ENTERO .)


state 269

    (82) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 82 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 82 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 82 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    PRINT           reduce using rule 82 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    ECHO            reduce using rule 82 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 82 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 82 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    RETURN          reduce using rule 82 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    WHILE           reduce using rule 82 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    FOR             reduce using rule 82 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    IF              reduce using rule 82 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 82 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    ELSE            reduce using rule 82 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 82 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 82 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    CADENA          reduce using rule 82 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 82 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 82 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    RESTA           reduce using rule 82 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 82 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    $end            reduce using rule 82 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RESTA in state 39 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 41 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 41 resolved as shift
WARNING: reduce/reduce conflict in state 196 resolved using rule (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER)
WARNING: rejected rule (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER) in state 196
WARNING: reduce/reduce conflict in state 224 resolved using rule (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA)
WARNING: rejected rule (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA) in state 224
WARNING: reduce/reduce conflict in state 225 resolved using rule (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA)
WARNING: rejected rule (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA) in state 225
WARNING: reduce/reduce conflict in state 226 resolved using rule (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA)
WARNING: rejected rule (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA) in state 226
WARNING: Rule (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER) is never reduced
WARNING: Rule (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA) is never reduced
WARNING: Rule (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA) is never reduced
WARNING: Rule (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA) is never reduced
