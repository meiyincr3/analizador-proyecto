Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ANDEQUAL
    ASIGNACION
    PUNTO
    SIGNOID

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> bloques
Rule 2     sentencias -> operadorAritmetico
Rule 3     bloques -> bloque
Rule 4     bloques -> bloque bloques
Rule 5     bloque -> impresion
Rule 6     bloque -> asignacion
Rule 7     bloque -> funciones
Rule 8     bloque -> estructurasControl
Rule 9     bloque -> estructurasDeDatos
Rule 10    bloque -> comparaciones
Rule 11    bloque -> operaciones
Rule 12    bloque -> comentario
Rule 13    impresion -> print
Rule 14    impresion -> echo
Rule 15    funciones -> funcion
Rule 16    funciones -> return
Rule 17    comentario -> COMENTARIO
Rule 18    comentario -> LLAVEDER
Rule 19    valores -> valor
Rule 20    valores -> valor COMA valores
Rule 21    NUMERO -> ENTERO
Rule 22    NUMERO -> FLOTANTE
Rule 23    valor -> NUMERO
Rule 24    valor -> CADENA
Rule 25    valor -> BOOLEAN
Rule 26    valor -> IDENTIFICADOR
Rule 27    comparadorNum -> MAYORQUE
Rule 28    comparadorNum -> MAYORIGUALQUE
Rule 29    comparadorNum -> MENORQUE
Rule 30    comparadorNum -> MENORIGUALQUE
Rule 31    comparador -> IDENTICO
Rule 32    comparador -> NOIDENTICO
Rule 33    comparador -> IGUAL
Rule 34    variable -> NUMERO
Rule 35    variable -> IDENTIFICADOR
Rule 36    comparaciones -> comparacion
Rule 37    comparaciones -> comparacion operadores comparaciones
Rule 38    comparacion -> variable comparadorNum variable
Rule 39    comparacion -> valor comparador valor
Rule 40    incrementoDecremento -> INCREMENTO
Rule 41    incrementoDecremento -> DECREMENTO
Rule 42    incrementoDecremento -> SUMA ENTERO
Rule 43    incrementoDecremento -> RESTA ENTERO
Rule 44    operadores -> OPERADOR
Rule 45    operadores -> AND
Rule 46    operadores -> OR
Rule 47    operaciones -> operacion
Rule 48    operaciones -> operacion operadorAritmetico operaciones
Rule 49    operaciones -> IDENTIFICADOR ASIGNAR operaciones
Rule 50    operacion -> variable operadorAritmetico variable
Rule 51    operadorAritmetico -> SUMA
Rule 52    operadorAritmetico -> RESTA
Rule 53    operadorAritmetico -> MULT
Rule 54    operadorAritmetico -> DIVISION
Rule 55    operadorAritmetico -> DIVISIONENTERA
Rule 56    operadorAritmetico -> MODULO
Rule 57    operadorAritmetico -> POTENCIA
Rule 58    asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA
Rule 59    print -> PRINT PARENIZ valores PARENDER PUNTOCOMA
Rule 60    print -> PRINT valor PUNTOCOMA
Rule 61    print -> PRINT PARENIZ PARENDER PUNTOCOMA
Rule 62    echo -> ECHO valores PUNTOCOMA
Rule 63    funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ
Rule 64    parametro -> IDENTIFICADOR
Rule 65    parametro -> IDENTIFICADOR COMA parametro
Rule 66    funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
Rule 67    funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
Rule 68    return -> RETURN IDENTIFICADOR PUNTOCOMA
Rule 69    estructurasControl -> while
Rule 70    estructurasControl -> for
Rule 71    estructurasControl -> if
Rule 72    estructurasControl -> elseif
Rule 73    estructurasControl -> else
Rule 74    estructurasControl -> foreach
Rule 75    estructurasControl -> switch
Rule 76    while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ
Rule 77    for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ
Rule 78    foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ
Rule 79    switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER
Rule 80    casos -> caso
Rule 81    casos -> caso casos
Rule 82    caso -> CASE valor DOSPUNTOS echo BREAK PUNTOCOMA
Rule 83    if -> IF PARENIZ comparaciones PARENDER LLAVEIZ
Rule 84    if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
Rule 85    elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
Rule 86    elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
Rule 87    elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
Rule 88    elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
Rule 89    else -> LLAVEDER ELSE LLAVEIZ
Rule 90    else -> ELSE LLAVEIZ
Rule 91    estructurasDeDatos -> queue
Rule 92    estructurasDeDatos -> stack
Rule 93    estructurasDeDatos -> array
Rule 94    stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA
Rule 95    stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA
Rule 96    stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA
Rule 97    stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
Rule 98    stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
Rule 99    stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
Rule 100   stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
Rule 101   queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA
Rule 102   queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
Rule 103   queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA
Rule 104   queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA
Rule 105   queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
Rule 106   queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
Rule 107   queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
Rule 108   queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
Rule 109   array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA
Rule 110   array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA
Rule 111   array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA
Rule 112   empty -> <empty>

Terminals, with rules where they appear

AND                  : 45
ANDEQUAL             : 
ARRAY                : 109 110
AS                   : 78
ASIGNACION           : 
ASIGNAR              : 49 58 67 77 96 101 109 110 111
BOOLEAN              : 25
BREAK                : 82
CADENA               : 24
CASE                 : 82
COMA                 : 20 65
COMENTARIO           : 17
CORCHETEDER          : 111
CORCHETEIZ           : 111
COUNT                : 103
CURRENT              : 99 107
DECREMENTO           : 41
DEFAULT              : 79
DEQUEUE              : 104
DIVISION             : 54
DIVISIONENTERA       : 55
DOSPUNTOS            : 79 82
ECHO                 : 62
ELSE                 : 89 90
ELSEIF               : 85 86 87 88
ENQUEUE              : 102
ENTERO               : 21 42 43 77 77
FLECHASIMPLE         : 94 95 97 98 99 100 102 103 104 105 106 107 108
FLOTANTE             : 22
FOR                  : 77
FOREACH              : 78
FUNCTION             : 63
IDENTICO             : 31
IDENTIFICADOR        : 26 35 49 58 64 65 67 68 77 77 77 78 78 84 86 88 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111
IF                   : 83 84
IGUAL                : 33
INCREMENTO           : 40
LLAVEDER             : 18 79 85 86 89
LLAVEIZ              : 63 76 77 78 79 83 84 85 86 87 88 89 90
MAYORIGUALQUE        : 28
MAYORQUE             : 27
MENORIGUALQUE        : 30
MENORQUE             : 29
MODULO               : 56
MULT                 : 53
NAMEFUNCTION         : 63 66 67
NEW                  : 96 101
NEXT                 : 97 105
NOIDENTICO           : 32
OPERADOR             : 44
OR                   : 46
PARENDER             : 59 61 63 66 67 76 77 78 79 83 84 85 86 87 88 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110
PARENIZ              : 59 61 63 66 67 76 77 78 79 83 84 85 86 87 88 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110
POP                  : 95
POTENCIA             : 57
PRINT                : 59 60 61
PUNTO                : 
PUNTOCOMA            : 58 59 60 61 62 66 67 68 77 77 82 94 95 96 97 98 99 101 102 103 104 105 106 107 109 110 111
PUSH                 : 94
QUEUE                : 101
RESTA                : 43 52
RETURN               : 68
REWIND               : 98 106
SIGNOID              : 
STACK                : 96
SUMA                 : 42 51
SWITCH               : 79
VALID                : 100 108
WHILE                : 76
error                : 

Nonterminals, with rules where they appear

NUMERO               : 23 34
array                : 93
asignacion           : 6
bloque               : 3 4
bloques              : 1 4
caso                 : 80 81
casos                : 79 81
comentario           : 12
comparacion          : 36 37
comparaciones        : 10 37 76 83 85 87
comparador           : 39
comparadorNum        : 38 77
echo                 : 14 79 82
else                 : 73
elseif               : 72
empty                : 
estructurasControl   : 8
estructurasDeDatos   : 9
for                  : 70
foreach              : 74
funcion              : 15
funciones            : 7
if                   : 71
impresion            : 5
incrementoDecremento : 77
operacion            : 47 48
operaciones          : 11 48 49
operadorAritmetico   : 2 48 50
operadores           : 37
parametro            : 63 65 66 67
print                : 13
queue                : 91
return               : 16
sentencias           : 0
stack                : 92
switch               : 75
valor                : 19 20 39 39 58 60 79 82 94 102
valores              : 20 59 62 110 111
variable             : 38 38 50 50
while                : 69

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . bloques
    (2) sentencias -> . operadorAritmetico
    (3) bloques -> . bloque
    (4) bloques -> . bloque bloques
    (51) operadorAritmetico -> . SUMA
    (52) operadorAritmetico -> . RESTA
    (53) operadorAritmetico -> . MULT
    (54) operadorAritmetico -> . DIVISION
    (55) operadorAritmetico -> . DIVISIONENTERA
    (56) operadorAritmetico -> . MODULO
    (57) operadorAritmetico -> . POTENCIA
    (5) bloque -> . impresion
    (6) bloque -> . asignacion
    (7) bloque -> . funciones
    (8) bloque -> . estructurasControl
    (9) bloque -> . estructurasDeDatos
    (10) bloque -> . comparaciones
    (11) bloque -> . operaciones
    (12) bloque -> . comentario
    (13) impresion -> . print
    (14) impresion -> . echo
    (58) asignacion -> . IDENTIFICADOR ASIGNAR valor PUNTOCOMA
    (15) funciones -> . funcion
    (16) funciones -> . return
    (69) estructurasControl -> . while
    (70) estructurasControl -> . for
    (71) estructurasControl -> . if
    (72) estructurasControl -> . elseif
    (73) estructurasControl -> . else
    (74) estructurasControl -> . foreach
    (75) estructurasControl -> . switch
    (91) estructurasDeDatos -> . queue
    (92) estructurasDeDatos -> . stack
    (93) estructurasDeDatos -> . array
    (36) comparaciones -> . comparacion
    (37) comparaciones -> . comparacion operadores comparaciones
    (47) operaciones -> . operacion
    (48) operaciones -> . operacion operadorAritmetico operaciones
    (49) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (17) comentario -> . COMENTARIO
    (18) comentario -> . LLAVEDER
    (59) print -> . PRINT PARENIZ valores PARENDER PUNTOCOMA
    (60) print -> . PRINT valor PUNTOCOMA
    (61) print -> . PRINT PARENIZ PARENDER PUNTOCOMA
    (62) echo -> . ECHO valores PUNTOCOMA
    (63) funcion -> . FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ
    (66) funcion -> . NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (67) funcion -> . IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (68) return -> . RETURN IDENTIFICADOR PUNTOCOMA
    (76) while -> . WHILE PARENIZ comparaciones PARENDER LLAVEIZ
    (77) for -> . FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ
    (83) if -> . IF PARENIZ comparaciones PARENDER LLAVEIZ
    (84) if -> . IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (85) elseif -> . LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (86) elseif -> . LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (87) elseif -> . ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (88) elseif -> . ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (89) else -> . LLAVEDER ELSE LLAVEIZ
    (90) else -> . ELSE LLAVEIZ
    (78) foreach -> . FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ
    (79) switch -> . SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER
    (101) queue -> . IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA
    (102) queue -> . IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
    (103) queue -> . IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA
    (104) queue -> . IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA
    (105) queue -> . IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (106) queue -> . IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (107) queue -> . IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (108) queue -> . IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
    (94) stack -> . IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA
    (95) stack -> . IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA
    (96) stack -> . IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA
    (97) stack -> . IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (98) stack -> . IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (99) stack -> . IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (100) stack -> . IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
    (109) array -> . IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA
    (110) array -> . IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA
    (111) array -> . IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA
    (38) comparacion -> . variable comparadorNum variable
    (39) comparacion -> . valor comparador valor
    (50) operacion -> . variable operadorAritmetico variable
    (34) variable -> . NUMERO
    (35) variable -> . IDENTIFICADOR
    (23) valor -> . NUMERO
    (24) valor -> . CADENA
    (25) valor -> . BOOLEAN
    (26) valor -> . IDENTIFICADOR
    (21) NUMERO -> . ENTERO
    (22) NUMERO -> . FLOTANTE

    SUMA            shift and go to state 5
    RESTA           shift and go to state 6
    MULT            shift and go to state 7
    DIVISION        shift and go to state 8
    DIVISIONENTERA  shift and go to state 9
    MODULO          shift and go to state 10
    POTENCIA        shift and go to state 11
    IDENTIFICADOR   shift and go to state 22
    COMENTARIO      shift and go to state 38
    LLAVEDER        shift and go to state 39
    PRINT           shift and go to state 40
    ECHO            shift and go to state 41
    FUNCTION        shift and go to state 42
    NAMEFUNCTION    shift and go to state 43
    RETURN          shift and go to state 44
    WHILE           shift and go to state 45
    FOR             shift and go to state 46
    IF              shift and go to state 48
    ELSEIF          shift and go to state 49
    ELSE            shift and go to state 50
    FOREACH         shift and go to state 51
    SWITCH          shift and go to state 52
    CADENA          shift and go to state 55
    BOOLEAN         shift and go to state 56
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 57

    sentencias                     shift and go to state 1
    bloques                        shift and go to state 2
    operadorAritmetico             shift and go to state 3
    bloque                         shift and go to state 4
    impresion                      shift and go to state 12
    asignacion                     shift and go to state 13
    funciones                      shift and go to state 14
    estructurasControl             shift and go to state 15
    estructurasDeDatos             shift and go to state 16
    comparaciones                  shift and go to state 17
    operaciones                    shift and go to state 18
    comentario                     shift and go to state 19
    print                          shift and go to state 20
    echo                           shift and go to state 21
    valor                          shift and go to state 23
    funcion                        shift and go to state 24
    return                         shift and go to state 25
    while                          shift and go to state 26
    for                            shift and go to state 27
    if                             shift and go to state 28
    elseif                         shift and go to state 29
    else                           shift and go to state 30
    foreach                        shift and go to state 31
    switch                         shift and go to state 32
    queue                          shift and go to state 33
    stack                          shift and go to state 34
    array                          shift and go to state 35
    comparacion                    shift and go to state 36
    operacion                      shift and go to state 37
    variable                       shift and go to state 53
    NUMERO                         shift and go to state 54

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> bloques .

    $end            reduce using rule 1 (sentencias -> bloques .)


state 3

    (2) sentencias -> operadorAritmetico .

    $end            reduce using rule 2 (sentencias -> operadorAritmetico .)


state 4

    (3) bloques -> bloque .
    (4) bloques -> bloque . bloques
    (3) bloques -> . bloque
    (4) bloques -> . bloque bloques
    (5) bloque -> . impresion
    (6) bloque -> . asignacion
    (7) bloque -> . funciones
    (8) bloque -> . estructurasControl
    (9) bloque -> . estructurasDeDatos
    (10) bloque -> . comparaciones
    (11) bloque -> . operaciones
    (12) bloque -> . comentario
    (13) impresion -> . print
    (14) impresion -> . echo
    (58) asignacion -> . IDENTIFICADOR ASIGNAR valor PUNTOCOMA
    (15) funciones -> . funcion
    (16) funciones -> . return
    (69) estructurasControl -> . while
    (70) estructurasControl -> . for
    (71) estructurasControl -> . if
    (72) estructurasControl -> . elseif
    (73) estructurasControl -> . else
    (74) estructurasControl -> . foreach
    (75) estructurasControl -> . switch
    (91) estructurasDeDatos -> . queue
    (92) estructurasDeDatos -> . stack
    (93) estructurasDeDatos -> . array
    (36) comparaciones -> . comparacion
    (37) comparaciones -> . comparacion operadores comparaciones
    (47) operaciones -> . operacion
    (48) operaciones -> . operacion operadorAritmetico operaciones
    (49) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (17) comentario -> . COMENTARIO
    (18) comentario -> . LLAVEDER
    (59) print -> . PRINT PARENIZ valores PARENDER PUNTOCOMA
    (60) print -> . PRINT valor PUNTOCOMA
    (61) print -> . PRINT PARENIZ PARENDER PUNTOCOMA
    (62) echo -> . ECHO valores PUNTOCOMA
    (63) funcion -> . FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ
    (66) funcion -> . NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (67) funcion -> . IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (68) return -> . RETURN IDENTIFICADOR PUNTOCOMA
    (76) while -> . WHILE PARENIZ comparaciones PARENDER LLAVEIZ
    (77) for -> . FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ
    (83) if -> . IF PARENIZ comparaciones PARENDER LLAVEIZ
    (84) if -> . IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (85) elseif -> . LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (86) elseif -> . LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (87) elseif -> . ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (88) elseif -> . ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (89) else -> . LLAVEDER ELSE LLAVEIZ
    (90) else -> . ELSE LLAVEIZ
    (78) foreach -> . FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ
    (79) switch -> . SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER
    (101) queue -> . IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA
    (102) queue -> . IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
    (103) queue -> . IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA
    (104) queue -> . IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA
    (105) queue -> . IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (106) queue -> . IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (107) queue -> . IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (108) queue -> . IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
    (94) stack -> . IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA
    (95) stack -> . IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA
    (96) stack -> . IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA
    (97) stack -> . IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (98) stack -> . IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (99) stack -> . IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (100) stack -> . IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
    (109) array -> . IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA
    (110) array -> . IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA
    (111) array -> . IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA
    (38) comparacion -> . variable comparadorNum variable
    (39) comparacion -> . valor comparador valor
    (50) operacion -> . variable operadorAritmetico variable
    (34) variable -> . NUMERO
    (35) variable -> . IDENTIFICADOR
    (23) valor -> . NUMERO
    (24) valor -> . CADENA
    (25) valor -> . BOOLEAN
    (26) valor -> . IDENTIFICADOR
    (21) NUMERO -> . ENTERO
    (22) NUMERO -> . FLOTANTE

    $end            reduce using rule 3 (bloques -> bloque .)
    IDENTIFICADOR   shift and go to state 22
    COMENTARIO      shift and go to state 38
    LLAVEDER        shift and go to state 39
    PRINT           shift and go to state 40
    ECHO            shift and go to state 41
    FUNCTION        shift and go to state 42
    NAMEFUNCTION    shift and go to state 43
    RETURN          shift and go to state 44
    WHILE           shift and go to state 45
    FOR             shift and go to state 46
    IF              shift and go to state 48
    ELSEIF          shift and go to state 49
    ELSE            shift and go to state 50
    FOREACH         shift and go to state 51
    SWITCH          shift and go to state 52
    CADENA          shift and go to state 55
    BOOLEAN         shift and go to state 56
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 57

    bloque                         shift and go to state 4
    bloques                        shift and go to state 58
    impresion                      shift and go to state 12
    asignacion                     shift and go to state 13
    funciones                      shift and go to state 14
    estructurasControl             shift and go to state 15
    estructurasDeDatos             shift and go to state 16
    comparaciones                  shift and go to state 17
    operaciones                    shift and go to state 18
    comentario                     shift and go to state 19
    print                          shift and go to state 20
    echo                           shift and go to state 21
    valor                          shift and go to state 23
    funcion                        shift and go to state 24
    return                         shift and go to state 25
    while                          shift and go to state 26
    for                            shift and go to state 27
    if                             shift and go to state 28
    elseif                         shift and go to state 29
    else                           shift and go to state 30
    foreach                        shift and go to state 31
    switch                         shift and go to state 32
    queue                          shift and go to state 33
    stack                          shift and go to state 34
    array                          shift and go to state 35
    comparacion                    shift and go to state 36
    operacion                      shift and go to state 37
    variable                       shift and go to state 53
    NUMERO                         shift and go to state 54

state 5

    (51) operadorAritmetico -> SUMA .

    $end            reduce using rule 51 (operadorAritmetico -> SUMA .)
    IDENTIFICADOR   reduce using rule 51 (operadorAritmetico -> SUMA .)
    ENTERO          reduce using rule 51 (operadorAritmetico -> SUMA .)
    FLOTANTE        reduce using rule 51 (operadorAritmetico -> SUMA .)


state 6

    (52) operadorAritmetico -> RESTA .

    $end            reduce using rule 52 (operadorAritmetico -> RESTA .)
    IDENTIFICADOR   reduce using rule 52 (operadorAritmetico -> RESTA .)
    ENTERO          reduce using rule 52 (operadorAritmetico -> RESTA .)
    FLOTANTE        reduce using rule 52 (operadorAritmetico -> RESTA .)


state 7

    (53) operadorAritmetico -> MULT .

    $end            reduce using rule 53 (operadorAritmetico -> MULT .)
    IDENTIFICADOR   reduce using rule 53 (operadorAritmetico -> MULT .)
    ENTERO          reduce using rule 53 (operadorAritmetico -> MULT .)
    FLOTANTE        reduce using rule 53 (operadorAritmetico -> MULT .)


state 8

    (54) operadorAritmetico -> DIVISION .

    $end            reduce using rule 54 (operadorAritmetico -> DIVISION .)
    IDENTIFICADOR   reduce using rule 54 (operadorAritmetico -> DIVISION .)
    ENTERO          reduce using rule 54 (operadorAritmetico -> DIVISION .)
    FLOTANTE        reduce using rule 54 (operadorAritmetico -> DIVISION .)


state 9

    (55) operadorAritmetico -> DIVISIONENTERA .

    $end            reduce using rule 55 (operadorAritmetico -> DIVISIONENTERA .)
    IDENTIFICADOR   reduce using rule 55 (operadorAritmetico -> DIVISIONENTERA .)
    ENTERO          reduce using rule 55 (operadorAritmetico -> DIVISIONENTERA .)
    FLOTANTE        reduce using rule 55 (operadorAritmetico -> DIVISIONENTERA .)


state 10

    (56) operadorAritmetico -> MODULO .

    $end            reduce using rule 56 (operadorAritmetico -> MODULO .)
    IDENTIFICADOR   reduce using rule 56 (operadorAritmetico -> MODULO .)
    ENTERO          reduce using rule 56 (operadorAritmetico -> MODULO .)
    FLOTANTE        reduce using rule 56 (operadorAritmetico -> MODULO .)


state 11

    (57) operadorAritmetico -> POTENCIA .

    $end            reduce using rule 57 (operadorAritmetico -> POTENCIA .)
    IDENTIFICADOR   reduce using rule 57 (operadorAritmetico -> POTENCIA .)
    ENTERO          reduce using rule 57 (operadorAritmetico -> POTENCIA .)
    FLOTANTE        reduce using rule 57 (operadorAritmetico -> POTENCIA .)


state 12

    (5) bloque -> impresion .

    IDENTIFICADOR   reduce using rule 5 (bloque -> impresion .)
    COMENTARIO      reduce using rule 5 (bloque -> impresion .)
    LLAVEDER        reduce using rule 5 (bloque -> impresion .)
    PRINT           reduce using rule 5 (bloque -> impresion .)
    ECHO            reduce using rule 5 (bloque -> impresion .)
    FUNCTION        reduce using rule 5 (bloque -> impresion .)
    NAMEFUNCTION    reduce using rule 5 (bloque -> impresion .)
    RETURN          reduce using rule 5 (bloque -> impresion .)
    WHILE           reduce using rule 5 (bloque -> impresion .)
    FOR             reduce using rule 5 (bloque -> impresion .)
    IF              reduce using rule 5 (bloque -> impresion .)
    ELSEIF          reduce using rule 5 (bloque -> impresion .)
    ELSE            reduce using rule 5 (bloque -> impresion .)
    FOREACH         reduce using rule 5 (bloque -> impresion .)
    SWITCH          reduce using rule 5 (bloque -> impresion .)
    CADENA          reduce using rule 5 (bloque -> impresion .)
    BOOLEAN         reduce using rule 5 (bloque -> impresion .)
    ENTERO          reduce using rule 5 (bloque -> impresion .)
    FLOTANTE        reduce using rule 5 (bloque -> impresion .)
    $end            reduce using rule 5 (bloque -> impresion .)


state 13

    (6) bloque -> asignacion .

    IDENTIFICADOR   reduce using rule 6 (bloque -> asignacion .)
    COMENTARIO      reduce using rule 6 (bloque -> asignacion .)
    LLAVEDER        reduce using rule 6 (bloque -> asignacion .)
    PRINT           reduce using rule 6 (bloque -> asignacion .)
    ECHO            reduce using rule 6 (bloque -> asignacion .)
    FUNCTION        reduce using rule 6 (bloque -> asignacion .)
    NAMEFUNCTION    reduce using rule 6 (bloque -> asignacion .)
    RETURN          reduce using rule 6 (bloque -> asignacion .)
    WHILE           reduce using rule 6 (bloque -> asignacion .)
    FOR             reduce using rule 6 (bloque -> asignacion .)
    IF              reduce using rule 6 (bloque -> asignacion .)
    ELSEIF          reduce using rule 6 (bloque -> asignacion .)
    ELSE            reduce using rule 6 (bloque -> asignacion .)
    FOREACH         reduce using rule 6 (bloque -> asignacion .)
    SWITCH          reduce using rule 6 (bloque -> asignacion .)
    CADENA          reduce using rule 6 (bloque -> asignacion .)
    BOOLEAN         reduce using rule 6 (bloque -> asignacion .)
    ENTERO          reduce using rule 6 (bloque -> asignacion .)
    FLOTANTE        reduce using rule 6 (bloque -> asignacion .)
    $end            reduce using rule 6 (bloque -> asignacion .)


state 14

    (7) bloque -> funciones .

    IDENTIFICADOR   reduce using rule 7 (bloque -> funciones .)
    COMENTARIO      reduce using rule 7 (bloque -> funciones .)
    LLAVEDER        reduce using rule 7 (bloque -> funciones .)
    PRINT           reduce using rule 7 (bloque -> funciones .)
    ECHO            reduce using rule 7 (bloque -> funciones .)
    FUNCTION        reduce using rule 7 (bloque -> funciones .)
    NAMEFUNCTION    reduce using rule 7 (bloque -> funciones .)
    RETURN          reduce using rule 7 (bloque -> funciones .)
    WHILE           reduce using rule 7 (bloque -> funciones .)
    FOR             reduce using rule 7 (bloque -> funciones .)
    IF              reduce using rule 7 (bloque -> funciones .)
    ELSEIF          reduce using rule 7 (bloque -> funciones .)
    ELSE            reduce using rule 7 (bloque -> funciones .)
    FOREACH         reduce using rule 7 (bloque -> funciones .)
    SWITCH          reduce using rule 7 (bloque -> funciones .)
    CADENA          reduce using rule 7 (bloque -> funciones .)
    BOOLEAN         reduce using rule 7 (bloque -> funciones .)
    ENTERO          reduce using rule 7 (bloque -> funciones .)
    FLOTANTE        reduce using rule 7 (bloque -> funciones .)
    $end            reduce using rule 7 (bloque -> funciones .)


state 15

    (8) bloque -> estructurasControl .

    IDENTIFICADOR   reduce using rule 8 (bloque -> estructurasControl .)
    COMENTARIO      reduce using rule 8 (bloque -> estructurasControl .)
    LLAVEDER        reduce using rule 8 (bloque -> estructurasControl .)
    PRINT           reduce using rule 8 (bloque -> estructurasControl .)
    ECHO            reduce using rule 8 (bloque -> estructurasControl .)
    FUNCTION        reduce using rule 8 (bloque -> estructurasControl .)
    NAMEFUNCTION    reduce using rule 8 (bloque -> estructurasControl .)
    RETURN          reduce using rule 8 (bloque -> estructurasControl .)
    WHILE           reduce using rule 8 (bloque -> estructurasControl .)
    FOR             reduce using rule 8 (bloque -> estructurasControl .)
    IF              reduce using rule 8 (bloque -> estructurasControl .)
    ELSEIF          reduce using rule 8 (bloque -> estructurasControl .)
    ELSE            reduce using rule 8 (bloque -> estructurasControl .)
    FOREACH         reduce using rule 8 (bloque -> estructurasControl .)
    SWITCH          reduce using rule 8 (bloque -> estructurasControl .)
    CADENA          reduce using rule 8 (bloque -> estructurasControl .)
    BOOLEAN         reduce using rule 8 (bloque -> estructurasControl .)
    ENTERO          reduce using rule 8 (bloque -> estructurasControl .)
    FLOTANTE        reduce using rule 8 (bloque -> estructurasControl .)
    $end            reduce using rule 8 (bloque -> estructurasControl .)


state 16

    (9) bloque -> estructurasDeDatos .

    IDENTIFICADOR   reduce using rule 9 (bloque -> estructurasDeDatos .)
    COMENTARIO      reduce using rule 9 (bloque -> estructurasDeDatos .)
    LLAVEDER        reduce using rule 9 (bloque -> estructurasDeDatos .)
    PRINT           reduce using rule 9 (bloque -> estructurasDeDatos .)
    ECHO            reduce using rule 9 (bloque -> estructurasDeDatos .)
    FUNCTION        reduce using rule 9 (bloque -> estructurasDeDatos .)
    NAMEFUNCTION    reduce using rule 9 (bloque -> estructurasDeDatos .)
    RETURN          reduce using rule 9 (bloque -> estructurasDeDatos .)
    WHILE           reduce using rule 9 (bloque -> estructurasDeDatos .)
    FOR             reduce using rule 9 (bloque -> estructurasDeDatos .)
    IF              reduce using rule 9 (bloque -> estructurasDeDatos .)
    ELSEIF          reduce using rule 9 (bloque -> estructurasDeDatos .)
    ELSE            reduce using rule 9 (bloque -> estructurasDeDatos .)
    FOREACH         reduce using rule 9 (bloque -> estructurasDeDatos .)
    SWITCH          reduce using rule 9 (bloque -> estructurasDeDatos .)
    CADENA          reduce using rule 9 (bloque -> estructurasDeDatos .)
    BOOLEAN         reduce using rule 9 (bloque -> estructurasDeDatos .)
    ENTERO          reduce using rule 9 (bloque -> estructurasDeDatos .)
    FLOTANTE        reduce using rule 9 (bloque -> estructurasDeDatos .)
    $end            reduce using rule 9 (bloque -> estructurasDeDatos .)


state 17

    (10) bloque -> comparaciones .

    IDENTIFICADOR   reduce using rule 10 (bloque -> comparaciones .)
    COMENTARIO      reduce using rule 10 (bloque -> comparaciones .)
    LLAVEDER        reduce using rule 10 (bloque -> comparaciones .)
    PRINT           reduce using rule 10 (bloque -> comparaciones .)
    ECHO            reduce using rule 10 (bloque -> comparaciones .)
    FUNCTION        reduce using rule 10 (bloque -> comparaciones .)
    NAMEFUNCTION    reduce using rule 10 (bloque -> comparaciones .)
    RETURN          reduce using rule 10 (bloque -> comparaciones .)
    WHILE           reduce using rule 10 (bloque -> comparaciones .)
    FOR             reduce using rule 10 (bloque -> comparaciones .)
    IF              reduce using rule 10 (bloque -> comparaciones .)
    ELSEIF          reduce using rule 10 (bloque -> comparaciones .)
    ELSE            reduce using rule 10 (bloque -> comparaciones .)
    FOREACH         reduce using rule 10 (bloque -> comparaciones .)
    SWITCH          reduce using rule 10 (bloque -> comparaciones .)
    CADENA          reduce using rule 10 (bloque -> comparaciones .)
    BOOLEAN         reduce using rule 10 (bloque -> comparaciones .)
    ENTERO          reduce using rule 10 (bloque -> comparaciones .)
    FLOTANTE        reduce using rule 10 (bloque -> comparaciones .)
    $end            reduce using rule 10 (bloque -> comparaciones .)


state 18

    (11) bloque -> operaciones .

    IDENTIFICADOR   reduce using rule 11 (bloque -> operaciones .)
    COMENTARIO      reduce using rule 11 (bloque -> operaciones .)
    LLAVEDER        reduce using rule 11 (bloque -> operaciones .)
    PRINT           reduce using rule 11 (bloque -> operaciones .)
    ECHO            reduce using rule 11 (bloque -> operaciones .)
    FUNCTION        reduce using rule 11 (bloque -> operaciones .)
    NAMEFUNCTION    reduce using rule 11 (bloque -> operaciones .)
    RETURN          reduce using rule 11 (bloque -> operaciones .)
    WHILE           reduce using rule 11 (bloque -> operaciones .)
    FOR             reduce using rule 11 (bloque -> operaciones .)
    IF              reduce using rule 11 (bloque -> operaciones .)
    ELSEIF          reduce using rule 11 (bloque -> operaciones .)
    ELSE            reduce using rule 11 (bloque -> operaciones .)
    FOREACH         reduce using rule 11 (bloque -> operaciones .)
    SWITCH          reduce using rule 11 (bloque -> operaciones .)
    CADENA          reduce using rule 11 (bloque -> operaciones .)
    BOOLEAN         reduce using rule 11 (bloque -> operaciones .)
    ENTERO          reduce using rule 11 (bloque -> operaciones .)
    FLOTANTE        reduce using rule 11 (bloque -> operaciones .)
    $end            reduce using rule 11 (bloque -> operaciones .)


state 19

    (12) bloque -> comentario .

    IDENTIFICADOR   reduce using rule 12 (bloque -> comentario .)
    COMENTARIO      reduce using rule 12 (bloque -> comentario .)
    LLAVEDER        reduce using rule 12 (bloque -> comentario .)
    PRINT           reduce using rule 12 (bloque -> comentario .)
    ECHO            reduce using rule 12 (bloque -> comentario .)
    FUNCTION        reduce using rule 12 (bloque -> comentario .)
    NAMEFUNCTION    reduce using rule 12 (bloque -> comentario .)
    RETURN          reduce using rule 12 (bloque -> comentario .)
    WHILE           reduce using rule 12 (bloque -> comentario .)
    FOR             reduce using rule 12 (bloque -> comentario .)
    IF              reduce using rule 12 (bloque -> comentario .)
    ELSEIF          reduce using rule 12 (bloque -> comentario .)
    ELSE            reduce using rule 12 (bloque -> comentario .)
    FOREACH         reduce using rule 12 (bloque -> comentario .)
    SWITCH          reduce using rule 12 (bloque -> comentario .)
    CADENA          reduce using rule 12 (bloque -> comentario .)
    BOOLEAN         reduce using rule 12 (bloque -> comentario .)
    ENTERO          reduce using rule 12 (bloque -> comentario .)
    FLOTANTE        reduce using rule 12 (bloque -> comentario .)
    $end            reduce using rule 12 (bloque -> comentario .)


state 20

    (13) impresion -> print .

    IDENTIFICADOR   reduce using rule 13 (impresion -> print .)
    COMENTARIO      reduce using rule 13 (impresion -> print .)
    LLAVEDER        reduce using rule 13 (impresion -> print .)
    PRINT           reduce using rule 13 (impresion -> print .)
    ECHO            reduce using rule 13 (impresion -> print .)
    FUNCTION        reduce using rule 13 (impresion -> print .)
    NAMEFUNCTION    reduce using rule 13 (impresion -> print .)
    RETURN          reduce using rule 13 (impresion -> print .)
    WHILE           reduce using rule 13 (impresion -> print .)
    FOR             reduce using rule 13 (impresion -> print .)
    IF              reduce using rule 13 (impresion -> print .)
    ELSEIF          reduce using rule 13 (impresion -> print .)
    ELSE            reduce using rule 13 (impresion -> print .)
    FOREACH         reduce using rule 13 (impresion -> print .)
    SWITCH          reduce using rule 13 (impresion -> print .)
    CADENA          reduce using rule 13 (impresion -> print .)
    BOOLEAN         reduce using rule 13 (impresion -> print .)
    ENTERO          reduce using rule 13 (impresion -> print .)
    FLOTANTE        reduce using rule 13 (impresion -> print .)
    $end            reduce using rule 13 (impresion -> print .)


state 21

    (14) impresion -> echo .

    IDENTIFICADOR   reduce using rule 14 (impresion -> echo .)
    COMENTARIO      reduce using rule 14 (impresion -> echo .)
    LLAVEDER        reduce using rule 14 (impresion -> echo .)
    PRINT           reduce using rule 14 (impresion -> echo .)
    ECHO            reduce using rule 14 (impresion -> echo .)
    FUNCTION        reduce using rule 14 (impresion -> echo .)
    NAMEFUNCTION    reduce using rule 14 (impresion -> echo .)
    RETURN          reduce using rule 14 (impresion -> echo .)
    WHILE           reduce using rule 14 (impresion -> echo .)
    FOR             reduce using rule 14 (impresion -> echo .)
    IF              reduce using rule 14 (impresion -> echo .)
    ELSEIF          reduce using rule 14 (impresion -> echo .)
    ELSE            reduce using rule 14 (impresion -> echo .)
    FOREACH         reduce using rule 14 (impresion -> echo .)
    SWITCH          reduce using rule 14 (impresion -> echo .)
    CADENA          reduce using rule 14 (impresion -> echo .)
    BOOLEAN         reduce using rule 14 (impresion -> echo .)
    ENTERO          reduce using rule 14 (impresion -> echo .)
    FLOTANTE        reduce using rule 14 (impresion -> echo .)
    $end            reduce using rule 14 (impresion -> echo .)


state 22

    (58) asignacion -> IDENTIFICADOR . ASIGNAR valor PUNTOCOMA
    (49) operaciones -> IDENTIFICADOR . ASIGNAR operaciones
    (67) funcion -> IDENTIFICADOR . ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (101) queue -> IDENTIFICADOR . ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA
    (102) queue -> IDENTIFICADOR . FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
    (103) queue -> IDENTIFICADOR . FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA
    (104) queue -> IDENTIFICADOR . FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA
    (105) queue -> IDENTIFICADOR . FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (106) queue -> IDENTIFICADOR . FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (107) queue -> IDENTIFICADOR . FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (108) queue -> IDENTIFICADOR . FLECHASIMPLE VALID PARENIZ PARENDER
    (94) stack -> IDENTIFICADOR . FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA
    (95) stack -> IDENTIFICADOR . FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA
    (96) stack -> IDENTIFICADOR . ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA
    (97) stack -> IDENTIFICADOR . FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (98) stack -> IDENTIFICADOR . FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (99) stack -> IDENTIFICADOR . FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (100) stack -> IDENTIFICADOR . FLECHASIMPLE VALID PARENIZ PARENDER
    (109) array -> IDENTIFICADOR . ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA
    (110) array -> IDENTIFICADOR . ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA
    (111) array -> IDENTIFICADOR . ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA
    (35) variable -> IDENTIFICADOR .
    (26) valor -> IDENTIFICADOR .

    ASIGNAR         shift and go to state 59
    FLECHASIMPLE    shift and go to state 60
    MAYORQUE        reduce using rule 35 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 35 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 35 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 35 (variable -> IDENTIFICADOR .)
    SUMA            reduce using rule 35 (variable -> IDENTIFICADOR .)
    RESTA           reduce using rule 35 (variable -> IDENTIFICADOR .)
    MULT            reduce using rule 35 (variable -> IDENTIFICADOR .)
    DIVISION        reduce using rule 35 (variable -> IDENTIFICADOR .)
    DIVISIONENTERA  reduce using rule 35 (variable -> IDENTIFICADOR .)
    MODULO          reduce using rule 35 (variable -> IDENTIFICADOR .)
    POTENCIA        reduce using rule 35 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 26 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 26 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 26 (valor -> IDENTIFICADOR .)


state 23

    (39) comparacion -> valor . comparador valor
    (31) comparador -> . IDENTICO
    (32) comparador -> . NOIDENTICO
    (33) comparador -> . IGUAL

    IDENTICO        shift and go to state 62
    NOIDENTICO      shift and go to state 63
    IGUAL           shift and go to state 64

    comparador                     shift and go to state 61

state 24

    (15) funciones -> funcion .

    IDENTIFICADOR   reduce using rule 15 (funciones -> funcion .)
    COMENTARIO      reduce using rule 15 (funciones -> funcion .)
    LLAVEDER        reduce using rule 15 (funciones -> funcion .)
    PRINT           reduce using rule 15 (funciones -> funcion .)
    ECHO            reduce using rule 15 (funciones -> funcion .)
    FUNCTION        reduce using rule 15 (funciones -> funcion .)
    NAMEFUNCTION    reduce using rule 15 (funciones -> funcion .)
    RETURN          reduce using rule 15 (funciones -> funcion .)
    WHILE           reduce using rule 15 (funciones -> funcion .)
    FOR             reduce using rule 15 (funciones -> funcion .)
    IF              reduce using rule 15 (funciones -> funcion .)
    ELSEIF          reduce using rule 15 (funciones -> funcion .)
    ELSE            reduce using rule 15 (funciones -> funcion .)
    FOREACH         reduce using rule 15 (funciones -> funcion .)
    SWITCH          reduce using rule 15 (funciones -> funcion .)
    CADENA          reduce using rule 15 (funciones -> funcion .)
    BOOLEAN         reduce using rule 15 (funciones -> funcion .)
    ENTERO          reduce using rule 15 (funciones -> funcion .)
    FLOTANTE        reduce using rule 15 (funciones -> funcion .)
    $end            reduce using rule 15 (funciones -> funcion .)


state 25

    (16) funciones -> return .

    IDENTIFICADOR   reduce using rule 16 (funciones -> return .)
    COMENTARIO      reduce using rule 16 (funciones -> return .)
    LLAVEDER        reduce using rule 16 (funciones -> return .)
    PRINT           reduce using rule 16 (funciones -> return .)
    ECHO            reduce using rule 16 (funciones -> return .)
    FUNCTION        reduce using rule 16 (funciones -> return .)
    NAMEFUNCTION    reduce using rule 16 (funciones -> return .)
    RETURN          reduce using rule 16 (funciones -> return .)
    WHILE           reduce using rule 16 (funciones -> return .)
    FOR             reduce using rule 16 (funciones -> return .)
    IF              reduce using rule 16 (funciones -> return .)
    ELSEIF          reduce using rule 16 (funciones -> return .)
    ELSE            reduce using rule 16 (funciones -> return .)
    FOREACH         reduce using rule 16 (funciones -> return .)
    SWITCH          reduce using rule 16 (funciones -> return .)
    CADENA          reduce using rule 16 (funciones -> return .)
    BOOLEAN         reduce using rule 16 (funciones -> return .)
    ENTERO          reduce using rule 16 (funciones -> return .)
    FLOTANTE        reduce using rule 16 (funciones -> return .)
    $end            reduce using rule 16 (funciones -> return .)


state 26

    (69) estructurasControl -> while .

    IDENTIFICADOR   reduce using rule 69 (estructurasControl -> while .)
    COMENTARIO      reduce using rule 69 (estructurasControl -> while .)
    LLAVEDER        reduce using rule 69 (estructurasControl -> while .)
    PRINT           reduce using rule 69 (estructurasControl -> while .)
    ECHO            reduce using rule 69 (estructurasControl -> while .)
    FUNCTION        reduce using rule 69 (estructurasControl -> while .)
    NAMEFUNCTION    reduce using rule 69 (estructurasControl -> while .)
    RETURN          reduce using rule 69 (estructurasControl -> while .)
    WHILE           reduce using rule 69 (estructurasControl -> while .)
    FOR             reduce using rule 69 (estructurasControl -> while .)
    IF              reduce using rule 69 (estructurasControl -> while .)
    ELSEIF          reduce using rule 69 (estructurasControl -> while .)
    ELSE            reduce using rule 69 (estructurasControl -> while .)
    FOREACH         reduce using rule 69 (estructurasControl -> while .)
    SWITCH          reduce using rule 69 (estructurasControl -> while .)
    CADENA          reduce using rule 69 (estructurasControl -> while .)
    BOOLEAN         reduce using rule 69 (estructurasControl -> while .)
    ENTERO          reduce using rule 69 (estructurasControl -> while .)
    FLOTANTE        reduce using rule 69 (estructurasControl -> while .)
    $end            reduce using rule 69 (estructurasControl -> while .)


state 27

    (70) estructurasControl -> for .

    IDENTIFICADOR   reduce using rule 70 (estructurasControl -> for .)
    COMENTARIO      reduce using rule 70 (estructurasControl -> for .)
    LLAVEDER        reduce using rule 70 (estructurasControl -> for .)
    PRINT           reduce using rule 70 (estructurasControl -> for .)
    ECHO            reduce using rule 70 (estructurasControl -> for .)
    FUNCTION        reduce using rule 70 (estructurasControl -> for .)
    NAMEFUNCTION    reduce using rule 70 (estructurasControl -> for .)
    RETURN          reduce using rule 70 (estructurasControl -> for .)
    WHILE           reduce using rule 70 (estructurasControl -> for .)
    FOR             reduce using rule 70 (estructurasControl -> for .)
    IF              reduce using rule 70 (estructurasControl -> for .)
    ELSEIF          reduce using rule 70 (estructurasControl -> for .)
    ELSE            reduce using rule 70 (estructurasControl -> for .)
    FOREACH         reduce using rule 70 (estructurasControl -> for .)
    SWITCH          reduce using rule 70 (estructurasControl -> for .)
    CADENA          reduce using rule 70 (estructurasControl -> for .)
    BOOLEAN         reduce using rule 70 (estructurasControl -> for .)
    ENTERO          reduce using rule 70 (estructurasControl -> for .)
    FLOTANTE        reduce using rule 70 (estructurasControl -> for .)
    $end            reduce using rule 70 (estructurasControl -> for .)


state 28

    (71) estructurasControl -> if .

    IDENTIFICADOR   reduce using rule 71 (estructurasControl -> if .)
    COMENTARIO      reduce using rule 71 (estructurasControl -> if .)
    LLAVEDER        reduce using rule 71 (estructurasControl -> if .)
    PRINT           reduce using rule 71 (estructurasControl -> if .)
    ECHO            reduce using rule 71 (estructurasControl -> if .)
    FUNCTION        reduce using rule 71 (estructurasControl -> if .)
    NAMEFUNCTION    reduce using rule 71 (estructurasControl -> if .)
    RETURN          reduce using rule 71 (estructurasControl -> if .)
    WHILE           reduce using rule 71 (estructurasControl -> if .)
    FOR             reduce using rule 71 (estructurasControl -> if .)
    IF              reduce using rule 71 (estructurasControl -> if .)
    ELSEIF          reduce using rule 71 (estructurasControl -> if .)
    ELSE            reduce using rule 71 (estructurasControl -> if .)
    FOREACH         reduce using rule 71 (estructurasControl -> if .)
    SWITCH          reduce using rule 71 (estructurasControl -> if .)
    CADENA          reduce using rule 71 (estructurasControl -> if .)
    BOOLEAN         reduce using rule 71 (estructurasControl -> if .)
    ENTERO          reduce using rule 71 (estructurasControl -> if .)
    FLOTANTE        reduce using rule 71 (estructurasControl -> if .)
    $end            reduce using rule 71 (estructurasControl -> if .)


state 29

    (72) estructurasControl -> elseif .

    IDENTIFICADOR   reduce using rule 72 (estructurasControl -> elseif .)
    COMENTARIO      reduce using rule 72 (estructurasControl -> elseif .)
    LLAVEDER        reduce using rule 72 (estructurasControl -> elseif .)
    PRINT           reduce using rule 72 (estructurasControl -> elseif .)
    ECHO            reduce using rule 72 (estructurasControl -> elseif .)
    FUNCTION        reduce using rule 72 (estructurasControl -> elseif .)
    NAMEFUNCTION    reduce using rule 72 (estructurasControl -> elseif .)
    RETURN          reduce using rule 72 (estructurasControl -> elseif .)
    WHILE           reduce using rule 72 (estructurasControl -> elseif .)
    FOR             reduce using rule 72 (estructurasControl -> elseif .)
    IF              reduce using rule 72 (estructurasControl -> elseif .)
    ELSEIF          reduce using rule 72 (estructurasControl -> elseif .)
    ELSE            reduce using rule 72 (estructurasControl -> elseif .)
    FOREACH         reduce using rule 72 (estructurasControl -> elseif .)
    SWITCH          reduce using rule 72 (estructurasControl -> elseif .)
    CADENA          reduce using rule 72 (estructurasControl -> elseif .)
    BOOLEAN         reduce using rule 72 (estructurasControl -> elseif .)
    ENTERO          reduce using rule 72 (estructurasControl -> elseif .)
    FLOTANTE        reduce using rule 72 (estructurasControl -> elseif .)
    $end            reduce using rule 72 (estructurasControl -> elseif .)


state 30

    (73) estructurasControl -> else .

    IDENTIFICADOR   reduce using rule 73 (estructurasControl -> else .)
    COMENTARIO      reduce using rule 73 (estructurasControl -> else .)
    LLAVEDER        reduce using rule 73 (estructurasControl -> else .)
    PRINT           reduce using rule 73 (estructurasControl -> else .)
    ECHO            reduce using rule 73 (estructurasControl -> else .)
    FUNCTION        reduce using rule 73 (estructurasControl -> else .)
    NAMEFUNCTION    reduce using rule 73 (estructurasControl -> else .)
    RETURN          reduce using rule 73 (estructurasControl -> else .)
    WHILE           reduce using rule 73 (estructurasControl -> else .)
    FOR             reduce using rule 73 (estructurasControl -> else .)
    IF              reduce using rule 73 (estructurasControl -> else .)
    ELSEIF          reduce using rule 73 (estructurasControl -> else .)
    ELSE            reduce using rule 73 (estructurasControl -> else .)
    FOREACH         reduce using rule 73 (estructurasControl -> else .)
    SWITCH          reduce using rule 73 (estructurasControl -> else .)
    CADENA          reduce using rule 73 (estructurasControl -> else .)
    BOOLEAN         reduce using rule 73 (estructurasControl -> else .)
    ENTERO          reduce using rule 73 (estructurasControl -> else .)
    FLOTANTE        reduce using rule 73 (estructurasControl -> else .)
    $end            reduce using rule 73 (estructurasControl -> else .)


state 31

    (74) estructurasControl -> foreach .

    IDENTIFICADOR   reduce using rule 74 (estructurasControl -> foreach .)
    COMENTARIO      reduce using rule 74 (estructurasControl -> foreach .)
    LLAVEDER        reduce using rule 74 (estructurasControl -> foreach .)
    PRINT           reduce using rule 74 (estructurasControl -> foreach .)
    ECHO            reduce using rule 74 (estructurasControl -> foreach .)
    FUNCTION        reduce using rule 74 (estructurasControl -> foreach .)
    NAMEFUNCTION    reduce using rule 74 (estructurasControl -> foreach .)
    RETURN          reduce using rule 74 (estructurasControl -> foreach .)
    WHILE           reduce using rule 74 (estructurasControl -> foreach .)
    FOR             reduce using rule 74 (estructurasControl -> foreach .)
    IF              reduce using rule 74 (estructurasControl -> foreach .)
    ELSEIF          reduce using rule 74 (estructurasControl -> foreach .)
    ELSE            reduce using rule 74 (estructurasControl -> foreach .)
    FOREACH         reduce using rule 74 (estructurasControl -> foreach .)
    SWITCH          reduce using rule 74 (estructurasControl -> foreach .)
    CADENA          reduce using rule 74 (estructurasControl -> foreach .)
    BOOLEAN         reduce using rule 74 (estructurasControl -> foreach .)
    ENTERO          reduce using rule 74 (estructurasControl -> foreach .)
    FLOTANTE        reduce using rule 74 (estructurasControl -> foreach .)
    $end            reduce using rule 74 (estructurasControl -> foreach .)


state 32

    (75) estructurasControl -> switch .

    IDENTIFICADOR   reduce using rule 75 (estructurasControl -> switch .)
    COMENTARIO      reduce using rule 75 (estructurasControl -> switch .)
    LLAVEDER        reduce using rule 75 (estructurasControl -> switch .)
    PRINT           reduce using rule 75 (estructurasControl -> switch .)
    ECHO            reduce using rule 75 (estructurasControl -> switch .)
    FUNCTION        reduce using rule 75 (estructurasControl -> switch .)
    NAMEFUNCTION    reduce using rule 75 (estructurasControl -> switch .)
    RETURN          reduce using rule 75 (estructurasControl -> switch .)
    WHILE           reduce using rule 75 (estructurasControl -> switch .)
    FOR             reduce using rule 75 (estructurasControl -> switch .)
    IF              reduce using rule 75 (estructurasControl -> switch .)
    ELSEIF          reduce using rule 75 (estructurasControl -> switch .)
    ELSE            reduce using rule 75 (estructurasControl -> switch .)
    FOREACH         reduce using rule 75 (estructurasControl -> switch .)
    SWITCH          reduce using rule 75 (estructurasControl -> switch .)
    CADENA          reduce using rule 75 (estructurasControl -> switch .)
    BOOLEAN         reduce using rule 75 (estructurasControl -> switch .)
    ENTERO          reduce using rule 75 (estructurasControl -> switch .)
    FLOTANTE        reduce using rule 75 (estructurasControl -> switch .)
    $end            reduce using rule 75 (estructurasControl -> switch .)


state 33

    (91) estructurasDeDatos -> queue .

    IDENTIFICADOR   reduce using rule 91 (estructurasDeDatos -> queue .)
    COMENTARIO      reduce using rule 91 (estructurasDeDatos -> queue .)
    LLAVEDER        reduce using rule 91 (estructurasDeDatos -> queue .)
    PRINT           reduce using rule 91 (estructurasDeDatos -> queue .)
    ECHO            reduce using rule 91 (estructurasDeDatos -> queue .)
    FUNCTION        reduce using rule 91 (estructurasDeDatos -> queue .)
    NAMEFUNCTION    reduce using rule 91 (estructurasDeDatos -> queue .)
    RETURN          reduce using rule 91 (estructurasDeDatos -> queue .)
    WHILE           reduce using rule 91 (estructurasDeDatos -> queue .)
    FOR             reduce using rule 91 (estructurasDeDatos -> queue .)
    IF              reduce using rule 91 (estructurasDeDatos -> queue .)
    ELSEIF          reduce using rule 91 (estructurasDeDatos -> queue .)
    ELSE            reduce using rule 91 (estructurasDeDatos -> queue .)
    FOREACH         reduce using rule 91 (estructurasDeDatos -> queue .)
    SWITCH          reduce using rule 91 (estructurasDeDatos -> queue .)
    CADENA          reduce using rule 91 (estructurasDeDatos -> queue .)
    BOOLEAN         reduce using rule 91 (estructurasDeDatos -> queue .)
    ENTERO          reduce using rule 91 (estructurasDeDatos -> queue .)
    FLOTANTE        reduce using rule 91 (estructurasDeDatos -> queue .)
    $end            reduce using rule 91 (estructurasDeDatos -> queue .)


state 34

    (92) estructurasDeDatos -> stack .

    IDENTIFICADOR   reduce using rule 92 (estructurasDeDatos -> stack .)
    COMENTARIO      reduce using rule 92 (estructurasDeDatos -> stack .)
    LLAVEDER        reduce using rule 92 (estructurasDeDatos -> stack .)
    PRINT           reduce using rule 92 (estructurasDeDatos -> stack .)
    ECHO            reduce using rule 92 (estructurasDeDatos -> stack .)
    FUNCTION        reduce using rule 92 (estructurasDeDatos -> stack .)
    NAMEFUNCTION    reduce using rule 92 (estructurasDeDatos -> stack .)
    RETURN          reduce using rule 92 (estructurasDeDatos -> stack .)
    WHILE           reduce using rule 92 (estructurasDeDatos -> stack .)
    FOR             reduce using rule 92 (estructurasDeDatos -> stack .)
    IF              reduce using rule 92 (estructurasDeDatos -> stack .)
    ELSEIF          reduce using rule 92 (estructurasDeDatos -> stack .)
    ELSE            reduce using rule 92 (estructurasDeDatos -> stack .)
    FOREACH         reduce using rule 92 (estructurasDeDatos -> stack .)
    SWITCH          reduce using rule 92 (estructurasDeDatos -> stack .)
    CADENA          reduce using rule 92 (estructurasDeDatos -> stack .)
    BOOLEAN         reduce using rule 92 (estructurasDeDatos -> stack .)
    ENTERO          reduce using rule 92 (estructurasDeDatos -> stack .)
    FLOTANTE        reduce using rule 92 (estructurasDeDatos -> stack .)
    $end            reduce using rule 92 (estructurasDeDatos -> stack .)


state 35

    (93) estructurasDeDatos -> array .

    IDENTIFICADOR   reduce using rule 93 (estructurasDeDatos -> array .)
    COMENTARIO      reduce using rule 93 (estructurasDeDatos -> array .)
    LLAVEDER        reduce using rule 93 (estructurasDeDatos -> array .)
    PRINT           reduce using rule 93 (estructurasDeDatos -> array .)
    ECHO            reduce using rule 93 (estructurasDeDatos -> array .)
    FUNCTION        reduce using rule 93 (estructurasDeDatos -> array .)
    NAMEFUNCTION    reduce using rule 93 (estructurasDeDatos -> array .)
    RETURN          reduce using rule 93 (estructurasDeDatos -> array .)
    WHILE           reduce using rule 93 (estructurasDeDatos -> array .)
    FOR             reduce using rule 93 (estructurasDeDatos -> array .)
    IF              reduce using rule 93 (estructurasDeDatos -> array .)
    ELSEIF          reduce using rule 93 (estructurasDeDatos -> array .)
    ELSE            reduce using rule 93 (estructurasDeDatos -> array .)
    FOREACH         reduce using rule 93 (estructurasDeDatos -> array .)
    SWITCH          reduce using rule 93 (estructurasDeDatos -> array .)
    CADENA          reduce using rule 93 (estructurasDeDatos -> array .)
    BOOLEAN         reduce using rule 93 (estructurasDeDatos -> array .)
    ENTERO          reduce using rule 93 (estructurasDeDatos -> array .)
    FLOTANTE        reduce using rule 93 (estructurasDeDatos -> array .)
    $end            reduce using rule 93 (estructurasDeDatos -> array .)


state 36

    (36) comparaciones -> comparacion .
    (37) comparaciones -> comparacion . operadores comparaciones
    (44) operadores -> . OPERADOR
    (45) operadores -> . AND
    (46) operadores -> . OR

    IDENTIFICADOR   reduce using rule 36 (comparaciones -> comparacion .)
    COMENTARIO      reduce using rule 36 (comparaciones -> comparacion .)
    LLAVEDER        reduce using rule 36 (comparaciones -> comparacion .)
    PRINT           reduce using rule 36 (comparaciones -> comparacion .)
    ECHO            reduce using rule 36 (comparaciones -> comparacion .)
    FUNCTION        reduce using rule 36 (comparaciones -> comparacion .)
    NAMEFUNCTION    reduce using rule 36 (comparaciones -> comparacion .)
    RETURN          reduce using rule 36 (comparaciones -> comparacion .)
    WHILE           reduce using rule 36 (comparaciones -> comparacion .)
    FOR             reduce using rule 36 (comparaciones -> comparacion .)
    IF              reduce using rule 36 (comparaciones -> comparacion .)
    ELSEIF          reduce using rule 36 (comparaciones -> comparacion .)
    ELSE            reduce using rule 36 (comparaciones -> comparacion .)
    FOREACH         reduce using rule 36 (comparaciones -> comparacion .)
    SWITCH          reduce using rule 36 (comparaciones -> comparacion .)
    CADENA          reduce using rule 36 (comparaciones -> comparacion .)
    BOOLEAN         reduce using rule 36 (comparaciones -> comparacion .)
    ENTERO          reduce using rule 36 (comparaciones -> comparacion .)
    FLOTANTE        reduce using rule 36 (comparaciones -> comparacion .)
    $end            reduce using rule 36 (comparaciones -> comparacion .)
    PARENDER        reduce using rule 36 (comparaciones -> comparacion .)
    OPERADOR        shift and go to state 66
    AND             shift and go to state 67
    OR              shift and go to state 68

    operadores                     shift and go to state 65

state 37

    (47) operaciones -> operacion .
    (48) operaciones -> operacion . operadorAritmetico operaciones
    (51) operadorAritmetico -> . SUMA
    (52) operadorAritmetico -> . RESTA
    (53) operadorAritmetico -> . MULT
    (54) operadorAritmetico -> . DIVISION
    (55) operadorAritmetico -> . DIVISIONENTERA
    (56) operadorAritmetico -> . MODULO
    (57) operadorAritmetico -> . POTENCIA

    IDENTIFICADOR   reduce using rule 47 (operaciones -> operacion .)
    COMENTARIO      reduce using rule 47 (operaciones -> operacion .)
    LLAVEDER        reduce using rule 47 (operaciones -> operacion .)
    PRINT           reduce using rule 47 (operaciones -> operacion .)
    ECHO            reduce using rule 47 (operaciones -> operacion .)
    FUNCTION        reduce using rule 47 (operaciones -> operacion .)
    NAMEFUNCTION    reduce using rule 47 (operaciones -> operacion .)
    RETURN          reduce using rule 47 (operaciones -> operacion .)
    WHILE           reduce using rule 47 (operaciones -> operacion .)
    FOR             reduce using rule 47 (operaciones -> operacion .)
    IF              reduce using rule 47 (operaciones -> operacion .)
    ELSEIF          reduce using rule 47 (operaciones -> operacion .)
    ELSE            reduce using rule 47 (operaciones -> operacion .)
    FOREACH         reduce using rule 47 (operaciones -> operacion .)
    SWITCH          reduce using rule 47 (operaciones -> operacion .)
    CADENA          reduce using rule 47 (operaciones -> operacion .)
    BOOLEAN         reduce using rule 47 (operaciones -> operacion .)
    ENTERO          reduce using rule 47 (operaciones -> operacion .)
    FLOTANTE        reduce using rule 47 (operaciones -> operacion .)
    $end            reduce using rule 47 (operaciones -> operacion .)
    SUMA            shift and go to state 5
    RESTA           shift and go to state 6
    MULT            shift and go to state 7
    DIVISION        shift and go to state 8
    DIVISIONENTERA  shift and go to state 9
    MODULO          shift and go to state 10
    POTENCIA        shift and go to state 11

    operadorAritmetico             shift and go to state 69

state 38

    (17) comentario -> COMENTARIO .

    IDENTIFICADOR   reduce using rule 17 (comentario -> COMENTARIO .)
    COMENTARIO      reduce using rule 17 (comentario -> COMENTARIO .)
    LLAVEDER        reduce using rule 17 (comentario -> COMENTARIO .)
    PRINT           reduce using rule 17 (comentario -> COMENTARIO .)
    ECHO            reduce using rule 17 (comentario -> COMENTARIO .)
    FUNCTION        reduce using rule 17 (comentario -> COMENTARIO .)
    NAMEFUNCTION    reduce using rule 17 (comentario -> COMENTARIO .)
    RETURN          reduce using rule 17 (comentario -> COMENTARIO .)
    WHILE           reduce using rule 17 (comentario -> COMENTARIO .)
    FOR             reduce using rule 17 (comentario -> COMENTARIO .)
    IF              reduce using rule 17 (comentario -> COMENTARIO .)
    ELSEIF          reduce using rule 17 (comentario -> COMENTARIO .)
    ELSE            reduce using rule 17 (comentario -> COMENTARIO .)
    FOREACH         reduce using rule 17 (comentario -> COMENTARIO .)
    SWITCH          reduce using rule 17 (comentario -> COMENTARIO .)
    CADENA          reduce using rule 17 (comentario -> COMENTARIO .)
    BOOLEAN         reduce using rule 17 (comentario -> COMENTARIO .)
    ENTERO          reduce using rule 17 (comentario -> COMENTARIO .)
    FLOTANTE        reduce using rule 17 (comentario -> COMENTARIO .)
    $end            reduce using rule 17 (comentario -> COMENTARIO .)


state 39

    (18) comentario -> LLAVEDER .
    (85) elseif -> LLAVEDER . ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (86) elseif -> LLAVEDER . ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (89) else -> LLAVEDER . ELSE LLAVEIZ

  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    IDENTIFICADOR   reduce using rule 18 (comentario -> LLAVEDER .)
    COMENTARIO      reduce using rule 18 (comentario -> LLAVEDER .)
    LLAVEDER        reduce using rule 18 (comentario -> LLAVEDER .)
    PRINT           reduce using rule 18 (comentario -> LLAVEDER .)
    ECHO            reduce using rule 18 (comentario -> LLAVEDER .)
    FUNCTION        reduce using rule 18 (comentario -> LLAVEDER .)
    NAMEFUNCTION    reduce using rule 18 (comentario -> LLAVEDER .)
    RETURN          reduce using rule 18 (comentario -> LLAVEDER .)
    WHILE           reduce using rule 18 (comentario -> LLAVEDER .)
    FOR             reduce using rule 18 (comentario -> LLAVEDER .)
    IF              reduce using rule 18 (comentario -> LLAVEDER .)
    FOREACH         reduce using rule 18 (comentario -> LLAVEDER .)
    SWITCH          reduce using rule 18 (comentario -> LLAVEDER .)
    CADENA          reduce using rule 18 (comentario -> LLAVEDER .)
    BOOLEAN         reduce using rule 18 (comentario -> LLAVEDER .)
    ENTERO          reduce using rule 18 (comentario -> LLAVEDER .)
    FLOTANTE        reduce using rule 18 (comentario -> LLAVEDER .)
    $end            reduce using rule 18 (comentario -> LLAVEDER .)
    ELSEIF          shift and go to state 70
    ELSE            shift and go to state 71

  ! ELSEIF          [ reduce using rule 18 (comentario -> LLAVEDER .) ]
  ! ELSE            [ reduce using rule 18 (comentario -> LLAVEDER .) ]


state 40

    (59) print -> PRINT . PARENIZ valores PARENDER PUNTOCOMA
    (60) print -> PRINT . valor PUNTOCOMA
    (61) print -> PRINT . PARENIZ PARENDER PUNTOCOMA
    (23) valor -> . NUMERO
    (24) valor -> . CADENA
    (25) valor -> . BOOLEAN
    (26) valor -> . IDENTIFICADOR
    (21) NUMERO -> . ENTERO
    (22) NUMERO -> . FLOTANTE

    PARENIZ         shift and go to state 72
    CADENA          shift and go to state 55
    BOOLEAN         shift and go to state 56
    IDENTIFICADOR   shift and go to state 75
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 57

    valor                          shift and go to state 73
    NUMERO                         shift and go to state 74

state 41

    (62) echo -> ECHO . valores PUNTOCOMA
    (19) valores -> . valor
    (20) valores -> . valor COMA valores
    (23) valor -> . NUMERO
    (24) valor -> . CADENA
    (25) valor -> . BOOLEAN
    (26) valor -> . IDENTIFICADOR
    (21) NUMERO -> . ENTERO
    (22) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 55
    BOOLEAN         shift and go to state 56
    IDENTIFICADOR   shift and go to state 75
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 57

    valores                        shift and go to state 76
    valor                          shift and go to state 77
    NUMERO                         shift and go to state 74

state 42

    (63) funcion -> FUNCTION . NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ

    NAMEFUNCTION    shift and go to state 78


state 43

    (66) funcion -> NAMEFUNCTION . PARENIZ parametro PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 79


state 44

    (68) return -> RETURN . IDENTIFICADOR PUNTOCOMA

    IDENTIFICADOR   shift and go to state 80


state 45

    (76) while -> WHILE . PARENIZ comparaciones PARENDER LLAVEIZ

    PARENIZ         shift and go to state 81


state 46

    (77) for -> FOR . PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    PARENIZ         shift and go to state 82


state 47

    (21) NUMERO -> ENTERO .

    MAYORQUE        reduce using rule 21 (NUMERO -> ENTERO .)
    MAYORIGUALQUE   reduce using rule 21 (NUMERO -> ENTERO .)
    MENORQUE        reduce using rule 21 (NUMERO -> ENTERO .)
    MENORIGUALQUE   reduce using rule 21 (NUMERO -> ENTERO .)
    SUMA            reduce using rule 21 (NUMERO -> ENTERO .)
    RESTA           reduce using rule 21 (NUMERO -> ENTERO .)
    MULT            reduce using rule 21 (NUMERO -> ENTERO .)
    DIVISION        reduce using rule 21 (NUMERO -> ENTERO .)
    DIVISIONENTERA  reduce using rule 21 (NUMERO -> ENTERO .)
    MODULO          reduce using rule 21 (NUMERO -> ENTERO .)
    POTENCIA        reduce using rule 21 (NUMERO -> ENTERO .)
    IDENTICO        reduce using rule 21 (NUMERO -> ENTERO .)
    NOIDENTICO      reduce using rule 21 (NUMERO -> ENTERO .)
    IGUAL           reduce using rule 21 (NUMERO -> ENTERO .)
    PUNTOCOMA       reduce using rule 21 (NUMERO -> ENTERO .)
    COMA            reduce using rule 21 (NUMERO -> ENTERO .)
    OPERADOR        reduce using rule 21 (NUMERO -> ENTERO .)
    AND             reduce using rule 21 (NUMERO -> ENTERO .)
    OR              reduce using rule 21 (NUMERO -> ENTERO .)
    IDENTIFICADOR   reduce using rule 21 (NUMERO -> ENTERO .)
    COMENTARIO      reduce using rule 21 (NUMERO -> ENTERO .)
    LLAVEDER        reduce using rule 21 (NUMERO -> ENTERO .)
    PRINT           reduce using rule 21 (NUMERO -> ENTERO .)
    ECHO            reduce using rule 21 (NUMERO -> ENTERO .)
    FUNCTION        reduce using rule 21 (NUMERO -> ENTERO .)
    NAMEFUNCTION    reduce using rule 21 (NUMERO -> ENTERO .)
    RETURN          reduce using rule 21 (NUMERO -> ENTERO .)
    WHILE           reduce using rule 21 (NUMERO -> ENTERO .)
    FOR             reduce using rule 21 (NUMERO -> ENTERO .)
    IF              reduce using rule 21 (NUMERO -> ENTERO .)
    ELSEIF          reduce using rule 21 (NUMERO -> ENTERO .)
    ELSE            reduce using rule 21 (NUMERO -> ENTERO .)
    FOREACH         reduce using rule 21 (NUMERO -> ENTERO .)
    SWITCH          reduce using rule 21 (NUMERO -> ENTERO .)
    CADENA          reduce using rule 21 (NUMERO -> ENTERO .)
    BOOLEAN         reduce using rule 21 (NUMERO -> ENTERO .)
    ENTERO          reduce using rule 21 (NUMERO -> ENTERO .)
    FLOTANTE        reduce using rule 21 (NUMERO -> ENTERO .)
    $end            reduce using rule 21 (NUMERO -> ENTERO .)
    PARENDER        reduce using rule 21 (NUMERO -> ENTERO .)
    CORCHETEDER     reduce using rule 21 (NUMERO -> ENTERO .)
    DOSPUNTOS       reduce using rule 21 (NUMERO -> ENTERO .)


state 48

    (83) if -> IF . PARENIZ comparaciones PARENDER LLAVEIZ
    (84) if -> IF . PARENIZ IDENTIFICADOR PARENDER LLAVEIZ

    PARENIZ         shift and go to state 83


state 49

    (87) elseif -> ELSEIF . PARENIZ comparaciones PARENDER LLAVEIZ
    (88) elseif -> ELSEIF . PARENIZ IDENTIFICADOR PARENDER LLAVEIZ

    PARENIZ         shift and go to state 84


state 50

    (90) else -> ELSE . LLAVEIZ

    LLAVEIZ         shift and go to state 85


state 51

    (78) foreach -> FOREACH . PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ

    PARENIZ         shift and go to state 86


state 52

    (79) switch -> SWITCH . PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER

    PARENIZ         shift and go to state 87


state 53

    (38) comparacion -> variable . comparadorNum variable
    (50) operacion -> variable . operadorAritmetico variable
    (27) comparadorNum -> . MAYORQUE
    (28) comparadorNum -> . MAYORIGUALQUE
    (29) comparadorNum -> . MENORQUE
    (30) comparadorNum -> . MENORIGUALQUE
    (51) operadorAritmetico -> . SUMA
    (52) operadorAritmetico -> . RESTA
    (53) operadorAritmetico -> . MULT
    (54) operadorAritmetico -> . DIVISION
    (55) operadorAritmetico -> . DIVISIONENTERA
    (56) operadorAritmetico -> . MODULO
    (57) operadorAritmetico -> . POTENCIA

    MAYORQUE        shift and go to state 90
    MAYORIGUALQUE   shift and go to state 91
    MENORQUE        shift and go to state 92
    MENORIGUALQUE   shift and go to state 93
    SUMA            shift and go to state 5
    RESTA           shift and go to state 6
    MULT            shift and go to state 7
    DIVISION        shift and go to state 8
    DIVISIONENTERA  shift and go to state 9
    MODULO          shift and go to state 10
    POTENCIA        shift and go to state 11

    comparadorNum                  shift and go to state 88
    operadorAritmetico             shift and go to state 89

state 54

    (34) variable -> NUMERO .
    (23) valor -> NUMERO .

    MAYORQUE        reduce using rule 34 (variable -> NUMERO .)
    MAYORIGUALQUE   reduce using rule 34 (variable -> NUMERO .)
    MENORQUE        reduce using rule 34 (variable -> NUMERO .)
    MENORIGUALQUE   reduce using rule 34 (variable -> NUMERO .)
    SUMA            reduce using rule 34 (variable -> NUMERO .)
    RESTA           reduce using rule 34 (variable -> NUMERO .)
    MULT            reduce using rule 34 (variable -> NUMERO .)
    DIVISION        reduce using rule 34 (variable -> NUMERO .)
    DIVISIONENTERA  reduce using rule 34 (variable -> NUMERO .)
    MODULO          reduce using rule 34 (variable -> NUMERO .)
    POTENCIA        reduce using rule 34 (variable -> NUMERO .)
    IDENTICO        reduce using rule 23 (valor -> NUMERO .)
    NOIDENTICO      reduce using rule 23 (valor -> NUMERO .)
    IGUAL           reduce using rule 23 (valor -> NUMERO .)


state 55

    (24) valor -> CADENA .

    IDENTICO        reduce using rule 24 (valor -> CADENA .)
    NOIDENTICO      reduce using rule 24 (valor -> CADENA .)
    IGUAL           reduce using rule 24 (valor -> CADENA .)
    PUNTOCOMA       reduce using rule 24 (valor -> CADENA .)
    COMA            reduce using rule 24 (valor -> CADENA .)
    OPERADOR        reduce using rule 24 (valor -> CADENA .)
    AND             reduce using rule 24 (valor -> CADENA .)
    OR              reduce using rule 24 (valor -> CADENA .)
    IDENTIFICADOR   reduce using rule 24 (valor -> CADENA .)
    COMENTARIO      reduce using rule 24 (valor -> CADENA .)
    LLAVEDER        reduce using rule 24 (valor -> CADENA .)
    PRINT           reduce using rule 24 (valor -> CADENA .)
    ECHO            reduce using rule 24 (valor -> CADENA .)
    FUNCTION        reduce using rule 24 (valor -> CADENA .)
    NAMEFUNCTION    reduce using rule 24 (valor -> CADENA .)
    RETURN          reduce using rule 24 (valor -> CADENA .)
    WHILE           reduce using rule 24 (valor -> CADENA .)
    FOR             reduce using rule 24 (valor -> CADENA .)
    IF              reduce using rule 24 (valor -> CADENA .)
    ELSEIF          reduce using rule 24 (valor -> CADENA .)
    ELSE            reduce using rule 24 (valor -> CADENA .)
    FOREACH         reduce using rule 24 (valor -> CADENA .)
    SWITCH          reduce using rule 24 (valor -> CADENA .)
    CADENA          reduce using rule 24 (valor -> CADENA .)
    BOOLEAN         reduce using rule 24 (valor -> CADENA .)
    ENTERO          reduce using rule 24 (valor -> CADENA .)
    FLOTANTE        reduce using rule 24 (valor -> CADENA .)
    $end            reduce using rule 24 (valor -> CADENA .)
    PARENDER        reduce using rule 24 (valor -> CADENA .)
    CORCHETEDER     reduce using rule 24 (valor -> CADENA .)
    DOSPUNTOS       reduce using rule 24 (valor -> CADENA .)


state 56

    (25) valor -> BOOLEAN .

    IDENTICO        reduce using rule 25 (valor -> BOOLEAN .)
    NOIDENTICO      reduce using rule 25 (valor -> BOOLEAN .)
    IGUAL           reduce using rule 25 (valor -> BOOLEAN .)
    PUNTOCOMA       reduce using rule 25 (valor -> BOOLEAN .)
    COMA            reduce using rule 25 (valor -> BOOLEAN .)
    OPERADOR        reduce using rule 25 (valor -> BOOLEAN .)
    AND             reduce using rule 25 (valor -> BOOLEAN .)
    OR              reduce using rule 25 (valor -> BOOLEAN .)
    IDENTIFICADOR   reduce using rule 25 (valor -> BOOLEAN .)
    COMENTARIO      reduce using rule 25 (valor -> BOOLEAN .)
    LLAVEDER        reduce using rule 25 (valor -> BOOLEAN .)
    PRINT           reduce using rule 25 (valor -> BOOLEAN .)
    ECHO            reduce using rule 25 (valor -> BOOLEAN .)
    FUNCTION        reduce using rule 25 (valor -> BOOLEAN .)
    NAMEFUNCTION    reduce using rule 25 (valor -> BOOLEAN .)
    RETURN          reduce using rule 25 (valor -> BOOLEAN .)
    WHILE           reduce using rule 25 (valor -> BOOLEAN .)
    FOR             reduce using rule 25 (valor -> BOOLEAN .)
    IF              reduce using rule 25 (valor -> BOOLEAN .)
    ELSEIF          reduce using rule 25 (valor -> BOOLEAN .)
    ELSE            reduce using rule 25 (valor -> BOOLEAN .)
    FOREACH         reduce using rule 25 (valor -> BOOLEAN .)
    SWITCH          reduce using rule 25 (valor -> BOOLEAN .)
    CADENA          reduce using rule 25 (valor -> BOOLEAN .)
    BOOLEAN         reduce using rule 25 (valor -> BOOLEAN .)
    ENTERO          reduce using rule 25 (valor -> BOOLEAN .)
    FLOTANTE        reduce using rule 25 (valor -> BOOLEAN .)
    $end            reduce using rule 25 (valor -> BOOLEAN .)
    PARENDER        reduce using rule 25 (valor -> BOOLEAN .)
    CORCHETEDER     reduce using rule 25 (valor -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 25 (valor -> BOOLEAN .)


state 57

    (22) NUMERO -> FLOTANTE .

    MAYORQUE        reduce using rule 22 (NUMERO -> FLOTANTE .)
    MAYORIGUALQUE   reduce using rule 22 (NUMERO -> FLOTANTE .)
    MENORQUE        reduce using rule 22 (NUMERO -> FLOTANTE .)
    MENORIGUALQUE   reduce using rule 22 (NUMERO -> FLOTANTE .)
    SUMA            reduce using rule 22 (NUMERO -> FLOTANTE .)
    RESTA           reduce using rule 22 (NUMERO -> FLOTANTE .)
    MULT            reduce using rule 22 (NUMERO -> FLOTANTE .)
    DIVISION        reduce using rule 22 (NUMERO -> FLOTANTE .)
    DIVISIONENTERA  reduce using rule 22 (NUMERO -> FLOTANTE .)
    MODULO          reduce using rule 22 (NUMERO -> FLOTANTE .)
    POTENCIA        reduce using rule 22 (NUMERO -> FLOTANTE .)
    IDENTICO        reduce using rule 22 (NUMERO -> FLOTANTE .)
    NOIDENTICO      reduce using rule 22 (NUMERO -> FLOTANTE .)
    IGUAL           reduce using rule 22 (NUMERO -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 22 (NUMERO -> FLOTANTE .)
    COMA            reduce using rule 22 (NUMERO -> FLOTANTE .)
    OPERADOR        reduce using rule 22 (NUMERO -> FLOTANTE .)
    AND             reduce using rule 22 (NUMERO -> FLOTANTE .)
    OR              reduce using rule 22 (NUMERO -> FLOTANTE .)
    IDENTIFICADOR   reduce using rule 22 (NUMERO -> FLOTANTE .)
    COMENTARIO      reduce using rule 22 (NUMERO -> FLOTANTE .)
    LLAVEDER        reduce using rule 22 (NUMERO -> FLOTANTE .)
    PRINT           reduce using rule 22 (NUMERO -> FLOTANTE .)
    ECHO            reduce using rule 22 (NUMERO -> FLOTANTE .)
    FUNCTION        reduce using rule 22 (NUMERO -> FLOTANTE .)
    NAMEFUNCTION    reduce using rule 22 (NUMERO -> FLOTANTE .)
    RETURN          reduce using rule 22 (NUMERO -> FLOTANTE .)
    WHILE           reduce using rule 22 (NUMERO -> FLOTANTE .)
    FOR             reduce using rule 22 (NUMERO -> FLOTANTE .)
    IF              reduce using rule 22 (NUMERO -> FLOTANTE .)
    ELSEIF          reduce using rule 22 (NUMERO -> FLOTANTE .)
    ELSE            reduce using rule 22 (NUMERO -> FLOTANTE .)
    FOREACH         reduce using rule 22 (NUMERO -> FLOTANTE .)
    SWITCH          reduce using rule 22 (NUMERO -> FLOTANTE .)
    CADENA          reduce using rule 22 (NUMERO -> FLOTANTE .)
    BOOLEAN         reduce using rule 22 (NUMERO -> FLOTANTE .)
    ENTERO          reduce using rule 22 (NUMERO -> FLOTANTE .)
    FLOTANTE        reduce using rule 22 (NUMERO -> FLOTANTE .)
    $end            reduce using rule 22 (NUMERO -> FLOTANTE .)
    PARENDER        reduce using rule 22 (NUMERO -> FLOTANTE .)
    CORCHETEDER     reduce using rule 22 (NUMERO -> FLOTANTE .)
    DOSPUNTOS       reduce using rule 22 (NUMERO -> FLOTANTE .)


state 58

    (4) bloques -> bloque bloques .

    $end            reduce using rule 4 (bloques -> bloque bloques .)


state 59

    (58) asignacion -> IDENTIFICADOR ASIGNAR . valor PUNTOCOMA
    (49) operaciones -> IDENTIFICADOR ASIGNAR . operaciones
    (67) funcion -> IDENTIFICADOR ASIGNAR . NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA
    (101) queue -> IDENTIFICADOR ASIGNAR . NEW QUEUE PARENIZ PARENDER PUNTOCOMA
    (96) stack -> IDENTIFICADOR ASIGNAR . NEW STACK PARENIZ PARENDER PUNTOCOMA
    (109) array -> IDENTIFICADOR ASIGNAR . ARRAY PARENIZ PARENDER PUNTOCOMA
    (110) array -> IDENTIFICADOR ASIGNAR . ARRAY PARENIZ valores PARENDER PUNTOCOMA
    (111) array -> IDENTIFICADOR ASIGNAR . CORCHETEIZ valores CORCHETEDER PUNTOCOMA
    (23) valor -> . NUMERO
    (24) valor -> . CADENA
    (25) valor -> . BOOLEAN
    (26) valor -> . IDENTIFICADOR
    (47) operaciones -> . operacion
    (48) operaciones -> . operacion operadorAritmetico operaciones
    (49) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (21) NUMERO -> . ENTERO
    (22) NUMERO -> . FLOTANTE
    (50) operacion -> . variable operadorAritmetico variable
    (34) variable -> . NUMERO
    (35) variable -> . IDENTIFICADOR

    NAMEFUNCTION    shift and go to state 97
    NEW             shift and go to state 98
    ARRAY           shift and go to state 99
    CORCHETEIZ      shift and go to state 100
    CADENA          shift and go to state 55
    BOOLEAN         shift and go to state 56
    IDENTIFICADOR   shift and go to state 94
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 57

    valor                          shift and go to state 95
    operaciones                    shift and go to state 96
    NUMERO                         shift and go to state 101
    operacion                      shift and go to state 37
    variable                       shift and go to state 102

state 60

    (102) queue -> IDENTIFICADOR FLECHASIMPLE . ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
    (103) queue -> IDENTIFICADOR FLECHASIMPLE . COUNT PARENIZ PARENDER PUNTOCOMA
    (104) queue -> IDENTIFICADOR FLECHASIMPLE . DEQUEUE PARENIZ PARENDER PUNTOCOMA
    (105) queue -> IDENTIFICADOR FLECHASIMPLE . NEXT PARENIZ PARENDER PUNTOCOMA
    (106) queue -> IDENTIFICADOR FLECHASIMPLE . REWIND PARENIZ PARENDER PUNTOCOMA
    (107) queue -> IDENTIFICADOR FLECHASIMPLE . CURRENT PARENIZ PARENDER PUNTOCOMA
    (108) queue -> IDENTIFICADOR FLECHASIMPLE . VALID PARENIZ PARENDER
    (94) stack -> IDENTIFICADOR FLECHASIMPLE . PUSH PARENIZ valor PARENDER PUNTOCOMA
    (95) stack -> IDENTIFICADOR FLECHASIMPLE . POP PARENIZ PARENDER PUNTOCOMA
    (97) stack -> IDENTIFICADOR FLECHASIMPLE . NEXT PARENIZ PARENDER PUNTOCOMA
    (98) stack -> IDENTIFICADOR FLECHASIMPLE . REWIND PARENIZ PARENDER PUNTOCOMA
    (99) stack -> IDENTIFICADOR FLECHASIMPLE . CURRENT PARENIZ PARENDER PUNTOCOMA
    (100) stack -> IDENTIFICADOR FLECHASIMPLE . VALID PARENIZ PARENDER

    ENQUEUE         shift and go to state 103
    COUNT           shift and go to state 104
    DEQUEUE         shift and go to state 105
    NEXT            shift and go to state 106
    REWIND          shift and go to state 107
    CURRENT         shift and go to state 108
    VALID           shift and go to state 109
    PUSH            shift and go to state 110
    POP             shift and go to state 111


state 61

    (39) comparacion -> valor comparador . valor
    (23) valor -> . NUMERO
    (24) valor -> . CADENA
    (25) valor -> . BOOLEAN
    (26) valor -> . IDENTIFICADOR
    (21) NUMERO -> . ENTERO
    (22) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 55
    BOOLEAN         shift and go to state 56
    IDENTIFICADOR   shift and go to state 75
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 57

    valor                          shift and go to state 112
    NUMERO                         shift and go to state 74

state 62

    (31) comparador -> IDENTICO .

    CADENA          reduce using rule 31 (comparador -> IDENTICO .)
    BOOLEAN         reduce using rule 31 (comparador -> IDENTICO .)
    IDENTIFICADOR   reduce using rule 31 (comparador -> IDENTICO .)
    ENTERO          reduce using rule 31 (comparador -> IDENTICO .)
    FLOTANTE        reduce using rule 31 (comparador -> IDENTICO .)


state 63

    (32) comparador -> NOIDENTICO .

    CADENA          reduce using rule 32 (comparador -> NOIDENTICO .)
    BOOLEAN         reduce using rule 32 (comparador -> NOIDENTICO .)
    IDENTIFICADOR   reduce using rule 32 (comparador -> NOIDENTICO .)
    ENTERO          reduce using rule 32 (comparador -> NOIDENTICO .)
    FLOTANTE        reduce using rule 32 (comparador -> NOIDENTICO .)


state 64

    (33) comparador -> IGUAL .

    CADENA          reduce using rule 33 (comparador -> IGUAL .)
    BOOLEAN         reduce using rule 33 (comparador -> IGUAL .)
    IDENTIFICADOR   reduce using rule 33 (comparador -> IGUAL .)
    ENTERO          reduce using rule 33 (comparador -> IGUAL .)
    FLOTANTE        reduce using rule 33 (comparador -> IGUAL .)


state 65

    (37) comparaciones -> comparacion operadores . comparaciones
    (36) comparaciones -> . comparacion
    (37) comparaciones -> . comparacion operadores comparaciones
    (38) comparacion -> . variable comparadorNum variable
    (39) comparacion -> . valor comparador valor
    (34) variable -> . NUMERO
    (35) variable -> . IDENTIFICADOR
    (23) valor -> . NUMERO
    (24) valor -> . CADENA
    (25) valor -> . BOOLEAN
    (26) valor -> . IDENTIFICADOR
    (21) NUMERO -> . ENTERO
    (22) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 115
    CADENA          shift and go to state 55
    BOOLEAN         shift and go to state 56
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 57

    comparacion                    shift and go to state 36
    comparaciones                  shift and go to state 113
    variable                       shift and go to state 114
    valor                          shift and go to state 23
    NUMERO                         shift and go to state 54

state 66

    (44) operadores -> OPERADOR .

    IDENTIFICADOR   reduce using rule 44 (operadores -> OPERADOR .)
    CADENA          reduce using rule 44 (operadores -> OPERADOR .)
    BOOLEAN         reduce using rule 44 (operadores -> OPERADOR .)
    ENTERO          reduce using rule 44 (operadores -> OPERADOR .)
    FLOTANTE        reduce using rule 44 (operadores -> OPERADOR .)


state 67

    (45) operadores -> AND .

    IDENTIFICADOR   reduce using rule 45 (operadores -> AND .)
    CADENA          reduce using rule 45 (operadores -> AND .)
    BOOLEAN         reduce using rule 45 (operadores -> AND .)
    ENTERO          reduce using rule 45 (operadores -> AND .)
    FLOTANTE        reduce using rule 45 (operadores -> AND .)


state 68

    (46) operadores -> OR .

    IDENTIFICADOR   reduce using rule 46 (operadores -> OR .)
    CADENA          reduce using rule 46 (operadores -> OR .)
    BOOLEAN         reduce using rule 46 (operadores -> OR .)
    ENTERO          reduce using rule 46 (operadores -> OR .)
    FLOTANTE        reduce using rule 46 (operadores -> OR .)


state 69

    (48) operaciones -> operacion operadorAritmetico . operaciones
    (47) operaciones -> . operacion
    (48) operaciones -> . operacion operadorAritmetico operaciones
    (49) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (50) operacion -> . variable operadorAritmetico variable
    (34) variable -> . NUMERO
    (35) variable -> . IDENTIFICADOR
    (21) NUMERO -> . ENTERO
    (22) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 117
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 57

    operacion                      shift and go to state 37
    operaciones                    shift and go to state 116
    variable                       shift and go to state 102
    NUMERO                         shift and go to state 118

state 70

    (85) elseif -> LLAVEDER ELSEIF . PARENIZ comparaciones PARENDER LLAVEIZ
    (86) elseif -> LLAVEDER ELSEIF . PARENIZ IDENTIFICADOR PARENDER LLAVEIZ

    PARENIZ         shift and go to state 119


state 71

    (89) else -> LLAVEDER ELSE . LLAVEIZ

    LLAVEIZ         shift and go to state 120


state 72

    (59) print -> PRINT PARENIZ . valores PARENDER PUNTOCOMA
    (61) print -> PRINT PARENIZ . PARENDER PUNTOCOMA
    (19) valores -> . valor
    (20) valores -> . valor COMA valores
    (23) valor -> . NUMERO
    (24) valor -> . CADENA
    (25) valor -> . BOOLEAN
    (26) valor -> . IDENTIFICADOR
    (21) NUMERO -> . ENTERO
    (22) NUMERO -> . FLOTANTE

    PARENDER        shift and go to state 122
    CADENA          shift and go to state 55
    BOOLEAN         shift and go to state 56
    IDENTIFICADOR   shift and go to state 75
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 57

    valores                        shift and go to state 121
    valor                          shift and go to state 77
    NUMERO                         shift and go to state 74

state 73

    (60) print -> PRINT valor . PUNTOCOMA

    PUNTOCOMA       shift and go to state 123


state 74

    (23) valor -> NUMERO .

    PUNTOCOMA       reduce using rule 23 (valor -> NUMERO .)
    COMA            reduce using rule 23 (valor -> NUMERO .)
    OPERADOR        reduce using rule 23 (valor -> NUMERO .)
    AND             reduce using rule 23 (valor -> NUMERO .)
    OR              reduce using rule 23 (valor -> NUMERO .)
    IDENTIFICADOR   reduce using rule 23 (valor -> NUMERO .)
    COMENTARIO      reduce using rule 23 (valor -> NUMERO .)
    LLAVEDER        reduce using rule 23 (valor -> NUMERO .)
    PRINT           reduce using rule 23 (valor -> NUMERO .)
    ECHO            reduce using rule 23 (valor -> NUMERO .)
    FUNCTION        reduce using rule 23 (valor -> NUMERO .)
    NAMEFUNCTION    reduce using rule 23 (valor -> NUMERO .)
    RETURN          reduce using rule 23 (valor -> NUMERO .)
    WHILE           reduce using rule 23 (valor -> NUMERO .)
    FOR             reduce using rule 23 (valor -> NUMERO .)
    IF              reduce using rule 23 (valor -> NUMERO .)
    ELSEIF          reduce using rule 23 (valor -> NUMERO .)
    ELSE            reduce using rule 23 (valor -> NUMERO .)
    FOREACH         reduce using rule 23 (valor -> NUMERO .)
    SWITCH          reduce using rule 23 (valor -> NUMERO .)
    CADENA          reduce using rule 23 (valor -> NUMERO .)
    BOOLEAN         reduce using rule 23 (valor -> NUMERO .)
    ENTERO          reduce using rule 23 (valor -> NUMERO .)
    FLOTANTE        reduce using rule 23 (valor -> NUMERO .)
    $end            reduce using rule 23 (valor -> NUMERO .)
    PARENDER        reduce using rule 23 (valor -> NUMERO .)
    CORCHETEDER     reduce using rule 23 (valor -> NUMERO .)
    DOSPUNTOS       reduce using rule 23 (valor -> NUMERO .)


state 75

    (26) valor -> IDENTIFICADOR .

    PUNTOCOMA       reduce using rule 26 (valor -> IDENTIFICADOR .)
    COMA            reduce using rule 26 (valor -> IDENTIFICADOR .)
    OPERADOR        reduce using rule 26 (valor -> IDENTIFICADOR .)
    AND             reduce using rule 26 (valor -> IDENTIFICADOR .)
    OR              reduce using rule 26 (valor -> IDENTIFICADOR .)
    IDENTIFICADOR   reduce using rule 26 (valor -> IDENTIFICADOR .)
    COMENTARIO      reduce using rule 26 (valor -> IDENTIFICADOR .)
    LLAVEDER        reduce using rule 26 (valor -> IDENTIFICADOR .)
    PRINT           reduce using rule 26 (valor -> IDENTIFICADOR .)
    ECHO            reduce using rule 26 (valor -> IDENTIFICADOR .)
    FUNCTION        reduce using rule 26 (valor -> IDENTIFICADOR .)
    NAMEFUNCTION    reduce using rule 26 (valor -> IDENTIFICADOR .)
    RETURN          reduce using rule 26 (valor -> IDENTIFICADOR .)
    WHILE           reduce using rule 26 (valor -> IDENTIFICADOR .)
    FOR             reduce using rule 26 (valor -> IDENTIFICADOR .)
    IF              reduce using rule 26 (valor -> IDENTIFICADOR .)
    ELSEIF          reduce using rule 26 (valor -> IDENTIFICADOR .)
    ELSE            reduce using rule 26 (valor -> IDENTIFICADOR .)
    FOREACH         reduce using rule 26 (valor -> IDENTIFICADOR .)
    SWITCH          reduce using rule 26 (valor -> IDENTIFICADOR .)
    CADENA          reduce using rule 26 (valor -> IDENTIFICADOR .)
    BOOLEAN         reduce using rule 26 (valor -> IDENTIFICADOR .)
    ENTERO          reduce using rule 26 (valor -> IDENTIFICADOR .)
    FLOTANTE        reduce using rule 26 (valor -> IDENTIFICADOR .)
    $end            reduce using rule 26 (valor -> IDENTIFICADOR .)
    PARENDER        reduce using rule 26 (valor -> IDENTIFICADOR .)
    CORCHETEDER     reduce using rule 26 (valor -> IDENTIFICADOR .)
    DOSPUNTOS       reduce using rule 26 (valor -> IDENTIFICADOR .)


state 76

    (62) echo -> ECHO valores . PUNTOCOMA

    PUNTOCOMA       shift and go to state 124


state 77

    (19) valores -> valor .
    (20) valores -> valor . COMA valores

    PUNTOCOMA       reduce using rule 19 (valores -> valor .)
    PARENDER        reduce using rule 19 (valores -> valor .)
    CORCHETEDER     reduce using rule 19 (valores -> valor .)
    COMA            shift and go to state 125


state 78

    (63) funcion -> FUNCTION NAMEFUNCTION . PARENIZ parametro PARENDER LLAVEIZ

    PARENIZ         shift and go to state 126


state 79

    (66) funcion -> NAMEFUNCTION PARENIZ . parametro PARENDER PUNTOCOMA
    (64) parametro -> . IDENTIFICADOR
    (65) parametro -> . IDENTIFICADOR COMA parametro

    IDENTIFICADOR   shift and go to state 128

    parametro                      shift and go to state 127

state 80

    (68) return -> RETURN IDENTIFICADOR . PUNTOCOMA

    PUNTOCOMA       shift and go to state 129


state 81

    (76) while -> WHILE PARENIZ . comparaciones PARENDER LLAVEIZ
    (36) comparaciones -> . comparacion
    (37) comparaciones -> . comparacion operadores comparaciones
    (38) comparacion -> . variable comparadorNum variable
    (39) comparacion -> . valor comparador valor
    (34) variable -> . NUMERO
    (35) variable -> . IDENTIFICADOR
    (23) valor -> . NUMERO
    (24) valor -> . CADENA
    (25) valor -> . BOOLEAN
    (26) valor -> . IDENTIFICADOR
    (21) NUMERO -> . ENTERO
    (22) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 115
    CADENA          shift and go to state 55
    BOOLEAN         shift and go to state 56
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 57

    comparaciones                  shift and go to state 130
    comparacion                    shift and go to state 36
    variable                       shift and go to state 114
    valor                          shift and go to state 23
    NUMERO                         shift and go to state 54

state 82

    (77) for -> FOR PARENIZ . IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 131


state 83

    (83) if -> IF PARENIZ . comparaciones PARENDER LLAVEIZ
    (84) if -> IF PARENIZ . IDENTIFICADOR PARENDER LLAVEIZ
    (36) comparaciones -> . comparacion
    (37) comparaciones -> . comparacion operadores comparaciones
    (38) comparacion -> . variable comparadorNum variable
    (39) comparacion -> . valor comparador valor
    (34) variable -> . NUMERO
    (35) variable -> . IDENTIFICADOR
    (23) valor -> . NUMERO
    (24) valor -> . CADENA
    (25) valor -> . BOOLEAN
    (26) valor -> . IDENTIFICADOR
    (21) NUMERO -> . ENTERO
    (22) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 133
    CADENA          shift and go to state 55
    BOOLEAN         shift and go to state 56
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 57

    comparaciones                  shift and go to state 132
    comparacion                    shift and go to state 36
    variable                       shift and go to state 114
    valor                          shift and go to state 23
    NUMERO                         shift and go to state 54

state 84

    (87) elseif -> ELSEIF PARENIZ . comparaciones PARENDER LLAVEIZ
    (88) elseif -> ELSEIF PARENIZ . IDENTIFICADOR PARENDER LLAVEIZ
    (36) comparaciones -> . comparacion
    (37) comparaciones -> . comparacion operadores comparaciones
    (38) comparacion -> . variable comparadorNum variable
    (39) comparacion -> . valor comparador valor
    (34) variable -> . NUMERO
    (35) variable -> . IDENTIFICADOR
    (23) valor -> . NUMERO
    (24) valor -> . CADENA
    (25) valor -> . BOOLEAN
    (26) valor -> . IDENTIFICADOR
    (21) NUMERO -> . ENTERO
    (22) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 135
    CADENA          shift and go to state 55
    BOOLEAN         shift and go to state 56
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 57

    comparaciones                  shift and go to state 134
    comparacion                    shift and go to state 36
    variable                       shift and go to state 114
    valor                          shift and go to state 23
    NUMERO                         shift and go to state 54

state 85

    (90) else -> ELSE LLAVEIZ .

    IDENTIFICADOR   reduce using rule 90 (else -> ELSE LLAVEIZ .)
    COMENTARIO      reduce using rule 90 (else -> ELSE LLAVEIZ .)
    LLAVEDER        reduce using rule 90 (else -> ELSE LLAVEIZ .)
    PRINT           reduce using rule 90 (else -> ELSE LLAVEIZ .)
    ECHO            reduce using rule 90 (else -> ELSE LLAVEIZ .)
    FUNCTION        reduce using rule 90 (else -> ELSE LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 90 (else -> ELSE LLAVEIZ .)
    RETURN          reduce using rule 90 (else -> ELSE LLAVEIZ .)
    WHILE           reduce using rule 90 (else -> ELSE LLAVEIZ .)
    FOR             reduce using rule 90 (else -> ELSE LLAVEIZ .)
    IF              reduce using rule 90 (else -> ELSE LLAVEIZ .)
    ELSEIF          reduce using rule 90 (else -> ELSE LLAVEIZ .)
    ELSE            reduce using rule 90 (else -> ELSE LLAVEIZ .)
    FOREACH         reduce using rule 90 (else -> ELSE LLAVEIZ .)
    SWITCH          reduce using rule 90 (else -> ELSE LLAVEIZ .)
    CADENA          reduce using rule 90 (else -> ELSE LLAVEIZ .)
    BOOLEAN         reduce using rule 90 (else -> ELSE LLAVEIZ .)
    ENTERO          reduce using rule 90 (else -> ELSE LLAVEIZ .)
    FLOTANTE        reduce using rule 90 (else -> ELSE LLAVEIZ .)
    $end            reduce using rule 90 (else -> ELSE LLAVEIZ .)


state 86

    (78) foreach -> FOREACH PARENIZ . IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 136


state 87

    (79) switch -> SWITCH PARENIZ . valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER
    (23) valor -> . NUMERO
    (24) valor -> . CADENA
    (25) valor -> . BOOLEAN
    (26) valor -> . IDENTIFICADOR
    (21) NUMERO -> . ENTERO
    (22) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 55
    BOOLEAN         shift and go to state 56
    IDENTIFICADOR   shift and go to state 75
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 57

    valor                          shift and go to state 137
    NUMERO                         shift and go to state 74

state 88

    (38) comparacion -> variable comparadorNum . variable
    (34) variable -> . NUMERO
    (35) variable -> . IDENTIFICADOR
    (21) NUMERO -> . ENTERO
    (22) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 139
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 57

    variable                       shift and go to state 138
    NUMERO                         shift and go to state 118

state 89

    (50) operacion -> variable operadorAritmetico . variable
    (34) variable -> . NUMERO
    (35) variable -> . IDENTIFICADOR
    (21) NUMERO -> . ENTERO
    (22) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 139
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 57

    variable                       shift and go to state 140
    NUMERO                         shift and go to state 118

state 90

    (27) comparadorNum -> MAYORQUE .

    IDENTIFICADOR   reduce using rule 27 (comparadorNum -> MAYORQUE .)
    ENTERO          reduce using rule 27 (comparadorNum -> MAYORQUE .)
    FLOTANTE        reduce using rule 27 (comparadorNum -> MAYORQUE .)


state 91

    (28) comparadorNum -> MAYORIGUALQUE .

    IDENTIFICADOR   reduce using rule 28 (comparadorNum -> MAYORIGUALQUE .)
    ENTERO          reduce using rule 28 (comparadorNum -> MAYORIGUALQUE .)
    FLOTANTE        reduce using rule 28 (comparadorNum -> MAYORIGUALQUE .)


state 92

    (29) comparadorNum -> MENORQUE .

    IDENTIFICADOR   reduce using rule 29 (comparadorNum -> MENORQUE .)
    ENTERO          reduce using rule 29 (comparadorNum -> MENORQUE .)
    FLOTANTE        reduce using rule 29 (comparadorNum -> MENORQUE .)


state 93

    (30) comparadorNum -> MENORIGUALQUE .

    IDENTIFICADOR   reduce using rule 30 (comparadorNum -> MENORIGUALQUE .)
    ENTERO          reduce using rule 30 (comparadorNum -> MENORIGUALQUE .)
    FLOTANTE        reduce using rule 30 (comparadorNum -> MENORIGUALQUE .)


state 94

    (26) valor -> IDENTIFICADOR .
    (49) operaciones -> IDENTIFICADOR . ASIGNAR operaciones
    (35) variable -> IDENTIFICADOR .

    PUNTOCOMA       reduce using rule 26 (valor -> IDENTIFICADOR .)
    ASIGNAR         shift and go to state 141
    SUMA            reduce using rule 35 (variable -> IDENTIFICADOR .)
    RESTA           reduce using rule 35 (variable -> IDENTIFICADOR .)
    MULT            reduce using rule 35 (variable -> IDENTIFICADOR .)
    DIVISION        reduce using rule 35 (variable -> IDENTIFICADOR .)
    DIVISIONENTERA  reduce using rule 35 (variable -> IDENTIFICADOR .)
    MODULO          reduce using rule 35 (variable -> IDENTIFICADOR .)
    POTENCIA        reduce using rule 35 (variable -> IDENTIFICADOR .)


state 95

    (58) asignacion -> IDENTIFICADOR ASIGNAR valor . PUNTOCOMA

    PUNTOCOMA       shift and go to state 142


state 96

    (49) operaciones -> IDENTIFICADOR ASIGNAR operaciones .

    IDENTIFICADOR   reduce using rule 49 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    COMENTARIO      reduce using rule 49 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    LLAVEDER        reduce using rule 49 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    PRINT           reduce using rule 49 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    ECHO            reduce using rule 49 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    FUNCTION        reduce using rule 49 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    NAMEFUNCTION    reduce using rule 49 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    RETURN          reduce using rule 49 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    WHILE           reduce using rule 49 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    FOR             reduce using rule 49 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    IF              reduce using rule 49 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    ELSEIF          reduce using rule 49 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    ELSE            reduce using rule 49 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    FOREACH         reduce using rule 49 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    SWITCH          reduce using rule 49 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    CADENA          reduce using rule 49 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    BOOLEAN         reduce using rule 49 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    ENTERO          reduce using rule 49 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    FLOTANTE        reduce using rule 49 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    $end            reduce using rule 49 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)


state 97

    (67) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION . PARENIZ parametro PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 143


state 98

    (101) queue -> IDENTIFICADOR ASIGNAR NEW . QUEUE PARENIZ PARENDER PUNTOCOMA
    (96) stack -> IDENTIFICADOR ASIGNAR NEW . STACK PARENIZ PARENDER PUNTOCOMA

    QUEUE           shift and go to state 144
    STACK           shift and go to state 145


state 99

    (109) array -> IDENTIFICADOR ASIGNAR ARRAY . PARENIZ PARENDER PUNTOCOMA
    (110) array -> IDENTIFICADOR ASIGNAR ARRAY . PARENIZ valores PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 146


state 100

    (111) array -> IDENTIFICADOR ASIGNAR CORCHETEIZ . valores CORCHETEDER PUNTOCOMA
    (19) valores -> . valor
    (20) valores -> . valor COMA valores
    (23) valor -> . NUMERO
    (24) valor -> . CADENA
    (25) valor -> . BOOLEAN
    (26) valor -> . IDENTIFICADOR
    (21) NUMERO -> . ENTERO
    (22) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 55
    BOOLEAN         shift and go to state 56
    IDENTIFICADOR   shift and go to state 75
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 57

    valores                        shift and go to state 147
    valor                          shift and go to state 77
    NUMERO                         shift and go to state 74

state 101

    (23) valor -> NUMERO .
    (34) variable -> NUMERO .

    PUNTOCOMA       reduce using rule 23 (valor -> NUMERO .)
    SUMA            reduce using rule 34 (variable -> NUMERO .)
    RESTA           reduce using rule 34 (variable -> NUMERO .)
    MULT            reduce using rule 34 (variable -> NUMERO .)
    DIVISION        reduce using rule 34 (variable -> NUMERO .)
    DIVISIONENTERA  reduce using rule 34 (variable -> NUMERO .)
    MODULO          reduce using rule 34 (variable -> NUMERO .)
    POTENCIA        reduce using rule 34 (variable -> NUMERO .)


state 102

    (50) operacion -> variable . operadorAritmetico variable
    (51) operadorAritmetico -> . SUMA
    (52) operadorAritmetico -> . RESTA
    (53) operadorAritmetico -> . MULT
    (54) operadorAritmetico -> . DIVISION
    (55) operadorAritmetico -> . DIVISIONENTERA
    (56) operadorAritmetico -> . MODULO
    (57) operadorAritmetico -> . POTENCIA

    SUMA            shift and go to state 5
    RESTA           shift and go to state 6
    MULT            shift and go to state 7
    DIVISION        shift and go to state 8
    DIVISIONENTERA  shift and go to state 9
    MODULO          shift and go to state 10
    POTENCIA        shift and go to state 11

    operadorAritmetico             shift and go to state 89

state 103

    (102) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE . PARENIZ valor PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 148


state 104

    (103) queue -> IDENTIFICADOR FLECHASIMPLE COUNT . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 149


state 105

    (104) queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 150


state 106

    (105) queue -> IDENTIFICADOR FLECHASIMPLE NEXT . PARENIZ PARENDER PUNTOCOMA
    (97) stack -> IDENTIFICADOR FLECHASIMPLE NEXT . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 151


state 107

    (106) queue -> IDENTIFICADOR FLECHASIMPLE REWIND . PARENIZ PARENDER PUNTOCOMA
    (98) stack -> IDENTIFICADOR FLECHASIMPLE REWIND . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 152


state 108

    (107) queue -> IDENTIFICADOR FLECHASIMPLE CURRENT . PARENIZ PARENDER PUNTOCOMA
    (99) stack -> IDENTIFICADOR FLECHASIMPLE CURRENT . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 153


state 109

    (108) queue -> IDENTIFICADOR FLECHASIMPLE VALID . PARENIZ PARENDER
    (100) stack -> IDENTIFICADOR FLECHASIMPLE VALID . PARENIZ PARENDER

    PARENIZ         shift and go to state 154


state 110

    (94) stack -> IDENTIFICADOR FLECHASIMPLE PUSH . PARENIZ valor PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 155


state 111

    (95) stack -> IDENTIFICADOR FLECHASIMPLE POP . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 156


state 112

    (39) comparacion -> valor comparador valor .

    OPERADOR        reduce using rule 39 (comparacion -> valor comparador valor .)
    AND             reduce using rule 39 (comparacion -> valor comparador valor .)
    OR              reduce using rule 39 (comparacion -> valor comparador valor .)
    IDENTIFICADOR   reduce using rule 39 (comparacion -> valor comparador valor .)
    COMENTARIO      reduce using rule 39 (comparacion -> valor comparador valor .)
    LLAVEDER        reduce using rule 39 (comparacion -> valor comparador valor .)
    PRINT           reduce using rule 39 (comparacion -> valor comparador valor .)
    ECHO            reduce using rule 39 (comparacion -> valor comparador valor .)
    FUNCTION        reduce using rule 39 (comparacion -> valor comparador valor .)
    NAMEFUNCTION    reduce using rule 39 (comparacion -> valor comparador valor .)
    RETURN          reduce using rule 39 (comparacion -> valor comparador valor .)
    WHILE           reduce using rule 39 (comparacion -> valor comparador valor .)
    FOR             reduce using rule 39 (comparacion -> valor comparador valor .)
    IF              reduce using rule 39 (comparacion -> valor comparador valor .)
    ELSEIF          reduce using rule 39 (comparacion -> valor comparador valor .)
    ELSE            reduce using rule 39 (comparacion -> valor comparador valor .)
    FOREACH         reduce using rule 39 (comparacion -> valor comparador valor .)
    SWITCH          reduce using rule 39 (comparacion -> valor comparador valor .)
    CADENA          reduce using rule 39 (comparacion -> valor comparador valor .)
    BOOLEAN         reduce using rule 39 (comparacion -> valor comparador valor .)
    ENTERO          reduce using rule 39 (comparacion -> valor comparador valor .)
    FLOTANTE        reduce using rule 39 (comparacion -> valor comparador valor .)
    $end            reduce using rule 39 (comparacion -> valor comparador valor .)
    PARENDER        reduce using rule 39 (comparacion -> valor comparador valor .)


state 113

    (37) comparaciones -> comparacion operadores comparaciones .

    IDENTIFICADOR   reduce using rule 37 (comparaciones -> comparacion operadores comparaciones .)
    COMENTARIO      reduce using rule 37 (comparaciones -> comparacion operadores comparaciones .)
    LLAVEDER        reduce using rule 37 (comparaciones -> comparacion operadores comparaciones .)
    PRINT           reduce using rule 37 (comparaciones -> comparacion operadores comparaciones .)
    ECHO            reduce using rule 37 (comparaciones -> comparacion operadores comparaciones .)
    FUNCTION        reduce using rule 37 (comparaciones -> comparacion operadores comparaciones .)
    NAMEFUNCTION    reduce using rule 37 (comparaciones -> comparacion operadores comparaciones .)
    RETURN          reduce using rule 37 (comparaciones -> comparacion operadores comparaciones .)
    WHILE           reduce using rule 37 (comparaciones -> comparacion operadores comparaciones .)
    FOR             reduce using rule 37 (comparaciones -> comparacion operadores comparaciones .)
    IF              reduce using rule 37 (comparaciones -> comparacion operadores comparaciones .)
    ELSEIF          reduce using rule 37 (comparaciones -> comparacion operadores comparaciones .)
    ELSE            reduce using rule 37 (comparaciones -> comparacion operadores comparaciones .)
    FOREACH         reduce using rule 37 (comparaciones -> comparacion operadores comparaciones .)
    SWITCH          reduce using rule 37 (comparaciones -> comparacion operadores comparaciones .)
    CADENA          reduce using rule 37 (comparaciones -> comparacion operadores comparaciones .)
    BOOLEAN         reduce using rule 37 (comparaciones -> comparacion operadores comparaciones .)
    ENTERO          reduce using rule 37 (comparaciones -> comparacion operadores comparaciones .)
    FLOTANTE        reduce using rule 37 (comparaciones -> comparacion operadores comparaciones .)
    $end            reduce using rule 37 (comparaciones -> comparacion operadores comparaciones .)
    PARENDER        reduce using rule 37 (comparaciones -> comparacion operadores comparaciones .)


state 114

    (38) comparacion -> variable . comparadorNum variable
    (27) comparadorNum -> . MAYORQUE
    (28) comparadorNum -> . MAYORIGUALQUE
    (29) comparadorNum -> . MENORQUE
    (30) comparadorNum -> . MENORIGUALQUE

    MAYORQUE        shift and go to state 90
    MAYORIGUALQUE   shift and go to state 91
    MENORQUE        shift and go to state 92
    MENORIGUALQUE   shift and go to state 93

    comparadorNum                  shift and go to state 88

state 115

    (35) variable -> IDENTIFICADOR .
    (26) valor -> IDENTIFICADOR .

    MAYORQUE        reduce using rule 35 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 35 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 35 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 35 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 26 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 26 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 26 (valor -> IDENTIFICADOR .)


state 116

    (48) operaciones -> operacion operadorAritmetico operaciones .

    IDENTIFICADOR   reduce using rule 48 (operaciones -> operacion operadorAritmetico operaciones .)
    COMENTARIO      reduce using rule 48 (operaciones -> operacion operadorAritmetico operaciones .)
    LLAVEDER        reduce using rule 48 (operaciones -> operacion operadorAritmetico operaciones .)
    PRINT           reduce using rule 48 (operaciones -> operacion operadorAritmetico operaciones .)
    ECHO            reduce using rule 48 (operaciones -> operacion operadorAritmetico operaciones .)
    FUNCTION        reduce using rule 48 (operaciones -> operacion operadorAritmetico operaciones .)
    NAMEFUNCTION    reduce using rule 48 (operaciones -> operacion operadorAritmetico operaciones .)
    RETURN          reduce using rule 48 (operaciones -> operacion operadorAritmetico operaciones .)
    WHILE           reduce using rule 48 (operaciones -> operacion operadorAritmetico operaciones .)
    FOR             reduce using rule 48 (operaciones -> operacion operadorAritmetico operaciones .)
    IF              reduce using rule 48 (operaciones -> operacion operadorAritmetico operaciones .)
    ELSEIF          reduce using rule 48 (operaciones -> operacion operadorAritmetico operaciones .)
    ELSE            reduce using rule 48 (operaciones -> operacion operadorAritmetico operaciones .)
    FOREACH         reduce using rule 48 (operaciones -> operacion operadorAritmetico operaciones .)
    SWITCH          reduce using rule 48 (operaciones -> operacion operadorAritmetico operaciones .)
    CADENA          reduce using rule 48 (operaciones -> operacion operadorAritmetico operaciones .)
    BOOLEAN         reduce using rule 48 (operaciones -> operacion operadorAritmetico operaciones .)
    ENTERO          reduce using rule 48 (operaciones -> operacion operadorAritmetico operaciones .)
    FLOTANTE        reduce using rule 48 (operaciones -> operacion operadorAritmetico operaciones .)
    $end            reduce using rule 48 (operaciones -> operacion operadorAritmetico operaciones .)


state 117

    (49) operaciones -> IDENTIFICADOR . ASIGNAR operaciones
    (35) variable -> IDENTIFICADOR .

    ASIGNAR         shift and go to state 141
    SUMA            reduce using rule 35 (variable -> IDENTIFICADOR .)
    RESTA           reduce using rule 35 (variable -> IDENTIFICADOR .)
    MULT            reduce using rule 35 (variable -> IDENTIFICADOR .)
    DIVISION        reduce using rule 35 (variable -> IDENTIFICADOR .)
    DIVISIONENTERA  reduce using rule 35 (variable -> IDENTIFICADOR .)
    MODULO          reduce using rule 35 (variable -> IDENTIFICADOR .)
    POTENCIA        reduce using rule 35 (variable -> IDENTIFICADOR .)


state 118

    (34) variable -> NUMERO .

    SUMA            reduce using rule 34 (variable -> NUMERO .)
    RESTA           reduce using rule 34 (variable -> NUMERO .)
    MULT            reduce using rule 34 (variable -> NUMERO .)
    DIVISION        reduce using rule 34 (variable -> NUMERO .)
    DIVISIONENTERA  reduce using rule 34 (variable -> NUMERO .)
    MODULO          reduce using rule 34 (variable -> NUMERO .)
    POTENCIA        reduce using rule 34 (variable -> NUMERO .)
    OPERADOR        reduce using rule 34 (variable -> NUMERO .)
    AND             reduce using rule 34 (variable -> NUMERO .)
    OR              reduce using rule 34 (variable -> NUMERO .)
    IDENTIFICADOR   reduce using rule 34 (variable -> NUMERO .)
    COMENTARIO      reduce using rule 34 (variable -> NUMERO .)
    LLAVEDER        reduce using rule 34 (variable -> NUMERO .)
    PRINT           reduce using rule 34 (variable -> NUMERO .)
    ECHO            reduce using rule 34 (variable -> NUMERO .)
    FUNCTION        reduce using rule 34 (variable -> NUMERO .)
    NAMEFUNCTION    reduce using rule 34 (variable -> NUMERO .)
    RETURN          reduce using rule 34 (variable -> NUMERO .)
    WHILE           reduce using rule 34 (variable -> NUMERO .)
    FOR             reduce using rule 34 (variable -> NUMERO .)
    IF              reduce using rule 34 (variable -> NUMERO .)
    ELSEIF          reduce using rule 34 (variable -> NUMERO .)
    ELSE            reduce using rule 34 (variable -> NUMERO .)
    FOREACH         reduce using rule 34 (variable -> NUMERO .)
    SWITCH          reduce using rule 34 (variable -> NUMERO .)
    CADENA          reduce using rule 34 (variable -> NUMERO .)
    BOOLEAN         reduce using rule 34 (variable -> NUMERO .)
    ENTERO          reduce using rule 34 (variable -> NUMERO .)
    FLOTANTE        reduce using rule 34 (variable -> NUMERO .)
    $end            reduce using rule 34 (variable -> NUMERO .)
    PARENDER        reduce using rule 34 (variable -> NUMERO .)


state 119

    (85) elseif -> LLAVEDER ELSEIF PARENIZ . comparaciones PARENDER LLAVEIZ
    (86) elseif -> LLAVEDER ELSEIF PARENIZ . IDENTIFICADOR PARENDER LLAVEIZ
    (36) comparaciones -> . comparacion
    (37) comparaciones -> . comparacion operadores comparaciones
    (38) comparacion -> . variable comparadorNum variable
    (39) comparacion -> . valor comparador valor
    (34) variable -> . NUMERO
    (35) variable -> . IDENTIFICADOR
    (23) valor -> . NUMERO
    (24) valor -> . CADENA
    (25) valor -> . BOOLEAN
    (26) valor -> . IDENTIFICADOR
    (21) NUMERO -> . ENTERO
    (22) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 158
    CADENA          shift and go to state 55
    BOOLEAN         shift and go to state 56
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 57

    comparaciones                  shift and go to state 157
    comparacion                    shift and go to state 36
    variable                       shift and go to state 114
    valor                          shift and go to state 23
    NUMERO                         shift and go to state 54

state 120

    (89) else -> LLAVEDER ELSE LLAVEIZ .

    IDENTIFICADOR   reduce using rule 89 (else -> LLAVEDER ELSE LLAVEIZ .)
    COMENTARIO      reduce using rule 89 (else -> LLAVEDER ELSE LLAVEIZ .)
    LLAVEDER        reduce using rule 89 (else -> LLAVEDER ELSE LLAVEIZ .)
    PRINT           reduce using rule 89 (else -> LLAVEDER ELSE LLAVEIZ .)
    ECHO            reduce using rule 89 (else -> LLAVEDER ELSE LLAVEIZ .)
    FUNCTION        reduce using rule 89 (else -> LLAVEDER ELSE LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 89 (else -> LLAVEDER ELSE LLAVEIZ .)
    RETURN          reduce using rule 89 (else -> LLAVEDER ELSE LLAVEIZ .)
    WHILE           reduce using rule 89 (else -> LLAVEDER ELSE LLAVEIZ .)
    FOR             reduce using rule 89 (else -> LLAVEDER ELSE LLAVEIZ .)
    IF              reduce using rule 89 (else -> LLAVEDER ELSE LLAVEIZ .)
    ELSEIF          reduce using rule 89 (else -> LLAVEDER ELSE LLAVEIZ .)
    ELSE            reduce using rule 89 (else -> LLAVEDER ELSE LLAVEIZ .)
    FOREACH         reduce using rule 89 (else -> LLAVEDER ELSE LLAVEIZ .)
    SWITCH          reduce using rule 89 (else -> LLAVEDER ELSE LLAVEIZ .)
    CADENA          reduce using rule 89 (else -> LLAVEDER ELSE LLAVEIZ .)
    BOOLEAN         reduce using rule 89 (else -> LLAVEDER ELSE LLAVEIZ .)
    ENTERO          reduce using rule 89 (else -> LLAVEDER ELSE LLAVEIZ .)
    FLOTANTE        reduce using rule 89 (else -> LLAVEDER ELSE LLAVEIZ .)
    $end            reduce using rule 89 (else -> LLAVEDER ELSE LLAVEIZ .)


state 121

    (59) print -> PRINT PARENIZ valores . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 159


state 122

    (61) print -> PRINT PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 160


state 123

    (60) print -> PRINT valor PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 60 (print -> PRINT valor PUNTOCOMA .)
    COMENTARIO      reduce using rule 60 (print -> PRINT valor PUNTOCOMA .)
    LLAVEDER        reduce using rule 60 (print -> PRINT valor PUNTOCOMA .)
    PRINT           reduce using rule 60 (print -> PRINT valor PUNTOCOMA .)
    ECHO            reduce using rule 60 (print -> PRINT valor PUNTOCOMA .)
    FUNCTION        reduce using rule 60 (print -> PRINT valor PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 60 (print -> PRINT valor PUNTOCOMA .)
    RETURN          reduce using rule 60 (print -> PRINT valor PUNTOCOMA .)
    WHILE           reduce using rule 60 (print -> PRINT valor PUNTOCOMA .)
    FOR             reduce using rule 60 (print -> PRINT valor PUNTOCOMA .)
    IF              reduce using rule 60 (print -> PRINT valor PUNTOCOMA .)
    ELSEIF          reduce using rule 60 (print -> PRINT valor PUNTOCOMA .)
    ELSE            reduce using rule 60 (print -> PRINT valor PUNTOCOMA .)
    FOREACH         reduce using rule 60 (print -> PRINT valor PUNTOCOMA .)
    SWITCH          reduce using rule 60 (print -> PRINT valor PUNTOCOMA .)
    CADENA          reduce using rule 60 (print -> PRINT valor PUNTOCOMA .)
    BOOLEAN         reduce using rule 60 (print -> PRINT valor PUNTOCOMA .)
    ENTERO          reduce using rule 60 (print -> PRINT valor PUNTOCOMA .)
    FLOTANTE        reduce using rule 60 (print -> PRINT valor PUNTOCOMA .)
    $end            reduce using rule 60 (print -> PRINT valor PUNTOCOMA .)


state 124

    (62) echo -> ECHO valores PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 62 (echo -> ECHO valores PUNTOCOMA .)
    COMENTARIO      reduce using rule 62 (echo -> ECHO valores PUNTOCOMA .)
    LLAVEDER        reduce using rule 62 (echo -> ECHO valores PUNTOCOMA .)
    PRINT           reduce using rule 62 (echo -> ECHO valores PUNTOCOMA .)
    ECHO            reduce using rule 62 (echo -> ECHO valores PUNTOCOMA .)
    FUNCTION        reduce using rule 62 (echo -> ECHO valores PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 62 (echo -> ECHO valores PUNTOCOMA .)
    RETURN          reduce using rule 62 (echo -> ECHO valores PUNTOCOMA .)
    WHILE           reduce using rule 62 (echo -> ECHO valores PUNTOCOMA .)
    FOR             reduce using rule 62 (echo -> ECHO valores PUNTOCOMA .)
    IF              reduce using rule 62 (echo -> ECHO valores PUNTOCOMA .)
    ELSEIF          reduce using rule 62 (echo -> ECHO valores PUNTOCOMA .)
    ELSE            reduce using rule 62 (echo -> ECHO valores PUNTOCOMA .)
    FOREACH         reduce using rule 62 (echo -> ECHO valores PUNTOCOMA .)
    SWITCH          reduce using rule 62 (echo -> ECHO valores PUNTOCOMA .)
    CADENA          reduce using rule 62 (echo -> ECHO valores PUNTOCOMA .)
    BOOLEAN         reduce using rule 62 (echo -> ECHO valores PUNTOCOMA .)
    ENTERO          reduce using rule 62 (echo -> ECHO valores PUNTOCOMA .)
    FLOTANTE        reduce using rule 62 (echo -> ECHO valores PUNTOCOMA .)
    $end            reduce using rule 62 (echo -> ECHO valores PUNTOCOMA .)
    BREAK           reduce using rule 62 (echo -> ECHO valores PUNTOCOMA .)


state 125

    (20) valores -> valor COMA . valores
    (19) valores -> . valor
    (20) valores -> . valor COMA valores
    (23) valor -> . NUMERO
    (24) valor -> . CADENA
    (25) valor -> . BOOLEAN
    (26) valor -> . IDENTIFICADOR
    (21) NUMERO -> . ENTERO
    (22) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 55
    BOOLEAN         shift and go to state 56
    IDENTIFICADOR   shift and go to state 75
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 57

    valor                          shift and go to state 77
    valores                        shift and go to state 161
    NUMERO                         shift and go to state 74

state 126

    (63) funcion -> FUNCTION NAMEFUNCTION PARENIZ . parametro PARENDER LLAVEIZ
    (64) parametro -> . IDENTIFICADOR
    (65) parametro -> . IDENTIFICADOR COMA parametro

    IDENTIFICADOR   shift and go to state 128

    parametro                      shift and go to state 162

state 127

    (66) funcion -> NAMEFUNCTION PARENIZ parametro . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 163


state 128

    (64) parametro -> IDENTIFICADOR .
    (65) parametro -> IDENTIFICADOR . COMA parametro

    PARENDER        reduce using rule 64 (parametro -> IDENTIFICADOR .)
    COMA            shift and go to state 164


state 129

    (68) return -> RETURN IDENTIFICADOR PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 68 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    COMENTARIO      reduce using rule 68 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    LLAVEDER        reduce using rule 68 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    PRINT           reduce using rule 68 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    ECHO            reduce using rule 68 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    FUNCTION        reduce using rule 68 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 68 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    RETURN          reduce using rule 68 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    WHILE           reduce using rule 68 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    FOR             reduce using rule 68 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    IF              reduce using rule 68 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    ELSEIF          reduce using rule 68 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    ELSE            reduce using rule 68 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    FOREACH         reduce using rule 68 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    SWITCH          reduce using rule 68 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    CADENA          reduce using rule 68 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    BOOLEAN         reduce using rule 68 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    ENTERO          reduce using rule 68 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    FLOTANTE        reduce using rule 68 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    $end            reduce using rule 68 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)


state 130

    (76) while -> WHILE PARENIZ comparaciones . PARENDER LLAVEIZ

    PARENDER        shift and go to state 165


state 131

    (77) for -> FOR PARENIZ IDENTIFICADOR . ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    ASIGNAR         shift and go to state 166


state 132

    (83) if -> IF PARENIZ comparaciones . PARENDER LLAVEIZ

    PARENDER        shift and go to state 167


state 133

    (84) if -> IF PARENIZ IDENTIFICADOR . PARENDER LLAVEIZ
    (35) variable -> IDENTIFICADOR .
    (26) valor -> IDENTIFICADOR .

    PARENDER        shift and go to state 168
    MAYORQUE        reduce using rule 35 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 35 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 35 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 35 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 26 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 26 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 26 (valor -> IDENTIFICADOR .)


state 134

    (87) elseif -> ELSEIF PARENIZ comparaciones . PARENDER LLAVEIZ

    PARENDER        shift and go to state 169


state 135

    (88) elseif -> ELSEIF PARENIZ IDENTIFICADOR . PARENDER LLAVEIZ
    (35) variable -> IDENTIFICADOR .
    (26) valor -> IDENTIFICADOR .

    PARENDER        shift and go to state 170
    MAYORQUE        reduce using rule 35 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 35 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 35 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 35 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 26 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 26 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 26 (valor -> IDENTIFICADOR .)


state 136

    (78) foreach -> FOREACH PARENIZ IDENTIFICADOR . AS IDENTIFICADOR PARENDER LLAVEIZ

    AS              shift and go to state 171


state 137

    (79) switch -> SWITCH PARENIZ valor . PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER

    PARENDER        shift and go to state 172


state 138

    (38) comparacion -> variable comparadorNum variable .

    OPERADOR        reduce using rule 38 (comparacion -> variable comparadorNum variable .)
    AND             reduce using rule 38 (comparacion -> variable comparadorNum variable .)
    OR              reduce using rule 38 (comparacion -> variable comparadorNum variable .)
    IDENTIFICADOR   reduce using rule 38 (comparacion -> variable comparadorNum variable .)
    COMENTARIO      reduce using rule 38 (comparacion -> variable comparadorNum variable .)
    LLAVEDER        reduce using rule 38 (comparacion -> variable comparadorNum variable .)
    PRINT           reduce using rule 38 (comparacion -> variable comparadorNum variable .)
    ECHO            reduce using rule 38 (comparacion -> variable comparadorNum variable .)
    FUNCTION        reduce using rule 38 (comparacion -> variable comparadorNum variable .)
    NAMEFUNCTION    reduce using rule 38 (comparacion -> variable comparadorNum variable .)
    RETURN          reduce using rule 38 (comparacion -> variable comparadorNum variable .)
    WHILE           reduce using rule 38 (comparacion -> variable comparadorNum variable .)
    FOR             reduce using rule 38 (comparacion -> variable comparadorNum variable .)
    IF              reduce using rule 38 (comparacion -> variable comparadorNum variable .)
    ELSEIF          reduce using rule 38 (comparacion -> variable comparadorNum variable .)
    ELSE            reduce using rule 38 (comparacion -> variable comparadorNum variable .)
    FOREACH         reduce using rule 38 (comparacion -> variable comparadorNum variable .)
    SWITCH          reduce using rule 38 (comparacion -> variable comparadorNum variable .)
    CADENA          reduce using rule 38 (comparacion -> variable comparadorNum variable .)
    BOOLEAN         reduce using rule 38 (comparacion -> variable comparadorNum variable .)
    ENTERO          reduce using rule 38 (comparacion -> variable comparadorNum variable .)
    FLOTANTE        reduce using rule 38 (comparacion -> variable comparadorNum variable .)
    $end            reduce using rule 38 (comparacion -> variable comparadorNum variable .)
    PARENDER        reduce using rule 38 (comparacion -> variable comparadorNum variable .)


state 139

    (35) variable -> IDENTIFICADOR .

    OPERADOR        reduce using rule 35 (variable -> IDENTIFICADOR .)
    AND             reduce using rule 35 (variable -> IDENTIFICADOR .)
    OR              reduce using rule 35 (variable -> IDENTIFICADOR .)
    IDENTIFICADOR   reduce using rule 35 (variable -> IDENTIFICADOR .)
    COMENTARIO      reduce using rule 35 (variable -> IDENTIFICADOR .)
    LLAVEDER        reduce using rule 35 (variable -> IDENTIFICADOR .)
    PRINT           reduce using rule 35 (variable -> IDENTIFICADOR .)
    ECHO            reduce using rule 35 (variable -> IDENTIFICADOR .)
    FUNCTION        reduce using rule 35 (variable -> IDENTIFICADOR .)
    NAMEFUNCTION    reduce using rule 35 (variable -> IDENTIFICADOR .)
    RETURN          reduce using rule 35 (variable -> IDENTIFICADOR .)
    WHILE           reduce using rule 35 (variable -> IDENTIFICADOR .)
    FOR             reduce using rule 35 (variable -> IDENTIFICADOR .)
    IF              reduce using rule 35 (variable -> IDENTIFICADOR .)
    ELSEIF          reduce using rule 35 (variable -> IDENTIFICADOR .)
    ELSE            reduce using rule 35 (variable -> IDENTIFICADOR .)
    FOREACH         reduce using rule 35 (variable -> IDENTIFICADOR .)
    SWITCH          reduce using rule 35 (variable -> IDENTIFICADOR .)
    CADENA          reduce using rule 35 (variable -> IDENTIFICADOR .)
    BOOLEAN         reduce using rule 35 (variable -> IDENTIFICADOR .)
    ENTERO          reduce using rule 35 (variable -> IDENTIFICADOR .)
    FLOTANTE        reduce using rule 35 (variable -> IDENTIFICADOR .)
    $end            reduce using rule 35 (variable -> IDENTIFICADOR .)
    PARENDER        reduce using rule 35 (variable -> IDENTIFICADOR .)
    SUMA            reduce using rule 35 (variable -> IDENTIFICADOR .)
    RESTA           reduce using rule 35 (variable -> IDENTIFICADOR .)
    MULT            reduce using rule 35 (variable -> IDENTIFICADOR .)
    DIVISION        reduce using rule 35 (variable -> IDENTIFICADOR .)
    DIVISIONENTERA  reduce using rule 35 (variable -> IDENTIFICADOR .)
    MODULO          reduce using rule 35 (variable -> IDENTIFICADOR .)
    POTENCIA        reduce using rule 35 (variable -> IDENTIFICADOR .)


state 140

    (50) operacion -> variable operadorAritmetico variable .

    SUMA            reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    RESTA           reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    MULT            reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    DIVISION        reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    DIVISIONENTERA  reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    MODULO          reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    POTENCIA        reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    IDENTIFICADOR   reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    COMENTARIO      reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    LLAVEDER        reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    PRINT           reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    ECHO            reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    FUNCTION        reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    NAMEFUNCTION    reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    RETURN          reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    WHILE           reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    FOR             reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    IF              reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    ELSEIF          reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    ELSE            reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    FOREACH         reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    SWITCH          reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    CADENA          reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    BOOLEAN         reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    ENTERO          reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    FLOTANTE        reduce using rule 50 (operacion -> variable operadorAritmetico variable .)
    $end            reduce using rule 50 (operacion -> variable operadorAritmetico variable .)


state 141

    (49) operaciones -> IDENTIFICADOR ASIGNAR . operaciones
    (47) operaciones -> . operacion
    (48) operaciones -> . operacion operadorAritmetico operaciones
    (49) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (50) operacion -> . variable operadorAritmetico variable
    (34) variable -> . NUMERO
    (35) variable -> . IDENTIFICADOR
    (21) NUMERO -> . ENTERO
    (22) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 117
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 57

    operaciones                    shift and go to state 96
    operacion                      shift and go to state 37
    variable                       shift and go to state 102
    NUMERO                         shift and go to state 118

state 142

    (58) asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 58 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    COMENTARIO      reduce using rule 58 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    LLAVEDER        reduce using rule 58 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    PRINT           reduce using rule 58 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    ECHO            reduce using rule 58 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    FUNCTION        reduce using rule 58 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 58 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    RETURN          reduce using rule 58 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    WHILE           reduce using rule 58 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    FOR             reduce using rule 58 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    IF              reduce using rule 58 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    ELSEIF          reduce using rule 58 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    ELSE            reduce using rule 58 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    FOREACH         reduce using rule 58 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    SWITCH          reduce using rule 58 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    CADENA          reduce using rule 58 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    BOOLEAN         reduce using rule 58 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    ENTERO          reduce using rule 58 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    FLOTANTE        reduce using rule 58 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    $end            reduce using rule 58 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)


state 143

    (67) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ . parametro PARENDER PUNTOCOMA
    (64) parametro -> . IDENTIFICADOR
    (65) parametro -> . IDENTIFICADOR COMA parametro

    IDENTIFICADOR   shift and go to state 128

    parametro                      shift and go to state 173

state 144

    (101) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 174


state 145

    (96) stack -> IDENTIFICADOR ASIGNAR NEW STACK . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 175


state 146

    (109) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ . PARENDER PUNTOCOMA
    (110) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ . valores PARENDER PUNTOCOMA
    (19) valores -> . valor
    (20) valores -> . valor COMA valores
    (23) valor -> . NUMERO
    (24) valor -> . CADENA
    (25) valor -> . BOOLEAN
    (26) valor -> . IDENTIFICADOR
    (21) NUMERO -> . ENTERO
    (22) NUMERO -> . FLOTANTE

    PARENDER        shift and go to state 176
    CADENA          shift and go to state 55
    BOOLEAN         shift and go to state 56
    IDENTIFICADOR   shift and go to state 75
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 57

    valores                        shift and go to state 177
    valor                          shift and go to state 77
    NUMERO                         shift and go to state 74

state 147

    (111) array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores . CORCHETEDER PUNTOCOMA

    CORCHETEDER     shift and go to state 178


state 148

    (102) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ . valor PARENDER PUNTOCOMA
    (23) valor -> . NUMERO
    (24) valor -> . CADENA
    (25) valor -> . BOOLEAN
    (26) valor -> . IDENTIFICADOR
    (21) NUMERO -> . ENTERO
    (22) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 55
    BOOLEAN         shift and go to state 56
    IDENTIFICADOR   shift and go to state 75
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 57

    valor                          shift and go to state 179
    NUMERO                         shift and go to state 74

state 149

    (103) queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 180


state 150

    (104) queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 181


state 151

    (105) queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ . PARENDER PUNTOCOMA
    (97) stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 182


state 152

    (106) queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ . PARENDER PUNTOCOMA
    (98) stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 183


state 153

    (107) queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ . PARENDER PUNTOCOMA
    (99) stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 184


state 154

    (108) queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ . PARENDER
    (100) stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ . PARENDER

    PARENDER        shift and go to state 185


state 155

    (94) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ . valor PARENDER PUNTOCOMA
    (23) valor -> . NUMERO
    (24) valor -> . CADENA
    (25) valor -> . BOOLEAN
    (26) valor -> . IDENTIFICADOR
    (21) NUMERO -> . ENTERO
    (22) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 55
    BOOLEAN         shift and go to state 56
    IDENTIFICADOR   shift and go to state 75
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 57

    valor                          shift and go to state 186
    NUMERO                         shift and go to state 74

state 156

    (95) stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 187


state 157

    (85) elseif -> LLAVEDER ELSEIF PARENIZ comparaciones . PARENDER LLAVEIZ

    PARENDER        shift and go to state 188


state 158

    (86) elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR . PARENDER LLAVEIZ
    (35) variable -> IDENTIFICADOR .
    (26) valor -> IDENTIFICADOR .

    PARENDER        shift and go to state 189
    MAYORQUE        reduce using rule 35 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 35 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 35 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 35 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 26 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 26 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 26 (valor -> IDENTIFICADOR .)


state 159

    (59) print -> PRINT PARENIZ valores PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 190


state 160

    (61) print -> PRINT PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 61 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 61 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 61 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 61 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 61 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 61 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 61 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 61 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 61 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 61 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 61 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 61 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 61 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 61 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 61 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 61 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 61 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 61 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 61 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 61 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)


state 161

    (20) valores -> valor COMA valores .

    PUNTOCOMA       reduce using rule 20 (valores -> valor COMA valores .)
    PARENDER        reduce using rule 20 (valores -> valor COMA valores .)
    CORCHETEDER     reduce using rule 20 (valores -> valor COMA valores .)


state 162

    (63) funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro . PARENDER LLAVEIZ

    PARENDER        shift and go to state 191


state 163

    (66) funcion -> NAMEFUNCTION PARENIZ parametro PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 192


state 164

    (65) parametro -> IDENTIFICADOR COMA . parametro
    (64) parametro -> . IDENTIFICADOR
    (65) parametro -> . IDENTIFICADOR COMA parametro

    IDENTIFICADOR   shift and go to state 128

    parametro                      shift and go to state 193

state 165

    (76) while -> WHILE PARENIZ comparaciones PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 194


state 166

    (77) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR . ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    ENTERO          shift and go to state 195


state 167

    (83) if -> IF PARENIZ comparaciones PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 196


state 168

    (84) if -> IF PARENIZ IDENTIFICADOR PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 197


state 169

    (87) elseif -> ELSEIF PARENIZ comparaciones PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 198


state 170

    (88) elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 199


state 171

    (78) foreach -> FOREACH PARENIZ IDENTIFICADOR AS . IDENTIFICADOR PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 200


state 172

    (79) switch -> SWITCH PARENIZ valor PARENDER . LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER

    LLAVEIZ         shift and go to state 201


state 173

    (67) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 202


state 174

    (101) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 203


state 175

    (96) stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 204


state 176

    (109) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 205


state 177

    (110) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 206


state 178

    (111) array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 207


state 179

    (102) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 208


state 180

    (103) queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 209


state 181

    (104) queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 210


state 182

    (105) queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER . PUNTOCOMA
    (97) stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 211


state 183

    (106) queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER . PUNTOCOMA
    (98) stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 212


state 184

    (107) queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER . PUNTOCOMA
    (99) stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 213


state 185

    (108) queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .
    (100) stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for PRINT resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for ECHO resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for NAMEFUNCTION resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for RETURN resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for WHILE resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for FOR resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for IF resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for ELSE resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for FOREACH resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for SWITCH resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for CADENA resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for ENTERO resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for $end resolved using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    IDENTIFICADOR   reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    COMENTARIO      reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    LLAVEDER        reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    PRINT           reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    ECHO            reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    FUNCTION        reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    NAMEFUNCTION    reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    RETURN          reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    WHILE           reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    FOR             reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    IF              reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    ELSEIF          reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    ELSE            reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    FOREACH         reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    SWITCH          reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    CADENA          reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    BOOLEAN         reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    ENTERO          reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    FLOTANTE        reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    $end            reduce using rule 100 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)

  ! IDENTIFICADOR   [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! COMENTARIO      [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! LLAVEDER        [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! PRINT           [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! ECHO            [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! FUNCTION        [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! NAMEFUNCTION    [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! RETURN          [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! WHILE           [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! FOR             [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! IF              [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! ELSEIF          [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! ELSE            [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! FOREACH         [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! SWITCH          [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! CADENA          [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! BOOLEAN         [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! ENTERO          [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! FLOTANTE        [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! $end            [ reduce using rule 108 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]


state 186

    (94) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 214


state 187

    (95) stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 215


state 188

    (85) elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 216


state 189

    (86) elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 217


state 190

    (59) print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 59 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 59 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 59 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 59 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 59 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 59 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 59 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 59 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 59 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    FOR             reduce using rule 59 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    IF              reduce using rule 59 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 59 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 59 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 59 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 59 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 59 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 59 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 59 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 59 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    $end            reduce using rule 59 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)


state 191

    (63) funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 218


state 192

    (66) funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 66 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 66 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 66 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 66 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 66 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 66 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 66 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 66 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 66 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FOR             reduce using rule 66 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    IF              reduce using rule 66 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 66 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 66 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 66 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 66 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 66 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 66 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 66 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 66 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    $end            reduce using rule 66 (funcion -> NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)


state 193

    (65) parametro -> IDENTIFICADOR COMA parametro .

    PARENDER        reduce using rule 65 (parametro -> IDENTIFICADOR COMA parametro .)


state 194

    (76) while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 76 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 76 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 76 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    PRINT           reduce using rule 76 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    ECHO            reduce using rule 76 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 76 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 76 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    RETURN          reduce using rule 76 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    WHILE           reduce using rule 76 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOR             reduce using rule 76 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    IF              reduce using rule 76 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 76 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSE            reduce using rule 76 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 76 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 76 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    CADENA          reduce using rule 76 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 76 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 76 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 76 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    $end            reduce using rule 76 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)


state 195

    (77) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO . PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    PUNTOCOMA       shift and go to state 219


state 196

    (83) if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 83 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 83 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 83 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    PRINT           reduce using rule 83 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ECHO            reduce using rule 83 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 83 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 83 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RETURN          reduce using rule 83 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    WHILE           reduce using rule 83 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOR             reduce using rule 83 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    IF              reduce using rule 83 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 83 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSE            reduce using rule 83 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 83 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 83 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    CADENA          reduce using rule 83 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 83 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 83 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 83 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    $end            reduce using rule 83 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)


state 197

    (84) if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 84 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 84 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 84 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    PRINT           reduce using rule 84 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ECHO            reduce using rule 84 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 84 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 84 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RETURN          reduce using rule 84 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    WHILE           reduce using rule 84 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOR             reduce using rule 84 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    IF              reduce using rule 84 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 84 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSE            reduce using rule 84 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 84 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 84 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    CADENA          reduce using rule 84 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 84 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 84 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 84 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    $end            reduce using rule 84 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)


state 198

    (87) elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 87 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 87 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 87 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    PRINT           reduce using rule 87 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ECHO            reduce using rule 87 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 87 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 87 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RETURN          reduce using rule 87 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    WHILE           reduce using rule 87 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOR             reduce using rule 87 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    IF              reduce using rule 87 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 87 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSE            reduce using rule 87 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 87 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 87 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    CADENA          reduce using rule 87 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 87 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 87 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 87 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    $end            reduce using rule 87 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)


state 199

    (88) elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 88 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 88 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 88 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    PRINT           reduce using rule 88 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ECHO            reduce using rule 88 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 88 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 88 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RETURN          reduce using rule 88 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    WHILE           reduce using rule 88 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOR             reduce using rule 88 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    IF              reduce using rule 88 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 88 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSE            reduce using rule 88 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 88 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 88 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    CADENA          reduce using rule 88 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 88 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 88 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 88 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    $end            reduce using rule 88 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)


state 200

    (78) foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR . PARENDER LLAVEIZ

    PARENDER        shift and go to state 220


state 201

    (79) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ . casos DEFAULT DOSPUNTOS echo LLAVEDER
    (80) casos -> . caso
    (81) casos -> . caso casos
    (82) caso -> . CASE valor DOSPUNTOS echo BREAK PUNTOCOMA

    CASE            shift and go to state 223

    casos                          shift and go to state 221
    caso                           shift and go to state 222

state 202

    (67) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 224


state 203

    (101) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 225


state 204

    (96) stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 226


state 205

    (109) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 109 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 109 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 109 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 109 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 109 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 109 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 109 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 109 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 109 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 109 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 109 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 109 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 109 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 109 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 109 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 109 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 109 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 109 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 109 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 109 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)


state 206

    (110) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 227


state 207

    (111) array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    PRINT           reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    ECHO            reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    FUNCTION        reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    RETURN          reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    WHILE           reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    FOR             reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    IF              reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    ELSEIF          reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    ELSE            reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    FOREACH         reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    SWITCH          reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    CADENA          reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    ENTERO          reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    $end            reduce using rule 111 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)


state 208

    (102) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 228


state 209

    (103) queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 103 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 103 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 103 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 103 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 103 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 103 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 103 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 103 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 103 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 103 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 103 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 103 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 103 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 103 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 103 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 103 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 103 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 103 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 103 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 103 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)


state 210

    (104) queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 104 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)


state 211

    (105) queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .
    (97) stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ECHO resolved using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for NAMEFUNCTION resolved using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RETURN resolved using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOREACH resolved using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for SWITCH resolved using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for CADENA resolved using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for $end resolved using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 97 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)

  ! IDENTIFICADOR   [ reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! COMENTARIO      [ reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! LLAVEDER        [ reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! PRINT           [ reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ECHO            [ reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FUNCTION        [ reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! NAMEFUNCTION    [ reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! RETURN          [ reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! WHILE           [ reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOR             [ reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! IF              [ reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSEIF          [ reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSE            [ reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOREACH         [ reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! SWITCH          [ reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! CADENA          [ reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! BOOLEAN         [ reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ENTERO          [ reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FLOTANTE        [ reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! $end            [ reduce using rule 105 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]


state 212

    (106) queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .
    (98) stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ECHO resolved using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for NAMEFUNCTION resolved using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RETURN resolved using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOREACH resolved using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for SWITCH resolved using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for CADENA resolved using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for $end resolved using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 98 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)

  ! IDENTIFICADOR   [ reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! COMENTARIO      [ reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! LLAVEDER        [ reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! PRINT           [ reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! ECHO            [ reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! FUNCTION        [ reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! NAMEFUNCTION    [ reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! RETURN          [ reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! WHILE           [ reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOR             [ reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! IF              [ reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSEIF          [ reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSE            [ reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOREACH         [ reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! SWITCH          [ reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! CADENA          [ reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! BOOLEAN         [ reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! ENTERO          [ reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! FLOTANTE        [ reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! $end            [ reduce using rule 106 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]


state 213

    (107) queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .
    (99) stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ECHO resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for NAMEFUNCTION resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RETURN resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOREACH resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for SWITCH resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for CADENA resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for $end resolved using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 99 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)

  ! IDENTIFICADOR   [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! COMENTARIO      [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! LLAVEDER        [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! PRINT           [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ECHO            [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FUNCTION        [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! NAMEFUNCTION    [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! RETURN          [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! WHILE           [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOR             [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! IF              [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSEIF          [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSE            [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOREACH         [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! SWITCH          [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! CADENA          [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! BOOLEAN         [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ENTERO          [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FLOTANTE        [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! $end            [ reduce using rule 107 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]


state 214

    (94) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 229


state 215

    (95) stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 95 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 95 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 95 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 95 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 95 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 95 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 95 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 95 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 95 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 95 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 95 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 95 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 95 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 95 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 95 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 95 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 95 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 95 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 95 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 95 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)


state 216

    (85) elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 85 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 85 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 85 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    PRINT           reduce using rule 85 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ECHO            reduce using rule 85 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 85 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 85 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RETURN          reduce using rule 85 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    WHILE           reduce using rule 85 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOR             reduce using rule 85 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    IF              reduce using rule 85 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 85 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSE            reduce using rule 85 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 85 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 85 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    CADENA          reduce using rule 85 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 85 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 85 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 85 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    $end            reduce using rule 85 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)


state 217

    (86) elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 86 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 86 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 86 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    PRINT           reduce using rule 86 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ECHO            reduce using rule 86 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 86 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 86 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RETURN          reduce using rule 86 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    WHILE           reduce using rule 86 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOR             reduce using rule 86 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    IF              reduce using rule 86 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 86 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSE            reduce using rule 86 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 86 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 86 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    CADENA          reduce using rule 86 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 86 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 86 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 86 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    $end            reduce using rule 86 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)


state 218

    (63) funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 63 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 63 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 63 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    PRINT           reduce using rule 63 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    ECHO            reduce using rule 63 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 63 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 63 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    RETURN          reduce using rule 63 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    WHILE           reduce using rule 63 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    FOR             reduce using rule 63 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    IF              reduce using rule 63 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 63 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    ELSE            reduce using rule 63 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 63 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 63 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    CADENA          reduce using rule 63 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 63 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 63 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 63 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    $end            reduce using rule 63 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)


state 219

    (77) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA . IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 230


state 220

    (78) foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 231


state 221

    (79) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos . DEFAULT DOSPUNTOS echo LLAVEDER

    DEFAULT         shift and go to state 232


state 222

    (80) casos -> caso .
    (81) casos -> caso . casos
    (80) casos -> . caso
    (81) casos -> . caso casos
    (82) caso -> . CASE valor DOSPUNTOS echo BREAK PUNTOCOMA

    DEFAULT         reduce using rule 80 (casos -> caso .)
    CASE            shift and go to state 223

    caso                           shift and go to state 222
    casos                          shift and go to state 233

state 223

    (82) caso -> CASE . valor DOSPUNTOS echo BREAK PUNTOCOMA
    (23) valor -> . NUMERO
    (24) valor -> . CADENA
    (25) valor -> . BOOLEAN
    (26) valor -> . IDENTIFICADOR
    (21) NUMERO -> . ENTERO
    (22) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 55
    BOOLEAN         shift and go to state 56
    IDENTIFICADOR   shift and go to state 75
    ENTERO          shift and go to state 47
    FLOTANTE        shift and go to state 57

    valor                          shift and go to state 234
    NUMERO                         shift and go to state 74

state 224

    (67) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 67 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 67 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 67 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 67 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 67 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 67 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 67 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 67 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 67 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FOR             reduce using rule 67 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    IF              reduce using rule 67 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 67 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 67 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 67 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 67 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 67 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 67 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 67 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 67 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)
    $end            reduce using rule 67 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ parametro PARENDER PUNTOCOMA .)


state 225

    (101) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 101 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 101 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 101 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 101 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 101 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 101 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 101 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 101 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 101 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 101 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 101 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 101 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 101 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 101 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 101 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 101 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 101 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 101 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 101 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 101 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)


state 226

    (96) stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 96 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 96 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 96 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 96 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 96 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 96 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 96 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 96 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 96 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 96 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 96 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 96 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 96 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 96 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 96 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 96 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 96 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 96 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 96 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 96 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)


state 227

    (110) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 110 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 110 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 110 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 110 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 110 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 110 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 110 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 110 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 110 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    FOR             reduce using rule 110 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    IF              reduce using rule 110 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 110 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 110 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 110 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 110 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 110 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 110 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 110 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 110 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    $end            reduce using rule 110 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)


state 228

    (102) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 102 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 102 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 102 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 102 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 102 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 102 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 102 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 102 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 102 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    FOR             reduce using rule 102 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    IF              reduce using rule 102 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 102 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 102 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 102 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 102 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 102 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 102 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 102 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 102 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    $end            reduce using rule 102 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)


state 229

    (94) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 94 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 94 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 94 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 94 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 94 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 94 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 94 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 94 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 94 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    FOR             reduce using rule 94 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    IF              reduce using rule 94 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 94 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 94 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 94 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 94 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 94 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 94 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 94 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 94 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    $end            reduce using rule 94 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)


state 230

    (77) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR . comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ
    (27) comparadorNum -> . MAYORQUE
    (28) comparadorNum -> . MAYORIGUALQUE
    (29) comparadorNum -> . MENORQUE
    (30) comparadorNum -> . MENORIGUALQUE

    MAYORQUE        shift and go to state 90
    MAYORIGUALQUE   shift and go to state 91
    MENORQUE        shift and go to state 92
    MENORIGUALQUE   shift and go to state 93

    comparadorNum                  shift and go to state 235

state 231

    (78) foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 78 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 78 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 78 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    PRINT           reduce using rule 78 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    ECHO            reduce using rule 78 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 78 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 78 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    RETURN          reduce using rule 78 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    WHILE           reduce using rule 78 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    FOR             reduce using rule 78 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    IF              reduce using rule 78 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 78 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSE            reduce using rule 78 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 78 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 78 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    CADENA          reduce using rule 78 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 78 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 78 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 78 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    $end            reduce using rule 78 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)


state 232

    (79) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT . DOSPUNTOS echo LLAVEDER

    DOSPUNTOS       shift and go to state 236


state 233

    (81) casos -> caso casos .

    DEFAULT         reduce using rule 81 (casos -> caso casos .)


state 234

    (82) caso -> CASE valor . DOSPUNTOS echo BREAK PUNTOCOMA

    DOSPUNTOS       shift and go to state 237


state 235

    (77) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum . ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    ENTERO          shift and go to state 238


state 236

    (79) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS . echo LLAVEDER
    (62) echo -> . ECHO valores PUNTOCOMA

    ECHO            shift and go to state 41

    echo                           shift and go to state 239

state 237

    (82) caso -> CASE valor DOSPUNTOS . echo BREAK PUNTOCOMA
    (62) echo -> . ECHO valores PUNTOCOMA

    ECHO            shift and go to state 41

    echo                           shift and go to state 240

state 238

    (77) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO . PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    PUNTOCOMA       shift and go to state 241


state 239

    (79) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo . LLAVEDER

    LLAVEDER        shift and go to state 242


state 240

    (82) caso -> CASE valor DOSPUNTOS echo . BREAK PUNTOCOMA

    BREAK           shift and go to state 243


state 241

    (77) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA . IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 244


state 242

    (79) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .

    IDENTIFICADOR   reduce using rule 79 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    COMENTARIO      reduce using rule 79 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    LLAVEDER        reduce using rule 79 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    PRINT           reduce using rule 79 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    ECHO            reduce using rule 79 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    FUNCTION        reduce using rule 79 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    NAMEFUNCTION    reduce using rule 79 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    RETURN          reduce using rule 79 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    WHILE           reduce using rule 79 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    FOR             reduce using rule 79 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    IF              reduce using rule 79 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    ELSEIF          reduce using rule 79 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    ELSE            reduce using rule 79 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    FOREACH         reduce using rule 79 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    SWITCH          reduce using rule 79 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    CADENA          reduce using rule 79 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    BOOLEAN         reduce using rule 79 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    ENTERO          reduce using rule 79 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    FLOTANTE        reduce using rule 79 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    $end            reduce using rule 79 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)


state 243

    (82) caso -> CASE valor DOSPUNTOS echo BREAK . PUNTOCOMA

    PUNTOCOMA       shift and go to state 245


state 244

    (77) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR . incrementoDecremento PARENDER LLAVEIZ
    (40) incrementoDecremento -> . INCREMENTO
    (41) incrementoDecremento -> . DECREMENTO
    (42) incrementoDecremento -> . SUMA ENTERO
    (43) incrementoDecremento -> . RESTA ENTERO

    INCREMENTO      shift and go to state 247
    DECREMENTO      shift and go to state 248
    SUMA            shift and go to state 249
    RESTA           shift and go to state 250

    incrementoDecremento           shift and go to state 246

state 245

    (82) caso -> CASE valor DOSPUNTOS echo BREAK PUNTOCOMA .

    CASE            reduce using rule 82 (caso -> CASE valor DOSPUNTOS echo BREAK PUNTOCOMA .)
    DEFAULT         reduce using rule 82 (caso -> CASE valor DOSPUNTOS echo BREAK PUNTOCOMA .)


state 246

    (77) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento . PARENDER LLAVEIZ

    PARENDER        shift and go to state 251


state 247

    (40) incrementoDecremento -> INCREMENTO .

    PARENDER        reduce using rule 40 (incrementoDecremento -> INCREMENTO .)


state 248

    (41) incrementoDecremento -> DECREMENTO .

    PARENDER        reduce using rule 41 (incrementoDecremento -> DECREMENTO .)


state 249

    (42) incrementoDecremento -> SUMA . ENTERO

    ENTERO          shift and go to state 252


state 250

    (43) incrementoDecremento -> RESTA . ENTERO

    ENTERO          shift and go to state 253


state 251

    (77) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 254


state 252

    (42) incrementoDecremento -> SUMA ENTERO .

    PARENDER        reduce using rule 42 (incrementoDecremento -> SUMA ENTERO .)


state 253

    (43) incrementoDecremento -> RESTA ENTERO .

    PARENDER        reduce using rule 43 (incrementoDecremento -> RESTA ENTERO .)


state 254

    (77) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 77 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 77 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 77 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    PRINT           reduce using rule 77 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    ECHO            reduce using rule 77 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 77 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 77 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    RETURN          reduce using rule 77 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    WHILE           reduce using rule 77 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    FOR             reduce using rule 77 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    IF              reduce using rule 77 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 77 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    ELSE            reduce using rule 77 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 77 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 77 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    CADENA          reduce using rule 77 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 77 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 77 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 77 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)
    $end            reduce using rule 77 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA IDENTIFICADOR incrementoDecremento PARENDER LLAVEIZ .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSEIF in state 39 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 39 resolved as shift
WARNING: reduce/reduce conflict in state 185 resolved using rule (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER)
WARNING: rejected rule (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER) in state 185
WARNING: reduce/reduce conflict in state 211 resolved using rule (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA)
WARNING: rejected rule (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA) in state 211
WARNING: reduce/reduce conflict in state 212 resolved using rule (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA)
WARNING: rejected rule (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA) in state 212
WARNING: reduce/reduce conflict in state 213 resolved using rule (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA)
WARNING: rejected rule (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA) in state 213
WARNING: Rule (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER) is never reduced
WARNING: Rule (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA) is never reduced
WARNING: Rule (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA) is never reduced
WARNING: Rule (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA) is never reduced
