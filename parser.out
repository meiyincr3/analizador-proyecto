Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LETRAS

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> bloques
Rule 2     sentencias -> operadorAritmetico
Rule 3     bloques -> bloque
Rule 4     bloques -> bloque bloques
Rule 5     bloque -> impresion
Rule 6     bloque -> asignacion
Rule 7     bloque -> funciones
Rule 8     bloque -> estructurasControl
Rule 9     bloque -> estructurasDeDatos
Rule 10    bloque -> comparaciones
Rule 11    bloque -> operaciones
Rule 12    bloque -> comentario
Rule 13    bloque -> longitud
Rule 14    bloque -> cerrar
Rule 15    bloque -> indexacion
Rule 16    impresion -> print
Rule 17    impresion -> echo
Rule 18    impresion -> input
Rule 19    comentario -> COMENTARIO
Rule 20    cerrar -> LLAVEDER
Rule 21    funciones -> funcion
Rule 22    funciones -> return
Rule 23    indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER
Rule 24    indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA
Rule 25    valores -> valor
Rule 26    valores -> indexacion
Rule 27    valores -> valor COMA valores
Rule 28    NUMERO -> ENTERO
Rule 29    NUMERO -> RESTA ENTERO
Rule 30    NUMERO -> FLOTANTE
Rule 31    valor -> NUMERO
Rule 32    valor -> CADENA
Rule 33    valor -> BOOLEAN
Rule 34    valor -> IDENTIFICADOR
Rule 35    comparadorNum -> MAYORQUE
Rule 36    comparadorNum -> MAYORIGUALQUE
Rule 37    comparadorNum -> MENORQUE
Rule 38    comparadorNum -> MENORIGUALQUE
Rule 39    comparador -> IDENTICO
Rule 40    comparador -> NOIDENTICO
Rule 41    comparador -> IGUAL
Rule 42    variable -> NUMERO
Rule 43    variable -> IDENTIFICADOR
Rule 44    comparaciones -> comparacion
Rule 45    comparaciones -> comparacion operadores comparaciones
Rule 46    comparacion -> variable comparadorNum variable
Rule 47    comparacion -> valor comparador valor
Rule 48    incrementoDecremento -> variable INCREMENTO
Rule 49    incrementoDecremento -> variable DECREMENTO
Rule 50    operadores -> OPERADOR
Rule 51    operadores -> AND
Rule 52    operadores -> OR
Rule 53    longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA
Rule 54    operaciones -> operacion
Rule 55    operaciones -> operacion operadorAritmetico operaciones
Rule 56    operaciones -> IDENTIFICADOR ASIGNAR operaciones
Rule 57    operacion -> variable operadorAritmetico variable
Rule 58    operadorAritmetico -> SUMA
Rule 59    operadorAritmetico -> RESTA
Rule 60    operadorAritmetico -> MULT
Rule 61    operadorAritmetico -> DIVISION
Rule 62    operadorAritmetico -> DIVISIONENTERA
Rule 63    operadorAritmetico -> MODULO
Rule 64    operadorAritmetico -> POTENCIA
Rule 65    asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA
Rule 66    asignacion -> IDENTIFICADOR PUNTOCOMA
Rule 67    print -> PRINT PARENIZ valores PARENDER PUNTOCOMA
Rule 68    print -> PRINT valor PUNTOCOMA
Rule 69    print -> PRINT PARENIZ PARENDER PUNTOCOMA
Rule 70    input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA
Rule 71    echo -> ECHO valores PUNTOCOMA
Rule 72    funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ
Rule 73    parametro -> IDENTIFICADOR
Rule 74    parametro -> IDENTIFICADOR COMA parametro
Rule 75    funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA
Rule 76    funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA
Rule 77    return -> RETURN IDENTIFICADOR PUNTOCOMA
Rule 78    estructurasControl -> while
Rule 79    estructurasControl -> for
Rule 80    estructurasControl -> if
Rule 81    estructurasControl -> elseif
Rule 82    estructurasControl -> else
Rule 83    estructurasControl -> foreach
Rule 84    estructurasControl -> switch
Rule 85    while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ
Rule 86    for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ
Rule 87    foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ
Rule 88    switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER
Rule 89    casos -> caso
Rule 90    casos -> caso casos
Rule 91    caso -> CASE valor DOSPUNTOS echo BREAK PUNTOCOMA
Rule 92    if -> IF PARENIZ comparaciones PARENDER LLAVEIZ
Rule 93    if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
Rule 94    elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
Rule 95    elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
Rule 96    elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
Rule 97    elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
Rule 98    else -> LLAVEDER ELSE LLAVEIZ
Rule 99    else -> ELSE LLAVEIZ
Rule 100   estructurasDeDatos -> queue
Rule 101   estructurasDeDatos -> stack
Rule 102   estructurasDeDatos -> array
Rule 103   stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA
Rule 104   stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA
Rule 105   stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA
Rule 106   stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
Rule 107   stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
Rule 108   stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
Rule 109   stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
Rule 110   queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA
Rule 111   queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
Rule 112   queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA
Rule 113   queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA
Rule 114   queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
Rule 115   queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
Rule 116   queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
Rule 117   queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
Rule 118   array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA
Rule 119   array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA
Rule 120   array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA
Rule 121   array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA
Rule 122   array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA
Rule 123   array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA
Rule 124   operacionesSemantico -> operacionSemantico
Rule 125   operacionesSemantico -> operacionSemantico operadorAritmetico operacionesSemantico
Rule 126   operacionSemantico -> NUMERO operadorAritmetico NUMERO
Rule 127   incrementoDecrementoSemantico -> IDENTIFICADOR INCREMENTO
Rule 128   incrementoDecrementoSemantico -> IDENTIFICADOR DECREMENTO
Rule 129   ifSemantico -> IF PARENIZ booleanosSemantico PARENDER LLAVEIZ
Rule 130   booleanosSemantico -> BOOLEAN
Rule 131   booleanosSemantico -> BOOLEAN operadores booleanosSemantico
Rule 132   push -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ IDENTIFICADOR PARENDER
Rule 133   pop -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ IDENTIFICADOR PARENDER
Rule 134   indexacionSemantica -> IDENTIFICADOR CORCHETEIZ ENTERO CORCHETEDER
Rule 135   whileSemantico -> WHILE PARENIZ BOOLEAN PARENDER LLAVEIZ
Rule 136   comparacionSemantico -> NUMERO comparadorNum NUMERO
Rule 137   comparacionSemantico -> valor comparador valor
Rule 138   forSemantico -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecrementoSemantico PARENDER LLAVEIZ

Terminals, with rules where they appear

AND                  : 51
ARRAY                : 118 119
ARRAY_PUSH           : 122
ARRAY_SHIFT          : 121
AS                   : 87
ASIGNAR              : 53 56 65 70 76 86 105 110 118 119 120 121 123 138
BOOLEAN              : 33 130 131 135
BREAK                : 91
CADENA               : 32
CASE                 : 91
COMA                 : 27 74 123
COMENTARIO           : 19
CORCHETEDER          : 23 24 120 134
CORCHETEIZ           : 23 24 120 134
COUNT                : 112
CURRENT              : 108 116
DECREMENTO           : 49 128
DEFAULT              : 88
DEQUEUE              : 113
DIVISION             : 61
DIVISIONENTERA       : 62
DOSPUNTOS            : 88 91
ECHO                 : 71
ELSE                 : 98 99
ELSEIF               : 94 95 96 97
ENQUEUE              : 111
ENTERO               : 28 29 86 86 134 138 138
FGETS                : 70
FLECHASIMPLE         : 103 104 106 107 108 109 111 112 113 114 115 116 117 132 133
FLOTANTE             : 30
FLUJOS               : 70
FOR                  : 86 138
FOREACH              : 87
FUNCTION             : 72
IDENTICO             : 39
IDENTIFICADOR        : 23 24 34 43 53 56 65 66 70 73 74 76 77 86 86 87 87 93 95 97 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 121 122 123 123 127 128 132 132 133 133 134 138 138
IF                   : 92 93 129
IGUAL                : 41
INCREMENTO           : 48 127
IN_ARRAY             : 123
LETRAS               : 
LLAVEDER             : 20 88 94 95 98
LLAVEIZ              : 72 85 86 87 88 92 93 94 95 96 97 98 99 129 135 138
MAYORIGUALQUE        : 36
MAYORQUE             : 35
MENORIGUALQUE        : 38
MENORQUE             : 37
MODULO               : 63
MULT                 : 60
NAMEFUNCTION         : 72 75 76
NEW                  : 105 110
NEXT                 : 106 114
NOIDENTICO           : 40
OPERADOR             : 50
OR                   : 52
PARENDER             : 53 67 69 70 72 75 76 85 86 87 88 92 93 94 95 96 97 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 121 122 123 129 132 133 135 138
PARENIZ              : 53 67 69 70 72 75 76 85 86 87 88 92 93 94 95 96 97 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 121 122 123 129 132 133 135 138
POP                  : 104 133
POTENCIA             : 64
PRINT                : 67 68 69
PUNTOCOMA            : 24 53 65 66 67 68 69 70 71 75 76 77 86 86 91 103 104 105 106 107 108 110 111 112 113 114 115 116 118 119 120 121 122 123 138 138
PUSH                 : 103 132
QUEUE                : 110
RESTA                : 29 59
RETURN               : 77
REWIND               : 107 115
STACK                : 105
STRLEN               : 53
SUMA                 : 58
SWITCH               : 88
VALID                : 109 117
WHILE                : 85 135
error                : 

Nonterminals, with rules where they appear

NUMERO               : 31 42 126 126 136 136
array                : 102
asignacion           : 6
bloque               : 3 4
bloques              : 1 4
booleanosSemantico   : 129 131
caso                 : 89 90
casos                : 88 90
cerrar               : 14
comentario           : 12
comparacion          : 44 45
comparacionSemantico : 
comparaciones        : 10 45 85 92 94 96
comparador           : 47 137
comparadorNum        : 46 86 136 138
echo                 : 17 88 91
else                 : 82
elseif               : 81
estructurasControl   : 8
estructurasDeDatos   : 9
for                  : 79
forSemantico         : 
foreach              : 83
funcion              : 21
funciones            : 7
if                   : 80
ifSemantico          : 
impresion            : 5
incrementoDecremento : 86
incrementoDecrementoSemantico : 138
indexacion           : 15 26
indexacionSemantica  : 
input                : 18
longitud             : 13
operacion            : 54 55
operacionSemantico   : 124 125
operaciones          : 11 55 56
operacionesSemantico : 125
operadorAritmetico   : 2 55 57 125 126
operadores           : 45 131
parametro            : 72 74
pop                  : 
print                : 16
push                 : 
queue                : 100
return               : 22
sentencias           : 0
stack                : 101
switch               : 84
valor                : 23 24 25 27 47 47 53 65 68 88 91 103 111 123 137 137
valores              : 27 67 71 75 76 119 120
variable             : 46 46 48 49 57 57
while                : 78
whileSemantico       : 

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . bloques
    (2) sentencias -> . operadorAritmetico
    (3) bloques -> . bloque
    (4) bloques -> . bloque bloques
    (58) operadorAritmetico -> . SUMA
    (59) operadorAritmetico -> . RESTA
    (60) operadorAritmetico -> . MULT
    (61) operadorAritmetico -> . DIVISION
    (62) operadorAritmetico -> . DIVISIONENTERA
    (63) operadorAritmetico -> . MODULO
    (64) operadorAritmetico -> . POTENCIA
    (5) bloque -> . impresion
    (6) bloque -> . asignacion
    (7) bloque -> . funciones
    (8) bloque -> . estructurasControl
    (9) bloque -> . estructurasDeDatos
    (10) bloque -> . comparaciones
    (11) bloque -> . operaciones
    (12) bloque -> . comentario
    (13) bloque -> . longitud
    (14) bloque -> . cerrar
    (15) bloque -> . indexacion
    (16) impresion -> . print
    (17) impresion -> . echo
    (18) impresion -> . input
    (65) asignacion -> . IDENTIFICADOR ASIGNAR valor PUNTOCOMA
    (66) asignacion -> . IDENTIFICADOR PUNTOCOMA
    (21) funciones -> . funcion
    (22) funciones -> . return
    (78) estructurasControl -> . while
    (79) estructurasControl -> . for
    (80) estructurasControl -> . if
    (81) estructurasControl -> . elseif
    (82) estructurasControl -> . else
    (83) estructurasControl -> . foreach
    (84) estructurasControl -> . switch
    (100) estructurasDeDatos -> . queue
    (101) estructurasDeDatos -> . stack
    (102) estructurasDeDatos -> . array
    (44) comparaciones -> . comparacion
    (45) comparaciones -> . comparacion operadores comparaciones
    (54) operaciones -> . operacion
    (55) operaciones -> . operacion operadorAritmetico operaciones
    (56) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (19) comentario -> . COMENTARIO
    (53) longitud -> . IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA
    (20) cerrar -> . LLAVEDER
    (23) indexacion -> . IDENTIFICADOR CORCHETEIZ valor CORCHETEDER
    (24) indexacion -> . IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA
    (67) print -> . PRINT PARENIZ valores PARENDER PUNTOCOMA
    (68) print -> . PRINT valor PUNTOCOMA
    (69) print -> . PRINT PARENIZ PARENDER PUNTOCOMA
    (71) echo -> . ECHO valores PUNTOCOMA
    (70) input -> . IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA
    (72) funcion -> . FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ
    (75) funcion -> . NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA
    (76) funcion -> . IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA
    (77) return -> . RETURN IDENTIFICADOR PUNTOCOMA
    (85) while -> . WHILE PARENIZ comparaciones PARENDER LLAVEIZ
    (86) for -> . FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ
    (92) if -> . IF PARENIZ comparaciones PARENDER LLAVEIZ
    (93) if -> . IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (94) elseif -> . LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (95) elseif -> . LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (96) elseif -> . ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (97) elseif -> . ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (98) else -> . LLAVEDER ELSE LLAVEIZ
    (99) else -> . ELSE LLAVEIZ
    (87) foreach -> . FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ
    (88) switch -> . SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER
    (110) queue -> . IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA
    (111) queue -> . IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
    (112) queue -> . IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA
    (113) queue -> . IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA
    (114) queue -> . IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (115) queue -> . IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (116) queue -> . IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (117) queue -> . IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
    (103) stack -> . IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA
    (104) stack -> . IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA
    (105) stack -> . IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA
    (106) stack -> . IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (107) stack -> . IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (108) stack -> . IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (109) stack -> . IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
    (118) array -> . IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA
    (119) array -> . IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA
    (120) array -> . IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA
    (121) array -> . IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA
    (122) array -> . ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA
    (123) array -> . IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA
    (46) comparacion -> . variable comparadorNum variable
    (47) comparacion -> . valor comparador valor
    (57) operacion -> . variable operadorAritmetico variable
    (42) variable -> . NUMERO
    (43) variable -> . IDENTIFICADOR
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    SUMA            shift and go to state 5
    RESTA           shift and go to state 6
    MULT            shift and go to state 7
    DIVISION        shift and go to state 8
    DIVISIONENTERA  shift and go to state 9
    MODULO          shift and go to state 10
    POTENCIA        shift and go to state 11
    IDENTIFICADOR   shift and go to state 26
    COMENTARIO      shift and go to state 42
    LLAVEDER        shift and go to state 43
    PRINT           shift and go to state 44
    ECHO            shift and go to state 45
    FUNCTION        shift and go to state 46
    NAMEFUNCTION    shift and go to state 47
    RETURN          shift and go to state 48
    WHILE           shift and go to state 49
    FOR             shift and go to state 50
    IF              shift and go to state 52
    ELSEIF          shift and go to state 53
    ELSE            shift and go to state 54
    FOREACH         shift and go to state 55
    SWITCH          shift and go to state 56
    ARRAY_PUSH      shift and go to state 57
    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    ENTERO          shift and go to state 51
    FLOTANTE        shift and go to state 62

    sentencias                     shift and go to state 1
    bloques                        shift and go to state 2
    operadorAritmetico             shift and go to state 3
    bloque                         shift and go to state 4
    impresion                      shift and go to state 12
    asignacion                     shift and go to state 13
    funciones                      shift and go to state 14
    estructurasControl             shift and go to state 15
    estructurasDeDatos             shift and go to state 16
    comparaciones                  shift and go to state 17
    operaciones                    shift and go to state 18
    comentario                     shift and go to state 19
    longitud                       shift and go to state 20
    cerrar                         shift and go to state 21
    indexacion                     shift and go to state 22
    print                          shift and go to state 23
    echo                           shift and go to state 24
    input                          shift and go to state 25
    valor                          shift and go to state 27
    funcion                        shift and go to state 28
    return                         shift and go to state 29
    while                          shift and go to state 30
    for                            shift and go to state 31
    if                             shift and go to state 32
    elseif                         shift and go to state 33
    else                           shift and go to state 34
    foreach                        shift and go to state 35
    switch                         shift and go to state 36
    queue                          shift and go to state 37
    stack                          shift and go to state 38
    array                          shift and go to state 39
    comparacion                    shift and go to state 40
    operacion                      shift and go to state 41
    variable                       shift and go to state 58
    NUMERO                         shift and go to state 59

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> bloques .

    $end            reduce using rule 1 (sentencias -> bloques .)


state 3

    (2) sentencias -> operadorAritmetico .

    $end            reduce using rule 2 (sentencias -> operadorAritmetico .)


state 4

    (3) bloques -> bloque .
    (4) bloques -> bloque . bloques
    (3) bloques -> . bloque
    (4) bloques -> . bloque bloques
    (5) bloque -> . impresion
    (6) bloque -> . asignacion
    (7) bloque -> . funciones
    (8) bloque -> . estructurasControl
    (9) bloque -> . estructurasDeDatos
    (10) bloque -> . comparaciones
    (11) bloque -> . operaciones
    (12) bloque -> . comentario
    (13) bloque -> . longitud
    (14) bloque -> . cerrar
    (15) bloque -> . indexacion
    (16) impresion -> . print
    (17) impresion -> . echo
    (18) impresion -> . input
    (65) asignacion -> . IDENTIFICADOR ASIGNAR valor PUNTOCOMA
    (66) asignacion -> . IDENTIFICADOR PUNTOCOMA
    (21) funciones -> . funcion
    (22) funciones -> . return
    (78) estructurasControl -> . while
    (79) estructurasControl -> . for
    (80) estructurasControl -> . if
    (81) estructurasControl -> . elseif
    (82) estructurasControl -> . else
    (83) estructurasControl -> . foreach
    (84) estructurasControl -> . switch
    (100) estructurasDeDatos -> . queue
    (101) estructurasDeDatos -> . stack
    (102) estructurasDeDatos -> . array
    (44) comparaciones -> . comparacion
    (45) comparaciones -> . comparacion operadores comparaciones
    (54) operaciones -> . operacion
    (55) operaciones -> . operacion operadorAritmetico operaciones
    (56) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (19) comentario -> . COMENTARIO
    (53) longitud -> . IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA
    (20) cerrar -> . LLAVEDER
    (23) indexacion -> . IDENTIFICADOR CORCHETEIZ valor CORCHETEDER
    (24) indexacion -> . IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA
    (67) print -> . PRINT PARENIZ valores PARENDER PUNTOCOMA
    (68) print -> . PRINT valor PUNTOCOMA
    (69) print -> . PRINT PARENIZ PARENDER PUNTOCOMA
    (71) echo -> . ECHO valores PUNTOCOMA
    (70) input -> . IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA
    (72) funcion -> . FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ
    (75) funcion -> . NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA
    (76) funcion -> . IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA
    (77) return -> . RETURN IDENTIFICADOR PUNTOCOMA
    (85) while -> . WHILE PARENIZ comparaciones PARENDER LLAVEIZ
    (86) for -> . FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ
    (92) if -> . IF PARENIZ comparaciones PARENDER LLAVEIZ
    (93) if -> . IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (94) elseif -> . LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (95) elseif -> . LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (96) elseif -> . ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (97) elseif -> . ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (98) else -> . LLAVEDER ELSE LLAVEIZ
    (99) else -> . ELSE LLAVEIZ
    (87) foreach -> . FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ
    (88) switch -> . SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER
    (110) queue -> . IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA
    (111) queue -> . IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
    (112) queue -> . IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA
    (113) queue -> . IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA
    (114) queue -> . IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (115) queue -> . IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (116) queue -> . IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (117) queue -> . IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
    (103) stack -> . IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA
    (104) stack -> . IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA
    (105) stack -> . IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA
    (106) stack -> . IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (107) stack -> . IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (108) stack -> . IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (109) stack -> . IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER
    (118) array -> . IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA
    (119) array -> . IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA
    (120) array -> . IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA
    (121) array -> . IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA
    (122) array -> . ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA
    (123) array -> . IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA
    (46) comparacion -> . variable comparadorNum variable
    (47) comparacion -> . valor comparador valor
    (57) operacion -> . variable operadorAritmetico variable
    (42) variable -> . NUMERO
    (43) variable -> . IDENTIFICADOR
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    $end            reduce using rule 3 (bloques -> bloque .)
    IDENTIFICADOR   shift and go to state 26
    COMENTARIO      shift and go to state 42
    LLAVEDER        shift and go to state 43
    PRINT           shift and go to state 44
    ECHO            shift and go to state 45
    FUNCTION        shift and go to state 46
    NAMEFUNCTION    shift and go to state 47
    RETURN          shift and go to state 48
    WHILE           shift and go to state 49
    FOR             shift and go to state 50
    IF              shift and go to state 52
    ELSEIF          shift and go to state 53
    ELSE            shift and go to state 54
    FOREACH         shift and go to state 55
    SWITCH          shift and go to state 56
    ARRAY_PUSH      shift and go to state 57
    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    bloque                         shift and go to state 4
    bloques                        shift and go to state 63
    impresion                      shift and go to state 12
    asignacion                     shift and go to state 13
    funciones                      shift and go to state 14
    estructurasControl             shift and go to state 15
    estructurasDeDatos             shift and go to state 16
    comparaciones                  shift and go to state 17
    operaciones                    shift and go to state 18
    comentario                     shift and go to state 19
    longitud                       shift and go to state 20
    cerrar                         shift and go to state 21
    indexacion                     shift and go to state 22
    print                          shift and go to state 23
    echo                           shift and go to state 24
    input                          shift and go to state 25
    valor                          shift and go to state 27
    funcion                        shift and go to state 28
    return                         shift and go to state 29
    while                          shift and go to state 30
    for                            shift and go to state 31
    if                             shift and go to state 32
    elseif                         shift and go to state 33
    else                           shift and go to state 34
    foreach                        shift and go to state 35
    switch                         shift and go to state 36
    queue                          shift and go to state 37
    stack                          shift and go to state 38
    array                          shift and go to state 39
    comparacion                    shift and go to state 40
    operacion                      shift and go to state 41
    variable                       shift and go to state 58
    NUMERO                         shift and go to state 59

state 5

    (58) operadorAritmetico -> SUMA .

    $end            reduce using rule 58 (operadorAritmetico -> SUMA .)
    IDENTIFICADOR   reduce using rule 58 (operadorAritmetico -> SUMA .)
    ENTERO          reduce using rule 58 (operadorAritmetico -> SUMA .)
    RESTA           reduce using rule 58 (operadorAritmetico -> SUMA .)
    FLOTANTE        reduce using rule 58 (operadorAritmetico -> SUMA .)


state 6

    (59) operadorAritmetico -> RESTA .
    (29) NUMERO -> RESTA . ENTERO

    $end            reduce using rule 59 (operadorAritmetico -> RESTA .)
    ENTERO          shift and go to state 65


state 7

    (60) operadorAritmetico -> MULT .

    $end            reduce using rule 60 (operadorAritmetico -> MULT .)
    IDENTIFICADOR   reduce using rule 60 (operadorAritmetico -> MULT .)
    ENTERO          reduce using rule 60 (operadorAritmetico -> MULT .)
    RESTA           reduce using rule 60 (operadorAritmetico -> MULT .)
    FLOTANTE        reduce using rule 60 (operadorAritmetico -> MULT .)


state 8

    (61) operadorAritmetico -> DIVISION .

    $end            reduce using rule 61 (operadorAritmetico -> DIVISION .)
    IDENTIFICADOR   reduce using rule 61 (operadorAritmetico -> DIVISION .)
    ENTERO          reduce using rule 61 (operadorAritmetico -> DIVISION .)
    RESTA           reduce using rule 61 (operadorAritmetico -> DIVISION .)
    FLOTANTE        reduce using rule 61 (operadorAritmetico -> DIVISION .)


state 9

    (62) operadorAritmetico -> DIVISIONENTERA .

    $end            reduce using rule 62 (operadorAritmetico -> DIVISIONENTERA .)
    IDENTIFICADOR   reduce using rule 62 (operadorAritmetico -> DIVISIONENTERA .)
    ENTERO          reduce using rule 62 (operadorAritmetico -> DIVISIONENTERA .)
    RESTA           reduce using rule 62 (operadorAritmetico -> DIVISIONENTERA .)
    FLOTANTE        reduce using rule 62 (operadorAritmetico -> DIVISIONENTERA .)


state 10

    (63) operadorAritmetico -> MODULO .

    $end            reduce using rule 63 (operadorAritmetico -> MODULO .)
    IDENTIFICADOR   reduce using rule 63 (operadorAritmetico -> MODULO .)
    ENTERO          reduce using rule 63 (operadorAritmetico -> MODULO .)
    RESTA           reduce using rule 63 (operadorAritmetico -> MODULO .)
    FLOTANTE        reduce using rule 63 (operadorAritmetico -> MODULO .)


state 11

    (64) operadorAritmetico -> POTENCIA .

    $end            reduce using rule 64 (operadorAritmetico -> POTENCIA .)
    IDENTIFICADOR   reduce using rule 64 (operadorAritmetico -> POTENCIA .)
    ENTERO          reduce using rule 64 (operadorAritmetico -> POTENCIA .)
    RESTA           reduce using rule 64 (operadorAritmetico -> POTENCIA .)
    FLOTANTE        reduce using rule 64 (operadorAritmetico -> POTENCIA .)


state 12

    (5) bloque -> impresion .

    IDENTIFICADOR   reduce using rule 5 (bloque -> impresion .)
    COMENTARIO      reduce using rule 5 (bloque -> impresion .)
    LLAVEDER        reduce using rule 5 (bloque -> impresion .)
    PRINT           reduce using rule 5 (bloque -> impresion .)
    ECHO            reduce using rule 5 (bloque -> impresion .)
    FUNCTION        reduce using rule 5 (bloque -> impresion .)
    NAMEFUNCTION    reduce using rule 5 (bloque -> impresion .)
    RETURN          reduce using rule 5 (bloque -> impresion .)
    WHILE           reduce using rule 5 (bloque -> impresion .)
    FOR             reduce using rule 5 (bloque -> impresion .)
    IF              reduce using rule 5 (bloque -> impresion .)
    ELSEIF          reduce using rule 5 (bloque -> impresion .)
    ELSE            reduce using rule 5 (bloque -> impresion .)
    FOREACH         reduce using rule 5 (bloque -> impresion .)
    SWITCH          reduce using rule 5 (bloque -> impresion .)
    ARRAY_PUSH      reduce using rule 5 (bloque -> impresion .)
    CADENA          reduce using rule 5 (bloque -> impresion .)
    BOOLEAN         reduce using rule 5 (bloque -> impresion .)
    ENTERO          reduce using rule 5 (bloque -> impresion .)
    RESTA           reduce using rule 5 (bloque -> impresion .)
    FLOTANTE        reduce using rule 5 (bloque -> impresion .)
    $end            reduce using rule 5 (bloque -> impresion .)


state 13

    (6) bloque -> asignacion .

    IDENTIFICADOR   reduce using rule 6 (bloque -> asignacion .)
    COMENTARIO      reduce using rule 6 (bloque -> asignacion .)
    LLAVEDER        reduce using rule 6 (bloque -> asignacion .)
    PRINT           reduce using rule 6 (bloque -> asignacion .)
    ECHO            reduce using rule 6 (bloque -> asignacion .)
    FUNCTION        reduce using rule 6 (bloque -> asignacion .)
    NAMEFUNCTION    reduce using rule 6 (bloque -> asignacion .)
    RETURN          reduce using rule 6 (bloque -> asignacion .)
    WHILE           reduce using rule 6 (bloque -> asignacion .)
    FOR             reduce using rule 6 (bloque -> asignacion .)
    IF              reduce using rule 6 (bloque -> asignacion .)
    ELSEIF          reduce using rule 6 (bloque -> asignacion .)
    ELSE            reduce using rule 6 (bloque -> asignacion .)
    FOREACH         reduce using rule 6 (bloque -> asignacion .)
    SWITCH          reduce using rule 6 (bloque -> asignacion .)
    ARRAY_PUSH      reduce using rule 6 (bloque -> asignacion .)
    CADENA          reduce using rule 6 (bloque -> asignacion .)
    BOOLEAN         reduce using rule 6 (bloque -> asignacion .)
    ENTERO          reduce using rule 6 (bloque -> asignacion .)
    RESTA           reduce using rule 6 (bloque -> asignacion .)
    FLOTANTE        reduce using rule 6 (bloque -> asignacion .)
    $end            reduce using rule 6 (bloque -> asignacion .)


state 14

    (7) bloque -> funciones .

    IDENTIFICADOR   reduce using rule 7 (bloque -> funciones .)
    COMENTARIO      reduce using rule 7 (bloque -> funciones .)
    LLAVEDER        reduce using rule 7 (bloque -> funciones .)
    PRINT           reduce using rule 7 (bloque -> funciones .)
    ECHO            reduce using rule 7 (bloque -> funciones .)
    FUNCTION        reduce using rule 7 (bloque -> funciones .)
    NAMEFUNCTION    reduce using rule 7 (bloque -> funciones .)
    RETURN          reduce using rule 7 (bloque -> funciones .)
    WHILE           reduce using rule 7 (bloque -> funciones .)
    FOR             reduce using rule 7 (bloque -> funciones .)
    IF              reduce using rule 7 (bloque -> funciones .)
    ELSEIF          reduce using rule 7 (bloque -> funciones .)
    ELSE            reduce using rule 7 (bloque -> funciones .)
    FOREACH         reduce using rule 7 (bloque -> funciones .)
    SWITCH          reduce using rule 7 (bloque -> funciones .)
    ARRAY_PUSH      reduce using rule 7 (bloque -> funciones .)
    CADENA          reduce using rule 7 (bloque -> funciones .)
    BOOLEAN         reduce using rule 7 (bloque -> funciones .)
    ENTERO          reduce using rule 7 (bloque -> funciones .)
    RESTA           reduce using rule 7 (bloque -> funciones .)
    FLOTANTE        reduce using rule 7 (bloque -> funciones .)
    $end            reduce using rule 7 (bloque -> funciones .)


state 15

    (8) bloque -> estructurasControl .

    IDENTIFICADOR   reduce using rule 8 (bloque -> estructurasControl .)
    COMENTARIO      reduce using rule 8 (bloque -> estructurasControl .)
    LLAVEDER        reduce using rule 8 (bloque -> estructurasControl .)
    PRINT           reduce using rule 8 (bloque -> estructurasControl .)
    ECHO            reduce using rule 8 (bloque -> estructurasControl .)
    FUNCTION        reduce using rule 8 (bloque -> estructurasControl .)
    NAMEFUNCTION    reduce using rule 8 (bloque -> estructurasControl .)
    RETURN          reduce using rule 8 (bloque -> estructurasControl .)
    WHILE           reduce using rule 8 (bloque -> estructurasControl .)
    FOR             reduce using rule 8 (bloque -> estructurasControl .)
    IF              reduce using rule 8 (bloque -> estructurasControl .)
    ELSEIF          reduce using rule 8 (bloque -> estructurasControl .)
    ELSE            reduce using rule 8 (bloque -> estructurasControl .)
    FOREACH         reduce using rule 8 (bloque -> estructurasControl .)
    SWITCH          reduce using rule 8 (bloque -> estructurasControl .)
    ARRAY_PUSH      reduce using rule 8 (bloque -> estructurasControl .)
    CADENA          reduce using rule 8 (bloque -> estructurasControl .)
    BOOLEAN         reduce using rule 8 (bloque -> estructurasControl .)
    ENTERO          reduce using rule 8 (bloque -> estructurasControl .)
    RESTA           reduce using rule 8 (bloque -> estructurasControl .)
    FLOTANTE        reduce using rule 8 (bloque -> estructurasControl .)
    $end            reduce using rule 8 (bloque -> estructurasControl .)


state 16

    (9) bloque -> estructurasDeDatos .

    IDENTIFICADOR   reduce using rule 9 (bloque -> estructurasDeDatos .)
    COMENTARIO      reduce using rule 9 (bloque -> estructurasDeDatos .)
    LLAVEDER        reduce using rule 9 (bloque -> estructurasDeDatos .)
    PRINT           reduce using rule 9 (bloque -> estructurasDeDatos .)
    ECHO            reduce using rule 9 (bloque -> estructurasDeDatos .)
    FUNCTION        reduce using rule 9 (bloque -> estructurasDeDatos .)
    NAMEFUNCTION    reduce using rule 9 (bloque -> estructurasDeDatos .)
    RETURN          reduce using rule 9 (bloque -> estructurasDeDatos .)
    WHILE           reduce using rule 9 (bloque -> estructurasDeDatos .)
    FOR             reduce using rule 9 (bloque -> estructurasDeDatos .)
    IF              reduce using rule 9 (bloque -> estructurasDeDatos .)
    ELSEIF          reduce using rule 9 (bloque -> estructurasDeDatos .)
    ELSE            reduce using rule 9 (bloque -> estructurasDeDatos .)
    FOREACH         reduce using rule 9 (bloque -> estructurasDeDatos .)
    SWITCH          reduce using rule 9 (bloque -> estructurasDeDatos .)
    ARRAY_PUSH      reduce using rule 9 (bloque -> estructurasDeDatos .)
    CADENA          reduce using rule 9 (bloque -> estructurasDeDatos .)
    BOOLEAN         reduce using rule 9 (bloque -> estructurasDeDatos .)
    ENTERO          reduce using rule 9 (bloque -> estructurasDeDatos .)
    RESTA           reduce using rule 9 (bloque -> estructurasDeDatos .)
    FLOTANTE        reduce using rule 9 (bloque -> estructurasDeDatos .)
    $end            reduce using rule 9 (bloque -> estructurasDeDatos .)


state 17

    (10) bloque -> comparaciones .

    IDENTIFICADOR   reduce using rule 10 (bloque -> comparaciones .)
    COMENTARIO      reduce using rule 10 (bloque -> comparaciones .)
    LLAVEDER        reduce using rule 10 (bloque -> comparaciones .)
    PRINT           reduce using rule 10 (bloque -> comparaciones .)
    ECHO            reduce using rule 10 (bloque -> comparaciones .)
    FUNCTION        reduce using rule 10 (bloque -> comparaciones .)
    NAMEFUNCTION    reduce using rule 10 (bloque -> comparaciones .)
    RETURN          reduce using rule 10 (bloque -> comparaciones .)
    WHILE           reduce using rule 10 (bloque -> comparaciones .)
    FOR             reduce using rule 10 (bloque -> comparaciones .)
    IF              reduce using rule 10 (bloque -> comparaciones .)
    ELSEIF          reduce using rule 10 (bloque -> comparaciones .)
    ELSE            reduce using rule 10 (bloque -> comparaciones .)
    FOREACH         reduce using rule 10 (bloque -> comparaciones .)
    SWITCH          reduce using rule 10 (bloque -> comparaciones .)
    ARRAY_PUSH      reduce using rule 10 (bloque -> comparaciones .)
    CADENA          reduce using rule 10 (bloque -> comparaciones .)
    BOOLEAN         reduce using rule 10 (bloque -> comparaciones .)
    ENTERO          reduce using rule 10 (bloque -> comparaciones .)
    RESTA           reduce using rule 10 (bloque -> comparaciones .)
    FLOTANTE        reduce using rule 10 (bloque -> comparaciones .)
    $end            reduce using rule 10 (bloque -> comparaciones .)


state 18

    (11) bloque -> operaciones .

    IDENTIFICADOR   reduce using rule 11 (bloque -> operaciones .)
    COMENTARIO      reduce using rule 11 (bloque -> operaciones .)
    LLAVEDER        reduce using rule 11 (bloque -> operaciones .)
    PRINT           reduce using rule 11 (bloque -> operaciones .)
    ECHO            reduce using rule 11 (bloque -> operaciones .)
    FUNCTION        reduce using rule 11 (bloque -> operaciones .)
    NAMEFUNCTION    reduce using rule 11 (bloque -> operaciones .)
    RETURN          reduce using rule 11 (bloque -> operaciones .)
    WHILE           reduce using rule 11 (bloque -> operaciones .)
    FOR             reduce using rule 11 (bloque -> operaciones .)
    IF              reduce using rule 11 (bloque -> operaciones .)
    ELSEIF          reduce using rule 11 (bloque -> operaciones .)
    ELSE            reduce using rule 11 (bloque -> operaciones .)
    FOREACH         reduce using rule 11 (bloque -> operaciones .)
    SWITCH          reduce using rule 11 (bloque -> operaciones .)
    ARRAY_PUSH      reduce using rule 11 (bloque -> operaciones .)
    CADENA          reduce using rule 11 (bloque -> operaciones .)
    BOOLEAN         reduce using rule 11 (bloque -> operaciones .)
    ENTERO          reduce using rule 11 (bloque -> operaciones .)
    RESTA           reduce using rule 11 (bloque -> operaciones .)
    FLOTANTE        reduce using rule 11 (bloque -> operaciones .)
    $end            reduce using rule 11 (bloque -> operaciones .)


state 19

    (12) bloque -> comentario .

    IDENTIFICADOR   reduce using rule 12 (bloque -> comentario .)
    COMENTARIO      reduce using rule 12 (bloque -> comentario .)
    LLAVEDER        reduce using rule 12 (bloque -> comentario .)
    PRINT           reduce using rule 12 (bloque -> comentario .)
    ECHO            reduce using rule 12 (bloque -> comentario .)
    FUNCTION        reduce using rule 12 (bloque -> comentario .)
    NAMEFUNCTION    reduce using rule 12 (bloque -> comentario .)
    RETURN          reduce using rule 12 (bloque -> comentario .)
    WHILE           reduce using rule 12 (bloque -> comentario .)
    FOR             reduce using rule 12 (bloque -> comentario .)
    IF              reduce using rule 12 (bloque -> comentario .)
    ELSEIF          reduce using rule 12 (bloque -> comentario .)
    ELSE            reduce using rule 12 (bloque -> comentario .)
    FOREACH         reduce using rule 12 (bloque -> comentario .)
    SWITCH          reduce using rule 12 (bloque -> comentario .)
    ARRAY_PUSH      reduce using rule 12 (bloque -> comentario .)
    CADENA          reduce using rule 12 (bloque -> comentario .)
    BOOLEAN         reduce using rule 12 (bloque -> comentario .)
    ENTERO          reduce using rule 12 (bloque -> comentario .)
    RESTA           reduce using rule 12 (bloque -> comentario .)
    FLOTANTE        reduce using rule 12 (bloque -> comentario .)
    $end            reduce using rule 12 (bloque -> comentario .)


state 20

    (13) bloque -> longitud .

    IDENTIFICADOR   reduce using rule 13 (bloque -> longitud .)
    COMENTARIO      reduce using rule 13 (bloque -> longitud .)
    LLAVEDER        reduce using rule 13 (bloque -> longitud .)
    PRINT           reduce using rule 13 (bloque -> longitud .)
    ECHO            reduce using rule 13 (bloque -> longitud .)
    FUNCTION        reduce using rule 13 (bloque -> longitud .)
    NAMEFUNCTION    reduce using rule 13 (bloque -> longitud .)
    RETURN          reduce using rule 13 (bloque -> longitud .)
    WHILE           reduce using rule 13 (bloque -> longitud .)
    FOR             reduce using rule 13 (bloque -> longitud .)
    IF              reduce using rule 13 (bloque -> longitud .)
    ELSEIF          reduce using rule 13 (bloque -> longitud .)
    ELSE            reduce using rule 13 (bloque -> longitud .)
    FOREACH         reduce using rule 13 (bloque -> longitud .)
    SWITCH          reduce using rule 13 (bloque -> longitud .)
    ARRAY_PUSH      reduce using rule 13 (bloque -> longitud .)
    CADENA          reduce using rule 13 (bloque -> longitud .)
    BOOLEAN         reduce using rule 13 (bloque -> longitud .)
    ENTERO          reduce using rule 13 (bloque -> longitud .)
    RESTA           reduce using rule 13 (bloque -> longitud .)
    FLOTANTE        reduce using rule 13 (bloque -> longitud .)
    $end            reduce using rule 13 (bloque -> longitud .)


state 21

    (14) bloque -> cerrar .

    IDENTIFICADOR   reduce using rule 14 (bloque -> cerrar .)
    COMENTARIO      reduce using rule 14 (bloque -> cerrar .)
    LLAVEDER        reduce using rule 14 (bloque -> cerrar .)
    PRINT           reduce using rule 14 (bloque -> cerrar .)
    ECHO            reduce using rule 14 (bloque -> cerrar .)
    FUNCTION        reduce using rule 14 (bloque -> cerrar .)
    NAMEFUNCTION    reduce using rule 14 (bloque -> cerrar .)
    RETURN          reduce using rule 14 (bloque -> cerrar .)
    WHILE           reduce using rule 14 (bloque -> cerrar .)
    FOR             reduce using rule 14 (bloque -> cerrar .)
    IF              reduce using rule 14 (bloque -> cerrar .)
    ELSEIF          reduce using rule 14 (bloque -> cerrar .)
    ELSE            reduce using rule 14 (bloque -> cerrar .)
    FOREACH         reduce using rule 14 (bloque -> cerrar .)
    SWITCH          reduce using rule 14 (bloque -> cerrar .)
    ARRAY_PUSH      reduce using rule 14 (bloque -> cerrar .)
    CADENA          reduce using rule 14 (bloque -> cerrar .)
    BOOLEAN         reduce using rule 14 (bloque -> cerrar .)
    ENTERO          reduce using rule 14 (bloque -> cerrar .)
    RESTA           reduce using rule 14 (bloque -> cerrar .)
    FLOTANTE        reduce using rule 14 (bloque -> cerrar .)
    $end            reduce using rule 14 (bloque -> cerrar .)


state 22

    (15) bloque -> indexacion .

    IDENTIFICADOR   reduce using rule 15 (bloque -> indexacion .)
    COMENTARIO      reduce using rule 15 (bloque -> indexacion .)
    LLAVEDER        reduce using rule 15 (bloque -> indexacion .)
    PRINT           reduce using rule 15 (bloque -> indexacion .)
    ECHO            reduce using rule 15 (bloque -> indexacion .)
    FUNCTION        reduce using rule 15 (bloque -> indexacion .)
    NAMEFUNCTION    reduce using rule 15 (bloque -> indexacion .)
    RETURN          reduce using rule 15 (bloque -> indexacion .)
    WHILE           reduce using rule 15 (bloque -> indexacion .)
    FOR             reduce using rule 15 (bloque -> indexacion .)
    IF              reduce using rule 15 (bloque -> indexacion .)
    ELSEIF          reduce using rule 15 (bloque -> indexacion .)
    ELSE            reduce using rule 15 (bloque -> indexacion .)
    FOREACH         reduce using rule 15 (bloque -> indexacion .)
    SWITCH          reduce using rule 15 (bloque -> indexacion .)
    ARRAY_PUSH      reduce using rule 15 (bloque -> indexacion .)
    CADENA          reduce using rule 15 (bloque -> indexacion .)
    BOOLEAN         reduce using rule 15 (bloque -> indexacion .)
    ENTERO          reduce using rule 15 (bloque -> indexacion .)
    RESTA           reduce using rule 15 (bloque -> indexacion .)
    FLOTANTE        reduce using rule 15 (bloque -> indexacion .)
    $end            reduce using rule 15 (bloque -> indexacion .)


state 23

    (16) impresion -> print .

    IDENTIFICADOR   reduce using rule 16 (impresion -> print .)
    COMENTARIO      reduce using rule 16 (impresion -> print .)
    LLAVEDER        reduce using rule 16 (impresion -> print .)
    PRINT           reduce using rule 16 (impresion -> print .)
    ECHO            reduce using rule 16 (impresion -> print .)
    FUNCTION        reduce using rule 16 (impresion -> print .)
    NAMEFUNCTION    reduce using rule 16 (impresion -> print .)
    RETURN          reduce using rule 16 (impresion -> print .)
    WHILE           reduce using rule 16 (impresion -> print .)
    FOR             reduce using rule 16 (impresion -> print .)
    IF              reduce using rule 16 (impresion -> print .)
    ELSEIF          reduce using rule 16 (impresion -> print .)
    ELSE            reduce using rule 16 (impresion -> print .)
    FOREACH         reduce using rule 16 (impresion -> print .)
    SWITCH          reduce using rule 16 (impresion -> print .)
    ARRAY_PUSH      reduce using rule 16 (impresion -> print .)
    CADENA          reduce using rule 16 (impresion -> print .)
    BOOLEAN         reduce using rule 16 (impresion -> print .)
    ENTERO          reduce using rule 16 (impresion -> print .)
    RESTA           reduce using rule 16 (impresion -> print .)
    FLOTANTE        reduce using rule 16 (impresion -> print .)
    $end            reduce using rule 16 (impresion -> print .)


state 24

    (17) impresion -> echo .

    IDENTIFICADOR   reduce using rule 17 (impresion -> echo .)
    COMENTARIO      reduce using rule 17 (impresion -> echo .)
    LLAVEDER        reduce using rule 17 (impresion -> echo .)
    PRINT           reduce using rule 17 (impresion -> echo .)
    ECHO            reduce using rule 17 (impresion -> echo .)
    FUNCTION        reduce using rule 17 (impresion -> echo .)
    NAMEFUNCTION    reduce using rule 17 (impresion -> echo .)
    RETURN          reduce using rule 17 (impresion -> echo .)
    WHILE           reduce using rule 17 (impresion -> echo .)
    FOR             reduce using rule 17 (impresion -> echo .)
    IF              reduce using rule 17 (impresion -> echo .)
    ELSEIF          reduce using rule 17 (impresion -> echo .)
    ELSE            reduce using rule 17 (impresion -> echo .)
    FOREACH         reduce using rule 17 (impresion -> echo .)
    SWITCH          reduce using rule 17 (impresion -> echo .)
    ARRAY_PUSH      reduce using rule 17 (impresion -> echo .)
    CADENA          reduce using rule 17 (impresion -> echo .)
    BOOLEAN         reduce using rule 17 (impresion -> echo .)
    ENTERO          reduce using rule 17 (impresion -> echo .)
    RESTA           reduce using rule 17 (impresion -> echo .)
    FLOTANTE        reduce using rule 17 (impresion -> echo .)
    $end            reduce using rule 17 (impresion -> echo .)


state 25

    (18) impresion -> input .

    IDENTIFICADOR   reduce using rule 18 (impresion -> input .)
    COMENTARIO      reduce using rule 18 (impresion -> input .)
    LLAVEDER        reduce using rule 18 (impresion -> input .)
    PRINT           reduce using rule 18 (impresion -> input .)
    ECHO            reduce using rule 18 (impresion -> input .)
    FUNCTION        reduce using rule 18 (impresion -> input .)
    NAMEFUNCTION    reduce using rule 18 (impresion -> input .)
    RETURN          reduce using rule 18 (impresion -> input .)
    WHILE           reduce using rule 18 (impresion -> input .)
    FOR             reduce using rule 18 (impresion -> input .)
    IF              reduce using rule 18 (impresion -> input .)
    ELSEIF          reduce using rule 18 (impresion -> input .)
    ELSE            reduce using rule 18 (impresion -> input .)
    FOREACH         reduce using rule 18 (impresion -> input .)
    SWITCH          reduce using rule 18 (impresion -> input .)
    ARRAY_PUSH      reduce using rule 18 (impresion -> input .)
    CADENA          reduce using rule 18 (impresion -> input .)
    BOOLEAN         reduce using rule 18 (impresion -> input .)
    ENTERO          reduce using rule 18 (impresion -> input .)
    RESTA           reduce using rule 18 (impresion -> input .)
    FLOTANTE        reduce using rule 18 (impresion -> input .)
    $end            reduce using rule 18 (impresion -> input .)


state 26

    (65) asignacion -> IDENTIFICADOR . ASIGNAR valor PUNTOCOMA
    (66) asignacion -> IDENTIFICADOR . PUNTOCOMA
    (56) operaciones -> IDENTIFICADOR . ASIGNAR operaciones
    (53) longitud -> IDENTIFICADOR . ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA
    (23) indexacion -> IDENTIFICADOR . CORCHETEIZ valor CORCHETEDER
    (24) indexacion -> IDENTIFICADOR . CORCHETEIZ valor CORCHETEDER PUNTOCOMA
    (70) input -> IDENTIFICADOR . ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA
    (76) funcion -> IDENTIFICADOR . ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA
    (110) queue -> IDENTIFICADOR . ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA
    (111) queue -> IDENTIFICADOR . FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
    (112) queue -> IDENTIFICADOR . FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA
    (113) queue -> IDENTIFICADOR . FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA
    (114) queue -> IDENTIFICADOR . FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (115) queue -> IDENTIFICADOR . FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (116) queue -> IDENTIFICADOR . FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (117) queue -> IDENTIFICADOR . FLECHASIMPLE VALID PARENIZ PARENDER
    (103) stack -> IDENTIFICADOR . FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA
    (104) stack -> IDENTIFICADOR . FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA
    (105) stack -> IDENTIFICADOR . ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA
    (106) stack -> IDENTIFICADOR . FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA
    (107) stack -> IDENTIFICADOR . FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA
    (108) stack -> IDENTIFICADOR . FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA
    (109) stack -> IDENTIFICADOR . FLECHASIMPLE VALID PARENIZ PARENDER
    (118) array -> IDENTIFICADOR . ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA
    (119) array -> IDENTIFICADOR . ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA
    (120) array -> IDENTIFICADOR . ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA
    (121) array -> IDENTIFICADOR . ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA
    (123) array -> IDENTIFICADOR . ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA
    (43) variable -> IDENTIFICADOR .
    (34) valor -> IDENTIFICADOR .

    ASIGNAR         shift and go to state 66
    PUNTOCOMA       shift and go to state 67
    CORCHETEIZ      shift and go to state 68
    FLECHASIMPLE    shift and go to state 69
    MAYORQUE        reduce using rule 43 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 43 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 43 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 43 (variable -> IDENTIFICADOR .)
    SUMA            reduce using rule 43 (variable -> IDENTIFICADOR .)
    RESTA           reduce using rule 43 (variable -> IDENTIFICADOR .)
    MULT            reduce using rule 43 (variable -> IDENTIFICADOR .)
    DIVISION        reduce using rule 43 (variable -> IDENTIFICADOR .)
    DIVISIONENTERA  reduce using rule 43 (variable -> IDENTIFICADOR .)
    MODULO          reduce using rule 43 (variable -> IDENTIFICADOR .)
    POTENCIA        reduce using rule 43 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 34 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 34 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 34 (valor -> IDENTIFICADOR .)


state 27

    (47) comparacion -> valor . comparador valor
    (39) comparador -> . IDENTICO
    (40) comparador -> . NOIDENTICO
    (41) comparador -> . IGUAL

    IDENTICO        shift and go to state 71
    NOIDENTICO      shift and go to state 72
    IGUAL           shift and go to state 73

    comparador                     shift and go to state 70

state 28

    (21) funciones -> funcion .

    IDENTIFICADOR   reduce using rule 21 (funciones -> funcion .)
    COMENTARIO      reduce using rule 21 (funciones -> funcion .)
    LLAVEDER        reduce using rule 21 (funciones -> funcion .)
    PRINT           reduce using rule 21 (funciones -> funcion .)
    ECHO            reduce using rule 21 (funciones -> funcion .)
    FUNCTION        reduce using rule 21 (funciones -> funcion .)
    NAMEFUNCTION    reduce using rule 21 (funciones -> funcion .)
    RETURN          reduce using rule 21 (funciones -> funcion .)
    WHILE           reduce using rule 21 (funciones -> funcion .)
    FOR             reduce using rule 21 (funciones -> funcion .)
    IF              reduce using rule 21 (funciones -> funcion .)
    ELSEIF          reduce using rule 21 (funciones -> funcion .)
    ELSE            reduce using rule 21 (funciones -> funcion .)
    FOREACH         reduce using rule 21 (funciones -> funcion .)
    SWITCH          reduce using rule 21 (funciones -> funcion .)
    ARRAY_PUSH      reduce using rule 21 (funciones -> funcion .)
    CADENA          reduce using rule 21 (funciones -> funcion .)
    BOOLEAN         reduce using rule 21 (funciones -> funcion .)
    ENTERO          reduce using rule 21 (funciones -> funcion .)
    RESTA           reduce using rule 21 (funciones -> funcion .)
    FLOTANTE        reduce using rule 21 (funciones -> funcion .)
    $end            reduce using rule 21 (funciones -> funcion .)


state 29

    (22) funciones -> return .

    IDENTIFICADOR   reduce using rule 22 (funciones -> return .)
    COMENTARIO      reduce using rule 22 (funciones -> return .)
    LLAVEDER        reduce using rule 22 (funciones -> return .)
    PRINT           reduce using rule 22 (funciones -> return .)
    ECHO            reduce using rule 22 (funciones -> return .)
    FUNCTION        reduce using rule 22 (funciones -> return .)
    NAMEFUNCTION    reduce using rule 22 (funciones -> return .)
    RETURN          reduce using rule 22 (funciones -> return .)
    WHILE           reduce using rule 22 (funciones -> return .)
    FOR             reduce using rule 22 (funciones -> return .)
    IF              reduce using rule 22 (funciones -> return .)
    ELSEIF          reduce using rule 22 (funciones -> return .)
    ELSE            reduce using rule 22 (funciones -> return .)
    FOREACH         reduce using rule 22 (funciones -> return .)
    SWITCH          reduce using rule 22 (funciones -> return .)
    ARRAY_PUSH      reduce using rule 22 (funciones -> return .)
    CADENA          reduce using rule 22 (funciones -> return .)
    BOOLEAN         reduce using rule 22 (funciones -> return .)
    ENTERO          reduce using rule 22 (funciones -> return .)
    RESTA           reduce using rule 22 (funciones -> return .)
    FLOTANTE        reduce using rule 22 (funciones -> return .)
    $end            reduce using rule 22 (funciones -> return .)


state 30

    (78) estructurasControl -> while .

    IDENTIFICADOR   reduce using rule 78 (estructurasControl -> while .)
    COMENTARIO      reduce using rule 78 (estructurasControl -> while .)
    LLAVEDER        reduce using rule 78 (estructurasControl -> while .)
    PRINT           reduce using rule 78 (estructurasControl -> while .)
    ECHO            reduce using rule 78 (estructurasControl -> while .)
    FUNCTION        reduce using rule 78 (estructurasControl -> while .)
    NAMEFUNCTION    reduce using rule 78 (estructurasControl -> while .)
    RETURN          reduce using rule 78 (estructurasControl -> while .)
    WHILE           reduce using rule 78 (estructurasControl -> while .)
    FOR             reduce using rule 78 (estructurasControl -> while .)
    IF              reduce using rule 78 (estructurasControl -> while .)
    ELSEIF          reduce using rule 78 (estructurasControl -> while .)
    ELSE            reduce using rule 78 (estructurasControl -> while .)
    FOREACH         reduce using rule 78 (estructurasControl -> while .)
    SWITCH          reduce using rule 78 (estructurasControl -> while .)
    ARRAY_PUSH      reduce using rule 78 (estructurasControl -> while .)
    CADENA          reduce using rule 78 (estructurasControl -> while .)
    BOOLEAN         reduce using rule 78 (estructurasControl -> while .)
    ENTERO          reduce using rule 78 (estructurasControl -> while .)
    RESTA           reduce using rule 78 (estructurasControl -> while .)
    FLOTANTE        reduce using rule 78 (estructurasControl -> while .)
    $end            reduce using rule 78 (estructurasControl -> while .)


state 31

    (79) estructurasControl -> for .

    IDENTIFICADOR   reduce using rule 79 (estructurasControl -> for .)
    COMENTARIO      reduce using rule 79 (estructurasControl -> for .)
    LLAVEDER        reduce using rule 79 (estructurasControl -> for .)
    PRINT           reduce using rule 79 (estructurasControl -> for .)
    ECHO            reduce using rule 79 (estructurasControl -> for .)
    FUNCTION        reduce using rule 79 (estructurasControl -> for .)
    NAMEFUNCTION    reduce using rule 79 (estructurasControl -> for .)
    RETURN          reduce using rule 79 (estructurasControl -> for .)
    WHILE           reduce using rule 79 (estructurasControl -> for .)
    FOR             reduce using rule 79 (estructurasControl -> for .)
    IF              reduce using rule 79 (estructurasControl -> for .)
    ELSEIF          reduce using rule 79 (estructurasControl -> for .)
    ELSE            reduce using rule 79 (estructurasControl -> for .)
    FOREACH         reduce using rule 79 (estructurasControl -> for .)
    SWITCH          reduce using rule 79 (estructurasControl -> for .)
    ARRAY_PUSH      reduce using rule 79 (estructurasControl -> for .)
    CADENA          reduce using rule 79 (estructurasControl -> for .)
    BOOLEAN         reduce using rule 79 (estructurasControl -> for .)
    ENTERO          reduce using rule 79 (estructurasControl -> for .)
    RESTA           reduce using rule 79 (estructurasControl -> for .)
    FLOTANTE        reduce using rule 79 (estructurasControl -> for .)
    $end            reduce using rule 79 (estructurasControl -> for .)


state 32

    (80) estructurasControl -> if .

    IDENTIFICADOR   reduce using rule 80 (estructurasControl -> if .)
    COMENTARIO      reduce using rule 80 (estructurasControl -> if .)
    LLAVEDER        reduce using rule 80 (estructurasControl -> if .)
    PRINT           reduce using rule 80 (estructurasControl -> if .)
    ECHO            reduce using rule 80 (estructurasControl -> if .)
    FUNCTION        reduce using rule 80 (estructurasControl -> if .)
    NAMEFUNCTION    reduce using rule 80 (estructurasControl -> if .)
    RETURN          reduce using rule 80 (estructurasControl -> if .)
    WHILE           reduce using rule 80 (estructurasControl -> if .)
    FOR             reduce using rule 80 (estructurasControl -> if .)
    IF              reduce using rule 80 (estructurasControl -> if .)
    ELSEIF          reduce using rule 80 (estructurasControl -> if .)
    ELSE            reduce using rule 80 (estructurasControl -> if .)
    FOREACH         reduce using rule 80 (estructurasControl -> if .)
    SWITCH          reduce using rule 80 (estructurasControl -> if .)
    ARRAY_PUSH      reduce using rule 80 (estructurasControl -> if .)
    CADENA          reduce using rule 80 (estructurasControl -> if .)
    BOOLEAN         reduce using rule 80 (estructurasControl -> if .)
    ENTERO          reduce using rule 80 (estructurasControl -> if .)
    RESTA           reduce using rule 80 (estructurasControl -> if .)
    FLOTANTE        reduce using rule 80 (estructurasControl -> if .)
    $end            reduce using rule 80 (estructurasControl -> if .)


state 33

    (81) estructurasControl -> elseif .

    IDENTIFICADOR   reduce using rule 81 (estructurasControl -> elseif .)
    COMENTARIO      reduce using rule 81 (estructurasControl -> elseif .)
    LLAVEDER        reduce using rule 81 (estructurasControl -> elseif .)
    PRINT           reduce using rule 81 (estructurasControl -> elseif .)
    ECHO            reduce using rule 81 (estructurasControl -> elseif .)
    FUNCTION        reduce using rule 81 (estructurasControl -> elseif .)
    NAMEFUNCTION    reduce using rule 81 (estructurasControl -> elseif .)
    RETURN          reduce using rule 81 (estructurasControl -> elseif .)
    WHILE           reduce using rule 81 (estructurasControl -> elseif .)
    FOR             reduce using rule 81 (estructurasControl -> elseif .)
    IF              reduce using rule 81 (estructurasControl -> elseif .)
    ELSEIF          reduce using rule 81 (estructurasControl -> elseif .)
    ELSE            reduce using rule 81 (estructurasControl -> elseif .)
    FOREACH         reduce using rule 81 (estructurasControl -> elseif .)
    SWITCH          reduce using rule 81 (estructurasControl -> elseif .)
    ARRAY_PUSH      reduce using rule 81 (estructurasControl -> elseif .)
    CADENA          reduce using rule 81 (estructurasControl -> elseif .)
    BOOLEAN         reduce using rule 81 (estructurasControl -> elseif .)
    ENTERO          reduce using rule 81 (estructurasControl -> elseif .)
    RESTA           reduce using rule 81 (estructurasControl -> elseif .)
    FLOTANTE        reduce using rule 81 (estructurasControl -> elseif .)
    $end            reduce using rule 81 (estructurasControl -> elseif .)


state 34

    (82) estructurasControl -> else .

    IDENTIFICADOR   reduce using rule 82 (estructurasControl -> else .)
    COMENTARIO      reduce using rule 82 (estructurasControl -> else .)
    LLAVEDER        reduce using rule 82 (estructurasControl -> else .)
    PRINT           reduce using rule 82 (estructurasControl -> else .)
    ECHO            reduce using rule 82 (estructurasControl -> else .)
    FUNCTION        reduce using rule 82 (estructurasControl -> else .)
    NAMEFUNCTION    reduce using rule 82 (estructurasControl -> else .)
    RETURN          reduce using rule 82 (estructurasControl -> else .)
    WHILE           reduce using rule 82 (estructurasControl -> else .)
    FOR             reduce using rule 82 (estructurasControl -> else .)
    IF              reduce using rule 82 (estructurasControl -> else .)
    ELSEIF          reduce using rule 82 (estructurasControl -> else .)
    ELSE            reduce using rule 82 (estructurasControl -> else .)
    FOREACH         reduce using rule 82 (estructurasControl -> else .)
    SWITCH          reduce using rule 82 (estructurasControl -> else .)
    ARRAY_PUSH      reduce using rule 82 (estructurasControl -> else .)
    CADENA          reduce using rule 82 (estructurasControl -> else .)
    BOOLEAN         reduce using rule 82 (estructurasControl -> else .)
    ENTERO          reduce using rule 82 (estructurasControl -> else .)
    RESTA           reduce using rule 82 (estructurasControl -> else .)
    FLOTANTE        reduce using rule 82 (estructurasControl -> else .)
    $end            reduce using rule 82 (estructurasControl -> else .)


state 35

    (83) estructurasControl -> foreach .

    IDENTIFICADOR   reduce using rule 83 (estructurasControl -> foreach .)
    COMENTARIO      reduce using rule 83 (estructurasControl -> foreach .)
    LLAVEDER        reduce using rule 83 (estructurasControl -> foreach .)
    PRINT           reduce using rule 83 (estructurasControl -> foreach .)
    ECHO            reduce using rule 83 (estructurasControl -> foreach .)
    FUNCTION        reduce using rule 83 (estructurasControl -> foreach .)
    NAMEFUNCTION    reduce using rule 83 (estructurasControl -> foreach .)
    RETURN          reduce using rule 83 (estructurasControl -> foreach .)
    WHILE           reduce using rule 83 (estructurasControl -> foreach .)
    FOR             reduce using rule 83 (estructurasControl -> foreach .)
    IF              reduce using rule 83 (estructurasControl -> foreach .)
    ELSEIF          reduce using rule 83 (estructurasControl -> foreach .)
    ELSE            reduce using rule 83 (estructurasControl -> foreach .)
    FOREACH         reduce using rule 83 (estructurasControl -> foreach .)
    SWITCH          reduce using rule 83 (estructurasControl -> foreach .)
    ARRAY_PUSH      reduce using rule 83 (estructurasControl -> foreach .)
    CADENA          reduce using rule 83 (estructurasControl -> foreach .)
    BOOLEAN         reduce using rule 83 (estructurasControl -> foreach .)
    ENTERO          reduce using rule 83 (estructurasControl -> foreach .)
    RESTA           reduce using rule 83 (estructurasControl -> foreach .)
    FLOTANTE        reduce using rule 83 (estructurasControl -> foreach .)
    $end            reduce using rule 83 (estructurasControl -> foreach .)


state 36

    (84) estructurasControl -> switch .

    IDENTIFICADOR   reduce using rule 84 (estructurasControl -> switch .)
    COMENTARIO      reduce using rule 84 (estructurasControl -> switch .)
    LLAVEDER        reduce using rule 84 (estructurasControl -> switch .)
    PRINT           reduce using rule 84 (estructurasControl -> switch .)
    ECHO            reduce using rule 84 (estructurasControl -> switch .)
    FUNCTION        reduce using rule 84 (estructurasControl -> switch .)
    NAMEFUNCTION    reduce using rule 84 (estructurasControl -> switch .)
    RETURN          reduce using rule 84 (estructurasControl -> switch .)
    WHILE           reduce using rule 84 (estructurasControl -> switch .)
    FOR             reduce using rule 84 (estructurasControl -> switch .)
    IF              reduce using rule 84 (estructurasControl -> switch .)
    ELSEIF          reduce using rule 84 (estructurasControl -> switch .)
    ELSE            reduce using rule 84 (estructurasControl -> switch .)
    FOREACH         reduce using rule 84 (estructurasControl -> switch .)
    SWITCH          reduce using rule 84 (estructurasControl -> switch .)
    ARRAY_PUSH      reduce using rule 84 (estructurasControl -> switch .)
    CADENA          reduce using rule 84 (estructurasControl -> switch .)
    BOOLEAN         reduce using rule 84 (estructurasControl -> switch .)
    ENTERO          reduce using rule 84 (estructurasControl -> switch .)
    RESTA           reduce using rule 84 (estructurasControl -> switch .)
    FLOTANTE        reduce using rule 84 (estructurasControl -> switch .)
    $end            reduce using rule 84 (estructurasControl -> switch .)


state 37

    (100) estructurasDeDatos -> queue .

    IDENTIFICADOR   reduce using rule 100 (estructurasDeDatos -> queue .)
    COMENTARIO      reduce using rule 100 (estructurasDeDatos -> queue .)
    LLAVEDER        reduce using rule 100 (estructurasDeDatos -> queue .)
    PRINT           reduce using rule 100 (estructurasDeDatos -> queue .)
    ECHO            reduce using rule 100 (estructurasDeDatos -> queue .)
    FUNCTION        reduce using rule 100 (estructurasDeDatos -> queue .)
    NAMEFUNCTION    reduce using rule 100 (estructurasDeDatos -> queue .)
    RETURN          reduce using rule 100 (estructurasDeDatos -> queue .)
    WHILE           reduce using rule 100 (estructurasDeDatos -> queue .)
    FOR             reduce using rule 100 (estructurasDeDatos -> queue .)
    IF              reduce using rule 100 (estructurasDeDatos -> queue .)
    ELSEIF          reduce using rule 100 (estructurasDeDatos -> queue .)
    ELSE            reduce using rule 100 (estructurasDeDatos -> queue .)
    FOREACH         reduce using rule 100 (estructurasDeDatos -> queue .)
    SWITCH          reduce using rule 100 (estructurasDeDatos -> queue .)
    ARRAY_PUSH      reduce using rule 100 (estructurasDeDatos -> queue .)
    CADENA          reduce using rule 100 (estructurasDeDatos -> queue .)
    BOOLEAN         reduce using rule 100 (estructurasDeDatos -> queue .)
    ENTERO          reduce using rule 100 (estructurasDeDatos -> queue .)
    RESTA           reduce using rule 100 (estructurasDeDatos -> queue .)
    FLOTANTE        reduce using rule 100 (estructurasDeDatos -> queue .)
    $end            reduce using rule 100 (estructurasDeDatos -> queue .)


state 38

    (101) estructurasDeDatos -> stack .

    IDENTIFICADOR   reduce using rule 101 (estructurasDeDatos -> stack .)
    COMENTARIO      reduce using rule 101 (estructurasDeDatos -> stack .)
    LLAVEDER        reduce using rule 101 (estructurasDeDatos -> stack .)
    PRINT           reduce using rule 101 (estructurasDeDatos -> stack .)
    ECHO            reduce using rule 101 (estructurasDeDatos -> stack .)
    FUNCTION        reduce using rule 101 (estructurasDeDatos -> stack .)
    NAMEFUNCTION    reduce using rule 101 (estructurasDeDatos -> stack .)
    RETURN          reduce using rule 101 (estructurasDeDatos -> stack .)
    WHILE           reduce using rule 101 (estructurasDeDatos -> stack .)
    FOR             reduce using rule 101 (estructurasDeDatos -> stack .)
    IF              reduce using rule 101 (estructurasDeDatos -> stack .)
    ELSEIF          reduce using rule 101 (estructurasDeDatos -> stack .)
    ELSE            reduce using rule 101 (estructurasDeDatos -> stack .)
    FOREACH         reduce using rule 101 (estructurasDeDatos -> stack .)
    SWITCH          reduce using rule 101 (estructurasDeDatos -> stack .)
    ARRAY_PUSH      reduce using rule 101 (estructurasDeDatos -> stack .)
    CADENA          reduce using rule 101 (estructurasDeDatos -> stack .)
    BOOLEAN         reduce using rule 101 (estructurasDeDatos -> stack .)
    ENTERO          reduce using rule 101 (estructurasDeDatos -> stack .)
    RESTA           reduce using rule 101 (estructurasDeDatos -> stack .)
    FLOTANTE        reduce using rule 101 (estructurasDeDatos -> stack .)
    $end            reduce using rule 101 (estructurasDeDatos -> stack .)


state 39

    (102) estructurasDeDatos -> array .

    IDENTIFICADOR   reduce using rule 102 (estructurasDeDatos -> array .)
    COMENTARIO      reduce using rule 102 (estructurasDeDatos -> array .)
    LLAVEDER        reduce using rule 102 (estructurasDeDatos -> array .)
    PRINT           reduce using rule 102 (estructurasDeDatos -> array .)
    ECHO            reduce using rule 102 (estructurasDeDatos -> array .)
    FUNCTION        reduce using rule 102 (estructurasDeDatos -> array .)
    NAMEFUNCTION    reduce using rule 102 (estructurasDeDatos -> array .)
    RETURN          reduce using rule 102 (estructurasDeDatos -> array .)
    WHILE           reduce using rule 102 (estructurasDeDatos -> array .)
    FOR             reduce using rule 102 (estructurasDeDatos -> array .)
    IF              reduce using rule 102 (estructurasDeDatos -> array .)
    ELSEIF          reduce using rule 102 (estructurasDeDatos -> array .)
    ELSE            reduce using rule 102 (estructurasDeDatos -> array .)
    FOREACH         reduce using rule 102 (estructurasDeDatos -> array .)
    SWITCH          reduce using rule 102 (estructurasDeDatos -> array .)
    ARRAY_PUSH      reduce using rule 102 (estructurasDeDatos -> array .)
    CADENA          reduce using rule 102 (estructurasDeDatos -> array .)
    BOOLEAN         reduce using rule 102 (estructurasDeDatos -> array .)
    ENTERO          reduce using rule 102 (estructurasDeDatos -> array .)
    RESTA           reduce using rule 102 (estructurasDeDatos -> array .)
    FLOTANTE        reduce using rule 102 (estructurasDeDatos -> array .)
    $end            reduce using rule 102 (estructurasDeDatos -> array .)


state 40

    (44) comparaciones -> comparacion .
    (45) comparaciones -> comparacion . operadores comparaciones
    (50) operadores -> . OPERADOR
    (51) operadores -> . AND
    (52) operadores -> . OR

    IDENTIFICADOR   reduce using rule 44 (comparaciones -> comparacion .)
    COMENTARIO      reduce using rule 44 (comparaciones -> comparacion .)
    LLAVEDER        reduce using rule 44 (comparaciones -> comparacion .)
    PRINT           reduce using rule 44 (comparaciones -> comparacion .)
    ECHO            reduce using rule 44 (comparaciones -> comparacion .)
    FUNCTION        reduce using rule 44 (comparaciones -> comparacion .)
    NAMEFUNCTION    reduce using rule 44 (comparaciones -> comparacion .)
    RETURN          reduce using rule 44 (comparaciones -> comparacion .)
    WHILE           reduce using rule 44 (comparaciones -> comparacion .)
    FOR             reduce using rule 44 (comparaciones -> comparacion .)
    IF              reduce using rule 44 (comparaciones -> comparacion .)
    ELSEIF          reduce using rule 44 (comparaciones -> comparacion .)
    ELSE            reduce using rule 44 (comparaciones -> comparacion .)
    FOREACH         reduce using rule 44 (comparaciones -> comparacion .)
    SWITCH          reduce using rule 44 (comparaciones -> comparacion .)
    ARRAY_PUSH      reduce using rule 44 (comparaciones -> comparacion .)
    CADENA          reduce using rule 44 (comparaciones -> comparacion .)
    BOOLEAN         reduce using rule 44 (comparaciones -> comparacion .)
    ENTERO          reduce using rule 44 (comparaciones -> comparacion .)
    RESTA           reduce using rule 44 (comparaciones -> comparacion .)
    FLOTANTE        reduce using rule 44 (comparaciones -> comparacion .)
    $end            reduce using rule 44 (comparaciones -> comparacion .)
    PARENDER        reduce using rule 44 (comparaciones -> comparacion .)
    OPERADOR        shift and go to state 75
    AND             shift and go to state 76
    OR              shift and go to state 77

    operadores                     shift and go to state 74

state 41

    (54) operaciones -> operacion .
    (55) operaciones -> operacion . operadorAritmetico operaciones
    (58) operadorAritmetico -> . SUMA
    (59) operadorAritmetico -> . RESTA
    (60) operadorAritmetico -> . MULT
    (61) operadorAritmetico -> . DIVISION
    (62) operadorAritmetico -> . DIVISIONENTERA
    (63) operadorAritmetico -> . MODULO
    (64) operadorAritmetico -> . POTENCIA

  ! shift/reduce conflict for RESTA resolved as shift
    IDENTIFICADOR   reduce using rule 54 (operaciones -> operacion .)
    COMENTARIO      reduce using rule 54 (operaciones -> operacion .)
    LLAVEDER        reduce using rule 54 (operaciones -> operacion .)
    PRINT           reduce using rule 54 (operaciones -> operacion .)
    ECHO            reduce using rule 54 (operaciones -> operacion .)
    FUNCTION        reduce using rule 54 (operaciones -> operacion .)
    NAMEFUNCTION    reduce using rule 54 (operaciones -> operacion .)
    RETURN          reduce using rule 54 (operaciones -> operacion .)
    WHILE           reduce using rule 54 (operaciones -> operacion .)
    FOR             reduce using rule 54 (operaciones -> operacion .)
    IF              reduce using rule 54 (operaciones -> operacion .)
    ELSEIF          reduce using rule 54 (operaciones -> operacion .)
    ELSE            reduce using rule 54 (operaciones -> operacion .)
    FOREACH         reduce using rule 54 (operaciones -> operacion .)
    SWITCH          reduce using rule 54 (operaciones -> operacion .)
    ARRAY_PUSH      reduce using rule 54 (operaciones -> operacion .)
    CADENA          reduce using rule 54 (operaciones -> operacion .)
    BOOLEAN         reduce using rule 54 (operaciones -> operacion .)
    ENTERO          reduce using rule 54 (operaciones -> operacion .)
    FLOTANTE        reduce using rule 54 (operaciones -> operacion .)
    $end            reduce using rule 54 (operaciones -> operacion .)
    SUMA            shift and go to state 5
    RESTA           shift and go to state 79
    MULT            shift and go to state 7
    DIVISION        shift and go to state 8
    DIVISIONENTERA  shift and go to state 9
    MODULO          shift and go to state 10
    POTENCIA        shift and go to state 11

  ! RESTA           [ reduce using rule 54 (operaciones -> operacion .) ]

    operadorAritmetico             shift and go to state 78

state 42

    (19) comentario -> COMENTARIO .

    IDENTIFICADOR   reduce using rule 19 (comentario -> COMENTARIO .)
    COMENTARIO      reduce using rule 19 (comentario -> COMENTARIO .)
    LLAVEDER        reduce using rule 19 (comentario -> COMENTARIO .)
    PRINT           reduce using rule 19 (comentario -> COMENTARIO .)
    ECHO            reduce using rule 19 (comentario -> COMENTARIO .)
    FUNCTION        reduce using rule 19 (comentario -> COMENTARIO .)
    NAMEFUNCTION    reduce using rule 19 (comentario -> COMENTARIO .)
    RETURN          reduce using rule 19 (comentario -> COMENTARIO .)
    WHILE           reduce using rule 19 (comentario -> COMENTARIO .)
    FOR             reduce using rule 19 (comentario -> COMENTARIO .)
    IF              reduce using rule 19 (comentario -> COMENTARIO .)
    ELSEIF          reduce using rule 19 (comentario -> COMENTARIO .)
    ELSE            reduce using rule 19 (comentario -> COMENTARIO .)
    FOREACH         reduce using rule 19 (comentario -> COMENTARIO .)
    SWITCH          reduce using rule 19 (comentario -> COMENTARIO .)
    ARRAY_PUSH      reduce using rule 19 (comentario -> COMENTARIO .)
    CADENA          reduce using rule 19 (comentario -> COMENTARIO .)
    BOOLEAN         reduce using rule 19 (comentario -> COMENTARIO .)
    ENTERO          reduce using rule 19 (comentario -> COMENTARIO .)
    RESTA           reduce using rule 19 (comentario -> COMENTARIO .)
    FLOTANTE        reduce using rule 19 (comentario -> COMENTARIO .)
    $end            reduce using rule 19 (comentario -> COMENTARIO .)


state 43

    (20) cerrar -> LLAVEDER .
    (94) elseif -> LLAVEDER . ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ
    (95) elseif -> LLAVEDER . ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ
    (98) else -> LLAVEDER . ELSE LLAVEIZ

  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    IDENTIFICADOR   reduce using rule 20 (cerrar -> LLAVEDER .)
    COMENTARIO      reduce using rule 20 (cerrar -> LLAVEDER .)
    LLAVEDER        reduce using rule 20 (cerrar -> LLAVEDER .)
    PRINT           reduce using rule 20 (cerrar -> LLAVEDER .)
    ECHO            reduce using rule 20 (cerrar -> LLAVEDER .)
    FUNCTION        reduce using rule 20 (cerrar -> LLAVEDER .)
    NAMEFUNCTION    reduce using rule 20 (cerrar -> LLAVEDER .)
    RETURN          reduce using rule 20 (cerrar -> LLAVEDER .)
    WHILE           reduce using rule 20 (cerrar -> LLAVEDER .)
    FOR             reduce using rule 20 (cerrar -> LLAVEDER .)
    IF              reduce using rule 20 (cerrar -> LLAVEDER .)
    FOREACH         reduce using rule 20 (cerrar -> LLAVEDER .)
    SWITCH          reduce using rule 20 (cerrar -> LLAVEDER .)
    ARRAY_PUSH      reduce using rule 20 (cerrar -> LLAVEDER .)
    CADENA          reduce using rule 20 (cerrar -> LLAVEDER .)
    BOOLEAN         reduce using rule 20 (cerrar -> LLAVEDER .)
    ENTERO          reduce using rule 20 (cerrar -> LLAVEDER .)
    RESTA           reduce using rule 20 (cerrar -> LLAVEDER .)
    FLOTANTE        reduce using rule 20 (cerrar -> LLAVEDER .)
    $end            reduce using rule 20 (cerrar -> LLAVEDER .)
    ELSEIF          shift and go to state 80
    ELSE            shift and go to state 81

  ! ELSEIF          [ reduce using rule 20 (cerrar -> LLAVEDER .) ]
  ! ELSE            [ reduce using rule 20 (cerrar -> LLAVEDER .) ]


state 44

    (67) print -> PRINT . PARENIZ valores PARENDER PUNTOCOMA
    (68) print -> PRINT . valor PUNTOCOMA
    (69) print -> PRINT . PARENIZ PARENDER PUNTOCOMA
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    PARENIZ         shift and go to state 82
    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    IDENTIFICADOR   shift and go to state 85
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    valor                          shift and go to state 83
    NUMERO                         shift and go to state 84

state 45

    (71) echo -> ECHO . valores PUNTOCOMA
    (25) valores -> . valor
    (26) valores -> . indexacion
    (27) valores -> . valor COMA valores
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (23) indexacion -> . IDENTIFICADOR CORCHETEIZ valor CORCHETEDER
    (24) indexacion -> . IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    IDENTIFICADOR   shift and go to state 89
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    valores                        shift and go to state 86
    valor                          shift and go to state 87
    indexacion                     shift and go to state 88
    NUMERO                         shift and go to state 84

state 46

    (72) funcion -> FUNCTION . NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ

    NAMEFUNCTION    shift and go to state 90


state 47

    (75) funcion -> NAMEFUNCTION . PARENIZ valores PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 91


state 48

    (77) return -> RETURN . IDENTIFICADOR PUNTOCOMA

    IDENTIFICADOR   shift and go to state 92


state 49

    (85) while -> WHILE . PARENIZ comparaciones PARENDER LLAVEIZ

    PARENIZ         shift and go to state 93


state 50

    (86) for -> FOR . PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ

    PARENIZ         shift and go to state 94


state 51

    (28) NUMERO -> ENTERO .

    MAYORQUE        reduce using rule 28 (NUMERO -> ENTERO .)
    MAYORIGUALQUE   reduce using rule 28 (NUMERO -> ENTERO .)
    MENORQUE        reduce using rule 28 (NUMERO -> ENTERO .)
    MENORIGUALQUE   reduce using rule 28 (NUMERO -> ENTERO .)
    SUMA            reduce using rule 28 (NUMERO -> ENTERO .)
    RESTA           reduce using rule 28 (NUMERO -> ENTERO .)
    MULT            reduce using rule 28 (NUMERO -> ENTERO .)
    DIVISION        reduce using rule 28 (NUMERO -> ENTERO .)
    DIVISIONENTERA  reduce using rule 28 (NUMERO -> ENTERO .)
    MODULO          reduce using rule 28 (NUMERO -> ENTERO .)
    POTENCIA        reduce using rule 28 (NUMERO -> ENTERO .)
    IDENTICO        reduce using rule 28 (NUMERO -> ENTERO .)
    NOIDENTICO      reduce using rule 28 (NUMERO -> ENTERO .)
    IGUAL           reduce using rule 28 (NUMERO -> ENTERO .)
    PUNTOCOMA       reduce using rule 28 (NUMERO -> ENTERO .)
    COMA            reduce using rule 28 (NUMERO -> ENTERO .)
    CORCHETEDER     reduce using rule 28 (NUMERO -> ENTERO .)
    OPERADOR        reduce using rule 28 (NUMERO -> ENTERO .)
    AND             reduce using rule 28 (NUMERO -> ENTERO .)
    OR              reduce using rule 28 (NUMERO -> ENTERO .)
    IDENTIFICADOR   reduce using rule 28 (NUMERO -> ENTERO .)
    COMENTARIO      reduce using rule 28 (NUMERO -> ENTERO .)
    LLAVEDER        reduce using rule 28 (NUMERO -> ENTERO .)
    PRINT           reduce using rule 28 (NUMERO -> ENTERO .)
    ECHO            reduce using rule 28 (NUMERO -> ENTERO .)
    FUNCTION        reduce using rule 28 (NUMERO -> ENTERO .)
    NAMEFUNCTION    reduce using rule 28 (NUMERO -> ENTERO .)
    RETURN          reduce using rule 28 (NUMERO -> ENTERO .)
    WHILE           reduce using rule 28 (NUMERO -> ENTERO .)
    FOR             reduce using rule 28 (NUMERO -> ENTERO .)
    IF              reduce using rule 28 (NUMERO -> ENTERO .)
    ELSEIF          reduce using rule 28 (NUMERO -> ENTERO .)
    ELSE            reduce using rule 28 (NUMERO -> ENTERO .)
    FOREACH         reduce using rule 28 (NUMERO -> ENTERO .)
    SWITCH          reduce using rule 28 (NUMERO -> ENTERO .)
    ARRAY_PUSH      reduce using rule 28 (NUMERO -> ENTERO .)
    CADENA          reduce using rule 28 (NUMERO -> ENTERO .)
    BOOLEAN         reduce using rule 28 (NUMERO -> ENTERO .)
    ENTERO          reduce using rule 28 (NUMERO -> ENTERO .)
    FLOTANTE        reduce using rule 28 (NUMERO -> ENTERO .)
    $end            reduce using rule 28 (NUMERO -> ENTERO .)
    PARENDER        reduce using rule 28 (NUMERO -> ENTERO .)
    DOSPUNTOS       reduce using rule 28 (NUMERO -> ENTERO .)
    INCREMENTO      reduce using rule 28 (NUMERO -> ENTERO .)
    DECREMENTO      reduce using rule 28 (NUMERO -> ENTERO .)


state 52

    (92) if -> IF . PARENIZ comparaciones PARENDER LLAVEIZ
    (93) if -> IF . PARENIZ IDENTIFICADOR PARENDER LLAVEIZ

    PARENIZ         shift and go to state 95


state 53

    (96) elseif -> ELSEIF . PARENIZ comparaciones PARENDER LLAVEIZ
    (97) elseif -> ELSEIF . PARENIZ IDENTIFICADOR PARENDER LLAVEIZ

    PARENIZ         shift and go to state 96


state 54

    (99) else -> ELSE . LLAVEIZ

    LLAVEIZ         shift and go to state 97


state 55

    (87) foreach -> FOREACH . PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ

    PARENIZ         shift and go to state 98


state 56

    (88) switch -> SWITCH . PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER

    PARENIZ         shift and go to state 99


state 57

    (122) array -> ARRAY_PUSH . PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 100


state 58

    (46) comparacion -> variable . comparadorNum variable
    (57) operacion -> variable . operadorAritmetico variable
    (35) comparadorNum -> . MAYORQUE
    (36) comparadorNum -> . MAYORIGUALQUE
    (37) comparadorNum -> . MENORQUE
    (38) comparadorNum -> . MENORIGUALQUE
    (58) operadorAritmetico -> . SUMA
    (59) operadorAritmetico -> . RESTA
    (60) operadorAritmetico -> . MULT
    (61) operadorAritmetico -> . DIVISION
    (62) operadorAritmetico -> . DIVISIONENTERA
    (63) operadorAritmetico -> . MODULO
    (64) operadorAritmetico -> . POTENCIA

    MAYORQUE        shift and go to state 103
    MAYORIGUALQUE   shift and go to state 104
    MENORQUE        shift and go to state 105
    MENORIGUALQUE   shift and go to state 106
    SUMA            shift and go to state 5
    RESTA           shift and go to state 79
    MULT            shift and go to state 7
    DIVISION        shift and go to state 8
    DIVISIONENTERA  shift and go to state 9
    MODULO          shift and go to state 10
    POTENCIA        shift and go to state 11

    comparadorNum                  shift and go to state 101
    operadorAritmetico             shift and go to state 102

state 59

    (42) variable -> NUMERO .
    (31) valor -> NUMERO .

    MAYORQUE        reduce using rule 42 (variable -> NUMERO .)
    MAYORIGUALQUE   reduce using rule 42 (variable -> NUMERO .)
    MENORQUE        reduce using rule 42 (variable -> NUMERO .)
    MENORIGUALQUE   reduce using rule 42 (variable -> NUMERO .)
    SUMA            reduce using rule 42 (variable -> NUMERO .)
    RESTA           reduce using rule 42 (variable -> NUMERO .)
    MULT            reduce using rule 42 (variable -> NUMERO .)
    DIVISION        reduce using rule 42 (variable -> NUMERO .)
    DIVISIONENTERA  reduce using rule 42 (variable -> NUMERO .)
    MODULO          reduce using rule 42 (variable -> NUMERO .)
    POTENCIA        reduce using rule 42 (variable -> NUMERO .)
    IDENTICO        reduce using rule 31 (valor -> NUMERO .)
    NOIDENTICO      reduce using rule 31 (valor -> NUMERO .)
    IGUAL           reduce using rule 31 (valor -> NUMERO .)


state 60

    (32) valor -> CADENA .

    IDENTICO        reduce using rule 32 (valor -> CADENA .)
    NOIDENTICO      reduce using rule 32 (valor -> CADENA .)
    IGUAL           reduce using rule 32 (valor -> CADENA .)
    PUNTOCOMA       reduce using rule 32 (valor -> CADENA .)
    COMA            reduce using rule 32 (valor -> CADENA .)
    CORCHETEDER     reduce using rule 32 (valor -> CADENA .)
    OPERADOR        reduce using rule 32 (valor -> CADENA .)
    AND             reduce using rule 32 (valor -> CADENA .)
    OR              reduce using rule 32 (valor -> CADENA .)
    IDENTIFICADOR   reduce using rule 32 (valor -> CADENA .)
    COMENTARIO      reduce using rule 32 (valor -> CADENA .)
    LLAVEDER        reduce using rule 32 (valor -> CADENA .)
    PRINT           reduce using rule 32 (valor -> CADENA .)
    ECHO            reduce using rule 32 (valor -> CADENA .)
    FUNCTION        reduce using rule 32 (valor -> CADENA .)
    NAMEFUNCTION    reduce using rule 32 (valor -> CADENA .)
    RETURN          reduce using rule 32 (valor -> CADENA .)
    WHILE           reduce using rule 32 (valor -> CADENA .)
    FOR             reduce using rule 32 (valor -> CADENA .)
    IF              reduce using rule 32 (valor -> CADENA .)
    ELSEIF          reduce using rule 32 (valor -> CADENA .)
    ELSE            reduce using rule 32 (valor -> CADENA .)
    FOREACH         reduce using rule 32 (valor -> CADENA .)
    SWITCH          reduce using rule 32 (valor -> CADENA .)
    ARRAY_PUSH      reduce using rule 32 (valor -> CADENA .)
    CADENA          reduce using rule 32 (valor -> CADENA .)
    BOOLEAN         reduce using rule 32 (valor -> CADENA .)
    ENTERO          reduce using rule 32 (valor -> CADENA .)
    RESTA           reduce using rule 32 (valor -> CADENA .)
    FLOTANTE        reduce using rule 32 (valor -> CADENA .)
    $end            reduce using rule 32 (valor -> CADENA .)
    PARENDER        reduce using rule 32 (valor -> CADENA .)
    DOSPUNTOS       reduce using rule 32 (valor -> CADENA .)


state 61

    (33) valor -> BOOLEAN .

    IDENTICO        reduce using rule 33 (valor -> BOOLEAN .)
    NOIDENTICO      reduce using rule 33 (valor -> BOOLEAN .)
    IGUAL           reduce using rule 33 (valor -> BOOLEAN .)
    PUNTOCOMA       reduce using rule 33 (valor -> BOOLEAN .)
    COMA            reduce using rule 33 (valor -> BOOLEAN .)
    CORCHETEDER     reduce using rule 33 (valor -> BOOLEAN .)
    OPERADOR        reduce using rule 33 (valor -> BOOLEAN .)
    AND             reduce using rule 33 (valor -> BOOLEAN .)
    OR              reduce using rule 33 (valor -> BOOLEAN .)
    IDENTIFICADOR   reduce using rule 33 (valor -> BOOLEAN .)
    COMENTARIO      reduce using rule 33 (valor -> BOOLEAN .)
    LLAVEDER        reduce using rule 33 (valor -> BOOLEAN .)
    PRINT           reduce using rule 33 (valor -> BOOLEAN .)
    ECHO            reduce using rule 33 (valor -> BOOLEAN .)
    FUNCTION        reduce using rule 33 (valor -> BOOLEAN .)
    NAMEFUNCTION    reduce using rule 33 (valor -> BOOLEAN .)
    RETURN          reduce using rule 33 (valor -> BOOLEAN .)
    WHILE           reduce using rule 33 (valor -> BOOLEAN .)
    FOR             reduce using rule 33 (valor -> BOOLEAN .)
    IF              reduce using rule 33 (valor -> BOOLEAN .)
    ELSEIF          reduce using rule 33 (valor -> BOOLEAN .)
    ELSE            reduce using rule 33 (valor -> BOOLEAN .)
    FOREACH         reduce using rule 33 (valor -> BOOLEAN .)
    SWITCH          reduce using rule 33 (valor -> BOOLEAN .)
    ARRAY_PUSH      reduce using rule 33 (valor -> BOOLEAN .)
    CADENA          reduce using rule 33 (valor -> BOOLEAN .)
    BOOLEAN         reduce using rule 33 (valor -> BOOLEAN .)
    ENTERO          reduce using rule 33 (valor -> BOOLEAN .)
    RESTA           reduce using rule 33 (valor -> BOOLEAN .)
    FLOTANTE        reduce using rule 33 (valor -> BOOLEAN .)
    $end            reduce using rule 33 (valor -> BOOLEAN .)
    PARENDER        reduce using rule 33 (valor -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 33 (valor -> BOOLEAN .)


state 62

    (30) NUMERO -> FLOTANTE .

    MAYORQUE        reduce using rule 30 (NUMERO -> FLOTANTE .)
    MAYORIGUALQUE   reduce using rule 30 (NUMERO -> FLOTANTE .)
    MENORQUE        reduce using rule 30 (NUMERO -> FLOTANTE .)
    MENORIGUALQUE   reduce using rule 30 (NUMERO -> FLOTANTE .)
    SUMA            reduce using rule 30 (NUMERO -> FLOTANTE .)
    RESTA           reduce using rule 30 (NUMERO -> FLOTANTE .)
    MULT            reduce using rule 30 (NUMERO -> FLOTANTE .)
    DIVISION        reduce using rule 30 (NUMERO -> FLOTANTE .)
    DIVISIONENTERA  reduce using rule 30 (NUMERO -> FLOTANTE .)
    MODULO          reduce using rule 30 (NUMERO -> FLOTANTE .)
    POTENCIA        reduce using rule 30 (NUMERO -> FLOTANTE .)
    IDENTICO        reduce using rule 30 (NUMERO -> FLOTANTE .)
    NOIDENTICO      reduce using rule 30 (NUMERO -> FLOTANTE .)
    IGUAL           reduce using rule 30 (NUMERO -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 30 (NUMERO -> FLOTANTE .)
    COMA            reduce using rule 30 (NUMERO -> FLOTANTE .)
    CORCHETEDER     reduce using rule 30 (NUMERO -> FLOTANTE .)
    OPERADOR        reduce using rule 30 (NUMERO -> FLOTANTE .)
    AND             reduce using rule 30 (NUMERO -> FLOTANTE .)
    OR              reduce using rule 30 (NUMERO -> FLOTANTE .)
    IDENTIFICADOR   reduce using rule 30 (NUMERO -> FLOTANTE .)
    COMENTARIO      reduce using rule 30 (NUMERO -> FLOTANTE .)
    LLAVEDER        reduce using rule 30 (NUMERO -> FLOTANTE .)
    PRINT           reduce using rule 30 (NUMERO -> FLOTANTE .)
    ECHO            reduce using rule 30 (NUMERO -> FLOTANTE .)
    FUNCTION        reduce using rule 30 (NUMERO -> FLOTANTE .)
    NAMEFUNCTION    reduce using rule 30 (NUMERO -> FLOTANTE .)
    RETURN          reduce using rule 30 (NUMERO -> FLOTANTE .)
    WHILE           reduce using rule 30 (NUMERO -> FLOTANTE .)
    FOR             reduce using rule 30 (NUMERO -> FLOTANTE .)
    IF              reduce using rule 30 (NUMERO -> FLOTANTE .)
    ELSEIF          reduce using rule 30 (NUMERO -> FLOTANTE .)
    ELSE            reduce using rule 30 (NUMERO -> FLOTANTE .)
    FOREACH         reduce using rule 30 (NUMERO -> FLOTANTE .)
    SWITCH          reduce using rule 30 (NUMERO -> FLOTANTE .)
    ARRAY_PUSH      reduce using rule 30 (NUMERO -> FLOTANTE .)
    CADENA          reduce using rule 30 (NUMERO -> FLOTANTE .)
    BOOLEAN         reduce using rule 30 (NUMERO -> FLOTANTE .)
    ENTERO          reduce using rule 30 (NUMERO -> FLOTANTE .)
    FLOTANTE        reduce using rule 30 (NUMERO -> FLOTANTE .)
    $end            reduce using rule 30 (NUMERO -> FLOTANTE .)
    PARENDER        reduce using rule 30 (NUMERO -> FLOTANTE .)
    DOSPUNTOS       reduce using rule 30 (NUMERO -> FLOTANTE .)
    INCREMENTO      reduce using rule 30 (NUMERO -> FLOTANTE .)
    DECREMENTO      reduce using rule 30 (NUMERO -> FLOTANTE .)


state 63

    (4) bloques -> bloque bloques .

    $end            reduce using rule 4 (bloques -> bloque bloques .)


state 64

    (29) NUMERO -> RESTA . ENTERO

    ENTERO          shift and go to state 65


state 65

    (29) NUMERO -> RESTA ENTERO .

    MAYORQUE        reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    MAYORIGUALQUE   reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    MENORQUE        reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    MENORIGUALQUE   reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    SUMA            reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    RESTA           reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    MULT            reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    DIVISION        reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    DIVISIONENTERA  reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    MODULO          reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    POTENCIA        reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    IDENTICO        reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    NOIDENTICO      reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    IGUAL           reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    PUNTOCOMA       reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    COMA            reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    CORCHETEDER     reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    OPERADOR        reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    AND             reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    OR              reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    IDENTIFICADOR   reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    COMENTARIO      reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    LLAVEDER        reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    PRINT           reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    ECHO            reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    FUNCTION        reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    NAMEFUNCTION    reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    RETURN          reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    WHILE           reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    FOR             reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    IF              reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    ELSEIF          reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    ELSE            reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    FOREACH         reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    SWITCH          reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    ARRAY_PUSH      reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    CADENA          reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    BOOLEAN         reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    ENTERO          reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    FLOTANTE        reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    $end            reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    PARENDER        reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    DOSPUNTOS       reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    INCREMENTO      reduce using rule 29 (NUMERO -> RESTA ENTERO .)
    DECREMENTO      reduce using rule 29 (NUMERO -> RESTA ENTERO .)


state 66

    (65) asignacion -> IDENTIFICADOR ASIGNAR . valor PUNTOCOMA
    (56) operaciones -> IDENTIFICADOR ASIGNAR . operaciones
    (53) longitud -> IDENTIFICADOR ASIGNAR . STRLEN PARENIZ valor PARENDER PUNTOCOMA
    (70) input -> IDENTIFICADOR ASIGNAR . FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA
    (76) funcion -> IDENTIFICADOR ASIGNAR . NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA
    (110) queue -> IDENTIFICADOR ASIGNAR . NEW QUEUE PARENIZ PARENDER PUNTOCOMA
    (105) stack -> IDENTIFICADOR ASIGNAR . NEW STACK PARENIZ PARENDER PUNTOCOMA
    (118) array -> IDENTIFICADOR ASIGNAR . ARRAY PARENIZ PARENDER PUNTOCOMA
    (119) array -> IDENTIFICADOR ASIGNAR . ARRAY PARENIZ valores PARENDER PUNTOCOMA
    (120) array -> IDENTIFICADOR ASIGNAR . CORCHETEIZ valores CORCHETEDER PUNTOCOMA
    (121) array -> IDENTIFICADOR ASIGNAR . ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA
    (123) array -> IDENTIFICADOR ASIGNAR . IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (54) operaciones -> . operacion
    (55) operaciones -> . operacion operadorAritmetico operaciones
    (56) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE
    (57) operacion -> . variable operadorAritmetico variable
    (42) variable -> . NUMERO
    (43) variable -> . IDENTIFICADOR

    STRLEN          shift and go to state 110
    FGETS           shift and go to state 111
    NAMEFUNCTION    shift and go to state 112
    NEW             shift and go to state 113
    ARRAY           shift and go to state 114
    CORCHETEIZ      shift and go to state 115
    ARRAY_SHIFT     shift and go to state 116
    IN_ARRAY        shift and go to state 117
    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    IDENTIFICADOR   shift and go to state 107
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    valor                          shift and go to state 108
    operaciones                    shift and go to state 109
    NUMERO                         shift and go to state 118
    operacion                      shift and go to state 41
    variable                       shift and go to state 119

state 67

    (66) asignacion -> IDENTIFICADOR PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 66 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    COMENTARIO      reduce using rule 66 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    LLAVEDER        reduce using rule 66 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    PRINT           reduce using rule 66 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    ECHO            reduce using rule 66 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    FUNCTION        reduce using rule 66 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 66 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    RETURN          reduce using rule 66 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    WHILE           reduce using rule 66 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    FOR             reduce using rule 66 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    IF              reduce using rule 66 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    ELSEIF          reduce using rule 66 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    ELSE            reduce using rule 66 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    FOREACH         reduce using rule 66 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    SWITCH          reduce using rule 66 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 66 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    CADENA          reduce using rule 66 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    BOOLEAN         reduce using rule 66 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    ENTERO          reduce using rule 66 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    RESTA           reduce using rule 66 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    FLOTANTE        reduce using rule 66 (asignacion -> IDENTIFICADOR PUNTOCOMA .)
    $end            reduce using rule 66 (asignacion -> IDENTIFICADOR PUNTOCOMA .)


state 68

    (23) indexacion -> IDENTIFICADOR CORCHETEIZ . valor CORCHETEDER
    (24) indexacion -> IDENTIFICADOR CORCHETEIZ . valor CORCHETEDER PUNTOCOMA
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    IDENTIFICADOR   shift and go to state 85
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    valor                          shift and go to state 120
    NUMERO                         shift and go to state 84

state 69

    (111) queue -> IDENTIFICADOR FLECHASIMPLE . ENQUEUE PARENIZ valor PARENDER PUNTOCOMA
    (112) queue -> IDENTIFICADOR FLECHASIMPLE . COUNT PARENIZ PARENDER PUNTOCOMA
    (113) queue -> IDENTIFICADOR FLECHASIMPLE . DEQUEUE PARENIZ PARENDER PUNTOCOMA
    (114) queue -> IDENTIFICADOR FLECHASIMPLE . NEXT PARENIZ PARENDER PUNTOCOMA
    (115) queue -> IDENTIFICADOR FLECHASIMPLE . REWIND PARENIZ PARENDER PUNTOCOMA
    (116) queue -> IDENTIFICADOR FLECHASIMPLE . CURRENT PARENIZ PARENDER PUNTOCOMA
    (117) queue -> IDENTIFICADOR FLECHASIMPLE . VALID PARENIZ PARENDER
    (103) stack -> IDENTIFICADOR FLECHASIMPLE . PUSH PARENIZ valor PARENDER PUNTOCOMA
    (104) stack -> IDENTIFICADOR FLECHASIMPLE . POP PARENIZ PARENDER PUNTOCOMA
    (106) stack -> IDENTIFICADOR FLECHASIMPLE . NEXT PARENIZ PARENDER PUNTOCOMA
    (107) stack -> IDENTIFICADOR FLECHASIMPLE . REWIND PARENIZ PARENDER PUNTOCOMA
    (108) stack -> IDENTIFICADOR FLECHASIMPLE . CURRENT PARENIZ PARENDER PUNTOCOMA
    (109) stack -> IDENTIFICADOR FLECHASIMPLE . VALID PARENIZ PARENDER

    ENQUEUE         shift and go to state 121
    COUNT           shift and go to state 122
    DEQUEUE         shift and go to state 123
    NEXT            shift and go to state 124
    REWIND          shift and go to state 125
    CURRENT         shift and go to state 126
    VALID           shift and go to state 127
    PUSH            shift and go to state 128
    POP             shift and go to state 129


state 70

    (47) comparacion -> valor comparador . valor
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    IDENTIFICADOR   shift and go to state 85
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    valor                          shift and go to state 130
    NUMERO                         shift and go to state 84

state 71

    (39) comparador -> IDENTICO .

    CADENA          reduce using rule 39 (comparador -> IDENTICO .)
    BOOLEAN         reduce using rule 39 (comparador -> IDENTICO .)
    IDENTIFICADOR   reduce using rule 39 (comparador -> IDENTICO .)
    ENTERO          reduce using rule 39 (comparador -> IDENTICO .)
    RESTA           reduce using rule 39 (comparador -> IDENTICO .)
    FLOTANTE        reduce using rule 39 (comparador -> IDENTICO .)


state 72

    (40) comparador -> NOIDENTICO .

    CADENA          reduce using rule 40 (comparador -> NOIDENTICO .)
    BOOLEAN         reduce using rule 40 (comparador -> NOIDENTICO .)
    IDENTIFICADOR   reduce using rule 40 (comparador -> NOIDENTICO .)
    ENTERO          reduce using rule 40 (comparador -> NOIDENTICO .)
    RESTA           reduce using rule 40 (comparador -> NOIDENTICO .)
    FLOTANTE        reduce using rule 40 (comparador -> NOIDENTICO .)


state 73

    (41) comparador -> IGUAL .

    CADENA          reduce using rule 41 (comparador -> IGUAL .)
    BOOLEAN         reduce using rule 41 (comparador -> IGUAL .)
    IDENTIFICADOR   reduce using rule 41 (comparador -> IGUAL .)
    ENTERO          reduce using rule 41 (comparador -> IGUAL .)
    RESTA           reduce using rule 41 (comparador -> IGUAL .)
    FLOTANTE        reduce using rule 41 (comparador -> IGUAL .)


state 74

    (45) comparaciones -> comparacion operadores . comparaciones
    (44) comparaciones -> . comparacion
    (45) comparaciones -> . comparacion operadores comparaciones
    (46) comparacion -> . variable comparadorNum variable
    (47) comparacion -> . valor comparador valor
    (42) variable -> . NUMERO
    (43) variable -> . IDENTIFICADOR
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 133
    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    comparacion                    shift and go to state 40
    comparaciones                  shift and go to state 131
    variable                       shift and go to state 132
    valor                          shift and go to state 27
    NUMERO                         shift and go to state 59

state 75

    (50) operadores -> OPERADOR .

    IDENTIFICADOR   reduce using rule 50 (operadores -> OPERADOR .)
    CADENA          reduce using rule 50 (operadores -> OPERADOR .)
    BOOLEAN         reduce using rule 50 (operadores -> OPERADOR .)
    ENTERO          reduce using rule 50 (operadores -> OPERADOR .)
    RESTA           reduce using rule 50 (operadores -> OPERADOR .)
    FLOTANTE        reduce using rule 50 (operadores -> OPERADOR .)


state 76

    (51) operadores -> AND .

    IDENTIFICADOR   reduce using rule 51 (operadores -> AND .)
    CADENA          reduce using rule 51 (operadores -> AND .)
    BOOLEAN         reduce using rule 51 (operadores -> AND .)
    ENTERO          reduce using rule 51 (operadores -> AND .)
    RESTA           reduce using rule 51 (operadores -> AND .)
    FLOTANTE        reduce using rule 51 (operadores -> AND .)


state 77

    (52) operadores -> OR .

    IDENTIFICADOR   reduce using rule 52 (operadores -> OR .)
    CADENA          reduce using rule 52 (operadores -> OR .)
    BOOLEAN         reduce using rule 52 (operadores -> OR .)
    ENTERO          reduce using rule 52 (operadores -> OR .)
    RESTA           reduce using rule 52 (operadores -> OR .)
    FLOTANTE        reduce using rule 52 (operadores -> OR .)


state 78

    (55) operaciones -> operacion operadorAritmetico . operaciones
    (54) operaciones -> . operacion
    (55) operaciones -> . operacion operadorAritmetico operaciones
    (56) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (57) operacion -> . variable operadorAritmetico variable
    (42) variable -> . NUMERO
    (43) variable -> . IDENTIFICADOR
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 135
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    operacion                      shift and go to state 41
    operaciones                    shift and go to state 134
    variable                       shift and go to state 119
    NUMERO                         shift and go to state 136

state 79

    (59) operadorAritmetico -> RESTA .

    IDENTIFICADOR   reduce using rule 59 (operadorAritmetico -> RESTA .)
    ENTERO          reduce using rule 59 (operadorAritmetico -> RESTA .)
    RESTA           reduce using rule 59 (operadorAritmetico -> RESTA .)
    FLOTANTE        reduce using rule 59 (operadorAritmetico -> RESTA .)


state 80

    (94) elseif -> LLAVEDER ELSEIF . PARENIZ comparaciones PARENDER LLAVEIZ
    (95) elseif -> LLAVEDER ELSEIF . PARENIZ IDENTIFICADOR PARENDER LLAVEIZ

    PARENIZ         shift and go to state 137


state 81

    (98) else -> LLAVEDER ELSE . LLAVEIZ

    LLAVEIZ         shift and go to state 138


state 82

    (67) print -> PRINT PARENIZ . valores PARENDER PUNTOCOMA
    (69) print -> PRINT PARENIZ . PARENDER PUNTOCOMA
    (25) valores -> . valor
    (26) valores -> . indexacion
    (27) valores -> . valor COMA valores
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (23) indexacion -> . IDENTIFICADOR CORCHETEIZ valor CORCHETEDER
    (24) indexacion -> . IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    PARENDER        shift and go to state 140
    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    IDENTIFICADOR   shift and go to state 89
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    valores                        shift and go to state 139
    valor                          shift and go to state 87
    indexacion                     shift and go to state 88
    NUMERO                         shift and go to state 84

state 83

    (68) print -> PRINT valor . PUNTOCOMA

    PUNTOCOMA       shift and go to state 141


state 84

    (31) valor -> NUMERO .

    PUNTOCOMA       reduce using rule 31 (valor -> NUMERO .)
    COMA            reduce using rule 31 (valor -> NUMERO .)
    CORCHETEDER     reduce using rule 31 (valor -> NUMERO .)
    OPERADOR        reduce using rule 31 (valor -> NUMERO .)
    AND             reduce using rule 31 (valor -> NUMERO .)
    OR              reduce using rule 31 (valor -> NUMERO .)
    IDENTIFICADOR   reduce using rule 31 (valor -> NUMERO .)
    COMENTARIO      reduce using rule 31 (valor -> NUMERO .)
    LLAVEDER        reduce using rule 31 (valor -> NUMERO .)
    PRINT           reduce using rule 31 (valor -> NUMERO .)
    ECHO            reduce using rule 31 (valor -> NUMERO .)
    FUNCTION        reduce using rule 31 (valor -> NUMERO .)
    NAMEFUNCTION    reduce using rule 31 (valor -> NUMERO .)
    RETURN          reduce using rule 31 (valor -> NUMERO .)
    WHILE           reduce using rule 31 (valor -> NUMERO .)
    FOR             reduce using rule 31 (valor -> NUMERO .)
    IF              reduce using rule 31 (valor -> NUMERO .)
    ELSEIF          reduce using rule 31 (valor -> NUMERO .)
    ELSE            reduce using rule 31 (valor -> NUMERO .)
    FOREACH         reduce using rule 31 (valor -> NUMERO .)
    SWITCH          reduce using rule 31 (valor -> NUMERO .)
    ARRAY_PUSH      reduce using rule 31 (valor -> NUMERO .)
    CADENA          reduce using rule 31 (valor -> NUMERO .)
    BOOLEAN         reduce using rule 31 (valor -> NUMERO .)
    ENTERO          reduce using rule 31 (valor -> NUMERO .)
    RESTA           reduce using rule 31 (valor -> NUMERO .)
    FLOTANTE        reduce using rule 31 (valor -> NUMERO .)
    $end            reduce using rule 31 (valor -> NUMERO .)
    PARENDER        reduce using rule 31 (valor -> NUMERO .)
    DOSPUNTOS       reduce using rule 31 (valor -> NUMERO .)


state 85

    (34) valor -> IDENTIFICADOR .

    PUNTOCOMA       reduce using rule 34 (valor -> IDENTIFICADOR .)
    CORCHETEDER     reduce using rule 34 (valor -> IDENTIFICADOR .)
    OPERADOR        reduce using rule 34 (valor -> IDENTIFICADOR .)
    AND             reduce using rule 34 (valor -> IDENTIFICADOR .)
    OR              reduce using rule 34 (valor -> IDENTIFICADOR .)
    IDENTIFICADOR   reduce using rule 34 (valor -> IDENTIFICADOR .)
    COMENTARIO      reduce using rule 34 (valor -> IDENTIFICADOR .)
    LLAVEDER        reduce using rule 34 (valor -> IDENTIFICADOR .)
    PRINT           reduce using rule 34 (valor -> IDENTIFICADOR .)
    ECHO            reduce using rule 34 (valor -> IDENTIFICADOR .)
    FUNCTION        reduce using rule 34 (valor -> IDENTIFICADOR .)
    NAMEFUNCTION    reduce using rule 34 (valor -> IDENTIFICADOR .)
    RETURN          reduce using rule 34 (valor -> IDENTIFICADOR .)
    WHILE           reduce using rule 34 (valor -> IDENTIFICADOR .)
    FOR             reduce using rule 34 (valor -> IDENTIFICADOR .)
    IF              reduce using rule 34 (valor -> IDENTIFICADOR .)
    ELSEIF          reduce using rule 34 (valor -> IDENTIFICADOR .)
    ELSE            reduce using rule 34 (valor -> IDENTIFICADOR .)
    FOREACH         reduce using rule 34 (valor -> IDENTIFICADOR .)
    SWITCH          reduce using rule 34 (valor -> IDENTIFICADOR .)
    ARRAY_PUSH      reduce using rule 34 (valor -> IDENTIFICADOR .)
    CADENA          reduce using rule 34 (valor -> IDENTIFICADOR .)
    BOOLEAN         reduce using rule 34 (valor -> IDENTIFICADOR .)
    ENTERO          reduce using rule 34 (valor -> IDENTIFICADOR .)
    RESTA           reduce using rule 34 (valor -> IDENTIFICADOR .)
    FLOTANTE        reduce using rule 34 (valor -> IDENTIFICADOR .)
    $end            reduce using rule 34 (valor -> IDENTIFICADOR .)
    PARENDER        reduce using rule 34 (valor -> IDENTIFICADOR .)
    COMA            reduce using rule 34 (valor -> IDENTIFICADOR .)
    DOSPUNTOS       reduce using rule 34 (valor -> IDENTIFICADOR .)


state 86

    (71) echo -> ECHO valores . PUNTOCOMA

    PUNTOCOMA       shift and go to state 142


state 87

    (25) valores -> valor .
    (27) valores -> valor . COMA valores

    PUNTOCOMA       reduce using rule 25 (valores -> valor .)
    PARENDER        reduce using rule 25 (valores -> valor .)
    CORCHETEDER     reduce using rule 25 (valores -> valor .)
    COMA            shift and go to state 143


state 88

    (26) valores -> indexacion .

    PUNTOCOMA       reduce using rule 26 (valores -> indexacion .)
    PARENDER        reduce using rule 26 (valores -> indexacion .)
    CORCHETEDER     reduce using rule 26 (valores -> indexacion .)


state 89

    (34) valor -> IDENTIFICADOR .
    (23) indexacion -> IDENTIFICADOR . CORCHETEIZ valor CORCHETEDER
    (24) indexacion -> IDENTIFICADOR . CORCHETEIZ valor CORCHETEDER PUNTOCOMA

    COMA            reduce using rule 34 (valor -> IDENTIFICADOR .)
    PUNTOCOMA       reduce using rule 34 (valor -> IDENTIFICADOR .)
    PARENDER        reduce using rule 34 (valor -> IDENTIFICADOR .)
    CORCHETEDER     reduce using rule 34 (valor -> IDENTIFICADOR .)
    CORCHETEIZ      shift and go to state 68


state 90

    (72) funcion -> FUNCTION NAMEFUNCTION . PARENIZ parametro PARENDER LLAVEIZ

    PARENIZ         shift and go to state 144


state 91

    (75) funcion -> NAMEFUNCTION PARENIZ . valores PARENDER PUNTOCOMA
    (25) valores -> . valor
    (26) valores -> . indexacion
    (27) valores -> . valor COMA valores
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (23) indexacion -> . IDENTIFICADOR CORCHETEIZ valor CORCHETEDER
    (24) indexacion -> . IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    IDENTIFICADOR   shift and go to state 89
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    valores                        shift and go to state 145
    valor                          shift and go to state 87
    indexacion                     shift and go to state 88
    NUMERO                         shift and go to state 84

state 92

    (77) return -> RETURN IDENTIFICADOR . PUNTOCOMA

    PUNTOCOMA       shift and go to state 146


state 93

    (85) while -> WHILE PARENIZ . comparaciones PARENDER LLAVEIZ
    (44) comparaciones -> . comparacion
    (45) comparaciones -> . comparacion operadores comparaciones
    (46) comparacion -> . variable comparadorNum variable
    (47) comparacion -> . valor comparador valor
    (42) variable -> . NUMERO
    (43) variable -> . IDENTIFICADOR
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 133
    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    comparaciones                  shift and go to state 147
    comparacion                    shift and go to state 40
    variable                       shift and go to state 132
    valor                          shift and go to state 27
    NUMERO                         shift and go to state 59

state 94

    (86) for -> FOR PARENIZ . IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 148


state 95

    (92) if -> IF PARENIZ . comparaciones PARENDER LLAVEIZ
    (93) if -> IF PARENIZ . IDENTIFICADOR PARENDER LLAVEIZ
    (44) comparaciones -> . comparacion
    (45) comparaciones -> . comparacion operadores comparaciones
    (46) comparacion -> . variable comparadorNum variable
    (47) comparacion -> . valor comparador valor
    (42) variable -> . NUMERO
    (43) variable -> . IDENTIFICADOR
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 150
    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    comparaciones                  shift and go to state 149
    comparacion                    shift and go to state 40
    variable                       shift and go to state 132
    valor                          shift and go to state 27
    NUMERO                         shift and go to state 59

state 96

    (96) elseif -> ELSEIF PARENIZ . comparaciones PARENDER LLAVEIZ
    (97) elseif -> ELSEIF PARENIZ . IDENTIFICADOR PARENDER LLAVEIZ
    (44) comparaciones -> . comparacion
    (45) comparaciones -> . comparacion operadores comparaciones
    (46) comparacion -> . variable comparadorNum variable
    (47) comparacion -> . valor comparador valor
    (42) variable -> . NUMERO
    (43) variable -> . IDENTIFICADOR
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 152
    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    comparaciones                  shift and go to state 151
    comparacion                    shift and go to state 40
    variable                       shift and go to state 132
    valor                          shift and go to state 27
    NUMERO                         shift and go to state 59

state 97

    (99) else -> ELSE LLAVEIZ .

    IDENTIFICADOR   reduce using rule 99 (else -> ELSE LLAVEIZ .)
    COMENTARIO      reduce using rule 99 (else -> ELSE LLAVEIZ .)
    LLAVEDER        reduce using rule 99 (else -> ELSE LLAVEIZ .)
    PRINT           reduce using rule 99 (else -> ELSE LLAVEIZ .)
    ECHO            reduce using rule 99 (else -> ELSE LLAVEIZ .)
    FUNCTION        reduce using rule 99 (else -> ELSE LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 99 (else -> ELSE LLAVEIZ .)
    RETURN          reduce using rule 99 (else -> ELSE LLAVEIZ .)
    WHILE           reduce using rule 99 (else -> ELSE LLAVEIZ .)
    FOR             reduce using rule 99 (else -> ELSE LLAVEIZ .)
    IF              reduce using rule 99 (else -> ELSE LLAVEIZ .)
    ELSEIF          reduce using rule 99 (else -> ELSE LLAVEIZ .)
    ELSE            reduce using rule 99 (else -> ELSE LLAVEIZ .)
    FOREACH         reduce using rule 99 (else -> ELSE LLAVEIZ .)
    SWITCH          reduce using rule 99 (else -> ELSE LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 99 (else -> ELSE LLAVEIZ .)
    CADENA          reduce using rule 99 (else -> ELSE LLAVEIZ .)
    BOOLEAN         reduce using rule 99 (else -> ELSE LLAVEIZ .)
    ENTERO          reduce using rule 99 (else -> ELSE LLAVEIZ .)
    RESTA           reduce using rule 99 (else -> ELSE LLAVEIZ .)
    FLOTANTE        reduce using rule 99 (else -> ELSE LLAVEIZ .)
    $end            reduce using rule 99 (else -> ELSE LLAVEIZ .)


state 98

    (87) foreach -> FOREACH PARENIZ . IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 153


state 99

    (88) switch -> SWITCH PARENIZ . valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    IDENTIFICADOR   shift and go to state 85
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    valor                          shift and go to state 154
    NUMERO                         shift and go to state 84

state 100

    (122) array -> ARRAY_PUSH PARENIZ . IDENTIFICADOR PARENDER PUNTOCOMA

    IDENTIFICADOR   shift and go to state 155


state 101

    (46) comparacion -> variable comparadorNum . variable
    (42) variable -> . NUMERO
    (43) variable -> . IDENTIFICADOR
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 157
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    variable                       shift and go to state 156
    NUMERO                         shift and go to state 136

state 102

    (57) operacion -> variable operadorAritmetico . variable
    (42) variable -> . NUMERO
    (43) variable -> . IDENTIFICADOR
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 157
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    variable                       shift and go to state 158
    NUMERO                         shift and go to state 136

state 103

    (35) comparadorNum -> MAYORQUE .

    IDENTIFICADOR   reduce using rule 35 (comparadorNum -> MAYORQUE .)
    ENTERO          reduce using rule 35 (comparadorNum -> MAYORQUE .)
    RESTA           reduce using rule 35 (comparadorNum -> MAYORQUE .)
    FLOTANTE        reduce using rule 35 (comparadorNum -> MAYORQUE .)


state 104

    (36) comparadorNum -> MAYORIGUALQUE .

    IDENTIFICADOR   reduce using rule 36 (comparadorNum -> MAYORIGUALQUE .)
    ENTERO          reduce using rule 36 (comparadorNum -> MAYORIGUALQUE .)
    RESTA           reduce using rule 36 (comparadorNum -> MAYORIGUALQUE .)
    FLOTANTE        reduce using rule 36 (comparadorNum -> MAYORIGUALQUE .)


state 105

    (37) comparadorNum -> MENORQUE .

    IDENTIFICADOR   reduce using rule 37 (comparadorNum -> MENORQUE .)
    ENTERO          reduce using rule 37 (comparadorNum -> MENORQUE .)
    RESTA           reduce using rule 37 (comparadorNum -> MENORQUE .)
    FLOTANTE        reduce using rule 37 (comparadorNum -> MENORQUE .)


state 106

    (38) comparadorNum -> MENORIGUALQUE .

    IDENTIFICADOR   reduce using rule 38 (comparadorNum -> MENORIGUALQUE .)
    ENTERO          reduce using rule 38 (comparadorNum -> MENORIGUALQUE .)
    RESTA           reduce using rule 38 (comparadorNum -> MENORIGUALQUE .)
    FLOTANTE        reduce using rule 38 (comparadorNum -> MENORIGUALQUE .)


state 107

    (34) valor -> IDENTIFICADOR .
    (56) operaciones -> IDENTIFICADOR . ASIGNAR operaciones
    (43) variable -> IDENTIFICADOR .

    PUNTOCOMA       reduce using rule 34 (valor -> IDENTIFICADOR .)
    ASIGNAR         shift and go to state 159
    SUMA            reduce using rule 43 (variable -> IDENTIFICADOR .)
    RESTA           reduce using rule 43 (variable -> IDENTIFICADOR .)
    MULT            reduce using rule 43 (variable -> IDENTIFICADOR .)
    DIVISION        reduce using rule 43 (variable -> IDENTIFICADOR .)
    DIVISIONENTERA  reduce using rule 43 (variable -> IDENTIFICADOR .)
    MODULO          reduce using rule 43 (variable -> IDENTIFICADOR .)
    POTENCIA        reduce using rule 43 (variable -> IDENTIFICADOR .)


state 108

    (65) asignacion -> IDENTIFICADOR ASIGNAR valor . PUNTOCOMA

    PUNTOCOMA       shift and go to state 160


state 109

    (56) operaciones -> IDENTIFICADOR ASIGNAR operaciones .

    IDENTIFICADOR   reduce using rule 56 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    COMENTARIO      reduce using rule 56 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    LLAVEDER        reduce using rule 56 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    PRINT           reduce using rule 56 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    ECHO            reduce using rule 56 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    FUNCTION        reduce using rule 56 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    NAMEFUNCTION    reduce using rule 56 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    RETURN          reduce using rule 56 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    WHILE           reduce using rule 56 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    FOR             reduce using rule 56 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    IF              reduce using rule 56 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    ELSEIF          reduce using rule 56 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    ELSE            reduce using rule 56 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    FOREACH         reduce using rule 56 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    SWITCH          reduce using rule 56 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    ARRAY_PUSH      reduce using rule 56 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    CADENA          reduce using rule 56 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    BOOLEAN         reduce using rule 56 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    ENTERO          reduce using rule 56 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    RESTA           reduce using rule 56 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    FLOTANTE        reduce using rule 56 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)
    $end            reduce using rule 56 (operaciones -> IDENTIFICADOR ASIGNAR operaciones .)


state 110

    (53) longitud -> IDENTIFICADOR ASIGNAR STRLEN . PARENIZ valor PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 161


state 111

    (70) input -> IDENTIFICADOR ASIGNAR FGETS . PARENIZ FLUJOS PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 162


state 112

    (76) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION . PARENIZ valores PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 163


state 113

    (110) queue -> IDENTIFICADOR ASIGNAR NEW . QUEUE PARENIZ PARENDER PUNTOCOMA
    (105) stack -> IDENTIFICADOR ASIGNAR NEW . STACK PARENIZ PARENDER PUNTOCOMA

    QUEUE           shift and go to state 164
    STACK           shift and go to state 165


state 114

    (118) array -> IDENTIFICADOR ASIGNAR ARRAY . PARENIZ PARENDER PUNTOCOMA
    (119) array -> IDENTIFICADOR ASIGNAR ARRAY . PARENIZ valores PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 166


state 115

    (120) array -> IDENTIFICADOR ASIGNAR CORCHETEIZ . valores CORCHETEDER PUNTOCOMA
    (25) valores -> . valor
    (26) valores -> . indexacion
    (27) valores -> . valor COMA valores
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (23) indexacion -> . IDENTIFICADOR CORCHETEIZ valor CORCHETEDER
    (24) indexacion -> . IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    IDENTIFICADOR   shift and go to state 89
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    valores                        shift and go to state 167
    valor                          shift and go to state 87
    indexacion                     shift and go to state 88
    NUMERO                         shift and go to state 84

state 116

    (121) array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT . PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 168


state 117

    (123) array -> IDENTIFICADOR ASIGNAR IN_ARRAY . PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 169


state 118

    (31) valor -> NUMERO .
    (42) variable -> NUMERO .

    PUNTOCOMA       reduce using rule 31 (valor -> NUMERO .)
    SUMA            reduce using rule 42 (variable -> NUMERO .)
    RESTA           reduce using rule 42 (variable -> NUMERO .)
    MULT            reduce using rule 42 (variable -> NUMERO .)
    DIVISION        reduce using rule 42 (variable -> NUMERO .)
    DIVISIONENTERA  reduce using rule 42 (variable -> NUMERO .)
    MODULO          reduce using rule 42 (variable -> NUMERO .)
    POTENCIA        reduce using rule 42 (variable -> NUMERO .)


state 119

    (57) operacion -> variable . operadorAritmetico variable
    (58) operadorAritmetico -> . SUMA
    (59) operadorAritmetico -> . RESTA
    (60) operadorAritmetico -> . MULT
    (61) operadorAritmetico -> . DIVISION
    (62) operadorAritmetico -> . DIVISIONENTERA
    (63) operadorAritmetico -> . MODULO
    (64) operadorAritmetico -> . POTENCIA

    SUMA            shift and go to state 5
    RESTA           shift and go to state 79
    MULT            shift and go to state 7
    DIVISION        shift and go to state 8
    DIVISIONENTERA  shift and go to state 9
    MODULO          shift and go to state 10
    POTENCIA        shift and go to state 11

    operadorAritmetico             shift and go to state 102

state 120

    (23) indexacion -> IDENTIFICADOR CORCHETEIZ valor . CORCHETEDER
    (24) indexacion -> IDENTIFICADOR CORCHETEIZ valor . CORCHETEDER PUNTOCOMA

    CORCHETEDER     shift and go to state 170


state 121

    (111) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE . PARENIZ valor PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 171


state 122

    (112) queue -> IDENTIFICADOR FLECHASIMPLE COUNT . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 172


state 123

    (113) queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 173


state 124

    (114) queue -> IDENTIFICADOR FLECHASIMPLE NEXT . PARENIZ PARENDER PUNTOCOMA
    (106) stack -> IDENTIFICADOR FLECHASIMPLE NEXT . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 174


state 125

    (115) queue -> IDENTIFICADOR FLECHASIMPLE REWIND . PARENIZ PARENDER PUNTOCOMA
    (107) stack -> IDENTIFICADOR FLECHASIMPLE REWIND . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 175


state 126

    (116) queue -> IDENTIFICADOR FLECHASIMPLE CURRENT . PARENIZ PARENDER PUNTOCOMA
    (108) stack -> IDENTIFICADOR FLECHASIMPLE CURRENT . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 176


state 127

    (117) queue -> IDENTIFICADOR FLECHASIMPLE VALID . PARENIZ PARENDER
    (109) stack -> IDENTIFICADOR FLECHASIMPLE VALID . PARENIZ PARENDER

    PARENIZ         shift and go to state 177


state 128

    (103) stack -> IDENTIFICADOR FLECHASIMPLE PUSH . PARENIZ valor PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 178


state 129

    (104) stack -> IDENTIFICADOR FLECHASIMPLE POP . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 179


state 130

    (47) comparacion -> valor comparador valor .

    OPERADOR        reduce using rule 47 (comparacion -> valor comparador valor .)
    AND             reduce using rule 47 (comparacion -> valor comparador valor .)
    OR              reduce using rule 47 (comparacion -> valor comparador valor .)
    IDENTIFICADOR   reduce using rule 47 (comparacion -> valor comparador valor .)
    COMENTARIO      reduce using rule 47 (comparacion -> valor comparador valor .)
    LLAVEDER        reduce using rule 47 (comparacion -> valor comparador valor .)
    PRINT           reduce using rule 47 (comparacion -> valor comparador valor .)
    ECHO            reduce using rule 47 (comparacion -> valor comparador valor .)
    FUNCTION        reduce using rule 47 (comparacion -> valor comparador valor .)
    NAMEFUNCTION    reduce using rule 47 (comparacion -> valor comparador valor .)
    RETURN          reduce using rule 47 (comparacion -> valor comparador valor .)
    WHILE           reduce using rule 47 (comparacion -> valor comparador valor .)
    FOR             reduce using rule 47 (comparacion -> valor comparador valor .)
    IF              reduce using rule 47 (comparacion -> valor comparador valor .)
    ELSEIF          reduce using rule 47 (comparacion -> valor comparador valor .)
    ELSE            reduce using rule 47 (comparacion -> valor comparador valor .)
    FOREACH         reduce using rule 47 (comparacion -> valor comparador valor .)
    SWITCH          reduce using rule 47 (comparacion -> valor comparador valor .)
    ARRAY_PUSH      reduce using rule 47 (comparacion -> valor comparador valor .)
    CADENA          reduce using rule 47 (comparacion -> valor comparador valor .)
    BOOLEAN         reduce using rule 47 (comparacion -> valor comparador valor .)
    ENTERO          reduce using rule 47 (comparacion -> valor comparador valor .)
    RESTA           reduce using rule 47 (comparacion -> valor comparador valor .)
    FLOTANTE        reduce using rule 47 (comparacion -> valor comparador valor .)
    $end            reduce using rule 47 (comparacion -> valor comparador valor .)
    PARENDER        reduce using rule 47 (comparacion -> valor comparador valor .)


state 131

    (45) comparaciones -> comparacion operadores comparaciones .

    IDENTIFICADOR   reduce using rule 45 (comparaciones -> comparacion operadores comparaciones .)
    COMENTARIO      reduce using rule 45 (comparaciones -> comparacion operadores comparaciones .)
    LLAVEDER        reduce using rule 45 (comparaciones -> comparacion operadores comparaciones .)
    PRINT           reduce using rule 45 (comparaciones -> comparacion operadores comparaciones .)
    ECHO            reduce using rule 45 (comparaciones -> comparacion operadores comparaciones .)
    FUNCTION        reduce using rule 45 (comparaciones -> comparacion operadores comparaciones .)
    NAMEFUNCTION    reduce using rule 45 (comparaciones -> comparacion operadores comparaciones .)
    RETURN          reduce using rule 45 (comparaciones -> comparacion operadores comparaciones .)
    WHILE           reduce using rule 45 (comparaciones -> comparacion operadores comparaciones .)
    FOR             reduce using rule 45 (comparaciones -> comparacion operadores comparaciones .)
    IF              reduce using rule 45 (comparaciones -> comparacion operadores comparaciones .)
    ELSEIF          reduce using rule 45 (comparaciones -> comparacion operadores comparaciones .)
    ELSE            reduce using rule 45 (comparaciones -> comparacion operadores comparaciones .)
    FOREACH         reduce using rule 45 (comparaciones -> comparacion operadores comparaciones .)
    SWITCH          reduce using rule 45 (comparaciones -> comparacion operadores comparaciones .)
    ARRAY_PUSH      reduce using rule 45 (comparaciones -> comparacion operadores comparaciones .)
    CADENA          reduce using rule 45 (comparaciones -> comparacion operadores comparaciones .)
    BOOLEAN         reduce using rule 45 (comparaciones -> comparacion operadores comparaciones .)
    ENTERO          reduce using rule 45 (comparaciones -> comparacion operadores comparaciones .)
    RESTA           reduce using rule 45 (comparaciones -> comparacion operadores comparaciones .)
    FLOTANTE        reduce using rule 45 (comparaciones -> comparacion operadores comparaciones .)
    $end            reduce using rule 45 (comparaciones -> comparacion operadores comparaciones .)
    PARENDER        reduce using rule 45 (comparaciones -> comparacion operadores comparaciones .)


state 132

    (46) comparacion -> variable . comparadorNum variable
    (35) comparadorNum -> . MAYORQUE
    (36) comparadorNum -> . MAYORIGUALQUE
    (37) comparadorNum -> . MENORQUE
    (38) comparadorNum -> . MENORIGUALQUE

    MAYORQUE        shift and go to state 103
    MAYORIGUALQUE   shift and go to state 104
    MENORQUE        shift and go to state 105
    MENORIGUALQUE   shift and go to state 106

    comparadorNum                  shift and go to state 101

state 133

    (43) variable -> IDENTIFICADOR .
    (34) valor -> IDENTIFICADOR .

    MAYORQUE        reduce using rule 43 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 43 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 43 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 43 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 34 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 34 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 34 (valor -> IDENTIFICADOR .)


state 134

    (55) operaciones -> operacion operadorAritmetico operaciones .

    IDENTIFICADOR   reduce using rule 55 (operaciones -> operacion operadorAritmetico operaciones .)
    COMENTARIO      reduce using rule 55 (operaciones -> operacion operadorAritmetico operaciones .)
    LLAVEDER        reduce using rule 55 (operaciones -> operacion operadorAritmetico operaciones .)
    PRINT           reduce using rule 55 (operaciones -> operacion operadorAritmetico operaciones .)
    ECHO            reduce using rule 55 (operaciones -> operacion operadorAritmetico operaciones .)
    FUNCTION        reduce using rule 55 (operaciones -> operacion operadorAritmetico operaciones .)
    NAMEFUNCTION    reduce using rule 55 (operaciones -> operacion operadorAritmetico operaciones .)
    RETURN          reduce using rule 55 (operaciones -> operacion operadorAritmetico operaciones .)
    WHILE           reduce using rule 55 (operaciones -> operacion operadorAritmetico operaciones .)
    FOR             reduce using rule 55 (operaciones -> operacion operadorAritmetico operaciones .)
    IF              reduce using rule 55 (operaciones -> operacion operadorAritmetico operaciones .)
    ELSEIF          reduce using rule 55 (operaciones -> operacion operadorAritmetico operaciones .)
    ELSE            reduce using rule 55 (operaciones -> operacion operadorAritmetico operaciones .)
    FOREACH         reduce using rule 55 (operaciones -> operacion operadorAritmetico operaciones .)
    SWITCH          reduce using rule 55 (operaciones -> operacion operadorAritmetico operaciones .)
    ARRAY_PUSH      reduce using rule 55 (operaciones -> operacion operadorAritmetico operaciones .)
    CADENA          reduce using rule 55 (operaciones -> operacion operadorAritmetico operaciones .)
    BOOLEAN         reduce using rule 55 (operaciones -> operacion operadorAritmetico operaciones .)
    ENTERO          reduce using rule 55 (operaciones -> operacion operadorAritmetico operaciones .)
    RESTA           reduce using rule 55 (operaciones -> operacion operadorAritmetico operaciones .)
    FLOTANTE        reduce using rule 55 (operaciones -> operacion operadorAritmetico operaciones .)
    $end            reduce using rule 55 (operaciones -> operacion operadorAritmetico operaciones .)


state 135

    (56) operaciones -> IDENTIFICADOR . ASIGNAR operaciones
    (43) variable -> IDENTIFICADOR .

    ASIGNAR         shift and go to state 159
    SUMA            reduce using rule 43 (variable -> IDENTIFICADOR .)
    RESTA           reduce using rule 43 (variable -> IDENTIFICADOR .)
    MULT            reduce using rule 43 (variable -> IDENTIFICADOR .)
    DIVISION        reduce using rule 43 (variable -> IDENTIFICADOR .)
    DIVISIONENTERA  reduce using rule 43 (variable -> IDENTIFICADOR .)
    MODULO          reduce using rule 43 (variable -> IDENTIFICADOR .)
    POTENCIA        reduce using rule 43 (variable -> IDENTIFICADOR .)


state 136

    (42) variable -> NUMERO .

    SUMA            reduce using rule 42 (variable -> NUMERO .)
    RESTA           reduce using rule 42 (variable -> NUMERO .)
    MULT            reduce using rule 42 (variable -> NUMERO .)
    DIVISION        reduce using rule 42 (variable -> NUMERO .)
    DIVISIONENTERA  reduce using rule 42 (variable -> NUMERO .)
    MODULO          reduce using rule 42 (variable -> NUMERO .)
    POTENCIA        reduce using rule 42 (variable -> NUMERO .)
    OPERADOR        reduce using rule 42 (variable -> NUMERO .)
    AND             reduce using rule 42 (variable -> NUMERO .)
    OR              reduce using rule 42 (variable -> NUMERO .)
    IDENTIFICADOR   reduce using rule 42 (variable -> NUMERO .)
    COMENTARIO      reduce using rule 42 (variable -> NUMERO .)
    LLAVEDER        reduce using rule 42 (variable -> NUMERO .)
    PRINT           reduce using rule 42 (variable -> NUMERO .)
    ECHO            reduce using rule 42 (variable -> NUMERO .)
    FUNCTION        reduce using rule 42 (variable -> NUMERO .)
    NAMEFUNCTION    reduce using rule 42 (variable -> NUMERO .)
    RETURN          reduce using rule 42 (variable -> NUMERO .)
    WHILE           reduce using rule 42 (variable -> NUMERO .)
    FOR             reduce using rule 42 (variable -> NUMERO .)
    IF              reduce using rule 42 (variable -> NUMERO .)
    ELSEIF          reduce using rule 42 (variable -> NUMERO .)
    ELSE            reduce using rule 42 (variable -> NUMERO .)
    FOREACH         reduce using rule 42 (variable -> NUMERO .)
    SWITCH          reduce using rule 42 (variable -> NUMERO .)
    ARRAY_PUSH      reduce using rule 42 (variable -> NUMERO .)
    CADENA          reduce using rule 42 (variable -> NUMERO .)
    BOOLEAN         reduce using rule 42 (variable -> NUMERO .)
    ENTERO          reduce using rule 42 (variable -> NUMERO .)
    FLOTANTE        reduce using rule 42 (variable -> NUMERO .)
    $end            reduce using rule 42 (variable -> NUMERO .)
    PARENDER        reduce using rule 42 (variable -> NUMERO .)
    INCREMENTO      reduce using rule 42 (variable -> NUMERO .)
    DECREMENTO      reduce using rule 42 (variable -> NUMERO .)


state 137

    (94) elseif -> LLAVEDER ELSEIF PARENIZ . comparaciones PARENDER LLAVEIZ
    (95) elseif -> LLAVEDER ELSEIF PARENIZ . IDENTIFICADOR PARENDER LLAVEIZ
    (44) comparaciones -> . comparacion
    (45) comparaciones -> . comparacion operadores comparaciones
    (46) comparacion -> . variable comparadorNum variable
    (47) comparacion -> . valor comparador valor
    (42) variable -> . NUMERO
    (43) variable -> . IDENTIFICADOR
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 181
    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    comparaciones                  shift and go to state 180
    comparacion                    shift and go to state 40
    variable                       shift and go to state 132
    valor                          shift and go to state 27
    NUMERO                         shift and go to state 59

state 138

    (98) else -> LLAVEDER ELSE LLAVEIZ .

    IDENTIFICADOR   reduce using rule 98 (else -> LLAVEDER ELSE LLAVEIZ .)
    COMENTARIO      reduce using rule 98 (else -> LLAVEDER ELSE LLAVEIZ .)
    LLAVEDER        reduce using rule 98 (else -> LLAVEDER ELSE LLAVEIZ .)
    PRINT           reduce using rule 98 (else -> LLAVEDER ELSE LLAVEIZ .)
    ECHO            reduce using rule 98 (else -> LLAVEDER ELSE LLAVEIZ .)
    FUNCTION        reduce using rule 98 (else -> LLAVEDER ELSE LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 98 (else -> LLAVEDER ELSE LLAVEIZ .)
    RETURN          reduce using rule 98 (else -> LLAVEDER ELSE LLAVEIZ .)
    WHILE           reduce using rule 98 (else -> LLAVEDER ELSE LLAVEIZ .)
    FOR             reduce using rule 98 (else -> LLAVEDER ELSE LLAVEIZ .)
    IF              reduce using rule 98 (else -> LLAVEDER ELSE LLAVEIZ .)
    ELSEIF          reduce using rule 98 (else -> LLAVEDER ELSE LLAVEIZ .)
    ELSE            reduce using rule 98 (else -> LLAVEDER ELSE LLAVEIZ .)
    FOREACH         reduce using rule 98 (else -> LLAVEDER ELSE LLAVEIZ .)
    SWITCH          reduce using rule 98 (else -> LLAVEDER ELSE LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 98 (else -> LLAVEDER ELSE LLAVEIZ .)
    CADENA          reduce using rule 98 (else -> LLAVEDER ELSE LLAVEIZ .)
    BOOLEAN         reduce using rule 98 (else -> LLAVEDER ELSE LLAVEIZ .)
    ENTERO          reduce using rule 98 (else -> LLAVEDER ELSE LLAVEIZ .)
    RESTA           reduce using rule 98 (else -> LLAVEDER ELSE LLAVEIZ .)
    FLOTANTE        reduce using rule 98 (else -> LLAVEDER ELSE LLAVEIZ .)
    $end            reduce using rule 98 (else -> LLAVEDER ELSE LLAVEIZ .)


state 139

    (67) print -> PRINT PARENIZ valores . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 182


state 140

    (69) print -> PRINT PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 183


state 141

    (68) print -> PRINT valor PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 68 (print -> PRINT valor PUNTOCOMA .)
    COMENTARIO      reduce using rule 68 (print -> PRINT valor PUNTOCOMA .)
    LLAVEDER        reduce using rule 68 (print -> PRINT valor PUNTOCOMA .)
    PRINT           reduce using rule 68 (print -> PRINT valor PUNTOCOMA .)
    ECHO            reduce using rule 68 (print -> PRINT valor PUNTOCOMA .)
    FUNCTION        reduce using rule 68 (print -> PRINT valor PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 68 (print -> PRINT valor PUNTOCOMA .)
    RETURN          reduce using rule 68 (print -> PRINT valor PUNTOCOMA .)
    WHILE           reduce using rule 68 (print -> PRINT valor PUNTOCOMA .)
    FOR             reduce using rule 68 (print -> PRINT valor PUNTOCOMA .)
    IF              reduce using rule 68 (print -> PRINT valor PUNTOCOMA .)
    ELSEIF          reduce using rule 68 (print -> PRINT valor PUNTOCOMA .)
    ELSE            reduce using rule 68 (print -> PRINT valor PUNTOCOMA .)
    FOREACH         reduce using rule 68 (print -> PRINT valor PUNTOCOMA .)
    SWITCH          reduce using rule 68 (print -> PRINT valor PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 68 (print -> PRINT valor PUNTOCOMA .)
    CADENA          reduce using rule 68 (print -> PRINT valor PUNTOCOMA .)
    BOOLEAN         reduce using rule 68 (print -> PRINT valor PUNTOCOMA .)
    ENTERO          reduce using rule 68 (print -> PRINT valor PUNTOCOMA .)
    RESTA           reduce using rule 68 (print -> PRINT valor PUNTOCOMA .)
    FLOTANTE        reduce using rule 68 (print -> PRINT valor PUNTOCOMA .)
    $end            reduce using rule 68 (print -> PRINT valor PUNTOCOMA .)


state 142

    (71) echo -> ECHO valores PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 71 (echo -> ECHO valores PUNTOCOMA .)
    COMENTARIO      reduce using rule 71 (echo -> ECHO valores PUNTOCOMA .)
    LLAVEDER        reduce using rule 71 (echo -> ECHO valores PUNTOCOMA .)
    PRINT           reduce using rule 71 (echo -> ECHO valores PUNTOCOMA .)
    ECHO            reduce using rule 71 (echo -> ECHO valores PUNTOCOMA .)
    FUNCTION        reduce using rule 71 (echo -> ECHO valores PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 71 (echo -> ECHO valores PUNTOCOMA .)
    RETURN          reduce using rule 71 (echo -> ECHO valores PUNTOCOMA .)
    WHILE           reduce using rule 71 (echo -> ECHO valores PUNTOCOMA .)
    FOR             reduce using rule 71 (echo -> ECHO valores PUNTOCOMA .)
    IF              reduce using rule 71 (echo -> ECHO valores PUNTOCOMA .)
    ELSEIF          reduce using rule 71 (echo -> ECHO valores PUNTOCOMA .)
    ELSE            reduce using rule 71 (echo -> ECHO valores PUNTOCOMA .)
    FOREACH         reduce using rule 71 (echo -> ECHO valores PUNTOCOMA .)
    SWITCH          reduce using rule 71 (echo -> ECHO valores PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 71 (echo -> ECHO valores PUNTOCOMA .)
    CADENA          reduce using rule 71 (echo -> ECHO valores PUNTOCOMA .)
    BOOLEAN         reduce using rule 71 (echo -> ECHO valores PUNTOCOMA .)
    ENTERO          reduce using rule 71 (echo -> ECHO valores PUNTOCOMA .)
    RESTA           reduce using rule 71 (echo -> ECHO valores PUNTOCOMA .)
    FLOTANTE        reduce using rule 71 (echo -> ECHO valores PUNTOCOMA .)
    $end            reduce using rule 71 (echo -> ECHO valores PUNTOCOMA .)
    BREAK           reduce using rule 71 (echo -> ECHO valores PUNTOCOMA .)


state 143

    (27) valores -> valor COMA . valores
    (25) valores -> . valor
    (26) valores -> . indexacion
    (27) valores -> . valor COMA valores
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (23) indexacion -> . IDENTIFICADOR CORCHETEIZ valor CORCHETEDER
    (24) indexacion -> . IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    IDENTIFICADOR   shift and go to state 89
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    valor                          shift and go to state 87
    valores                        shift and go to state 184
    indexacion                     shift and go to state 88
    NUMERO                         shift and go to state 84

state 144

    (72) funcion -> FUNCTION NAMEFUNCTION PARENIZ . parametro PARENDER LLAVEIZ
    (73) parametro -> . IDENTIFICADOR
    (74) parametro -> . IDENTIFICADOR COMA parametro

    IDENTIFICADOR   shift and go to state 186

    parametro                      shift and go to state 185

state 145

    (75) funcion -> NAMEFUNCTION PARENIZ valores . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 187


state 146

    (77) return -> RETURN IDENTIFICADOR PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 77 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    COMENTARIO      reduce using rule 77 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    LLAVEDER        reduce using rule 77 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    PRINT           reduce using rule 77 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    ECHO            reduce using rule 77 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    FUNCTION        reduce using rule 77 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 77 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    RETURN          reduce using rule 77 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    WHILE           reduce using rule 77 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    FOR             reduce using rule 77 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    IF              reduce using rule 77 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    ELSEIF          reduce using rule 77 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    ELSE            reduce using rule 77 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    FOREACH         reduce using rule 77 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    SWITCH          reduce using rule 77 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 77 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    CADENA          reduce using rule 77 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    BOOLEAN         reduce using rule 77 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    ENTERO          reduce using rule 77 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    RESTA           reduce using rule 77 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    FLOTANTE        reduce using rule 77 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)
    $end            reduce using rule 77 (return -> RETURN IDENTIFICADOR PUNTOCOMA .)


state 147

    (85) while -> WHILE PARENIZ comparaciones . PARENDER LLAVEIZ

    PARENDER        shift and go to state 188


state 148

    (86) for -> FOR PARENIZ IDENTIFICADOR . ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ

    ASIGNAR         shift and go to state 189


state 149

    (92) if -> IF PARENIZ comparaciones . PARENDER LLAVEIZ

    PARENDER        shift and go to state 190


state 150

    (93) if -> IF PARENIZ IDENTIFICADOR . PARENDER LLAVEIZ
    (43) variable -> IDENTIFICADOR .
    (34) valor -> IDENTIFICADOR .

    PARENDER        shift and go to state 191
    MAYORQUE        reduce using rule 43 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 43 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 43 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 43 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 34 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 34 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 34 (valor -> IDENTIFICADOR .)


state 151

    (96) elseif -> ELSEIF PARENIZ comparaciones . PARENDER LLAVEIZ

    PARENDER        shift and go to state 192


state 152

    (97) elseif -> ELSEIF PARENIZ IDENTIFICADOR . PARENDER LLAVEIZ
    (43) variable -> IDENTIFICADOR .
    (34) valor -> IDENTIFICADOR .

    PARENDER        shift and go to state 193
    MAYORQUE        reduce using rule 43 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 43 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 43 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 43 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 34 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 34 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 34 (valor -> IDENTIFICADOR .)


state 153

    (87) foreach -> FOREACH PARENIZ IDENTIFICADOR . AS IDENTIFICADOR PARENDER LLAVEIZ

    AS              shift and go to state 194


state 154

    (88) switch -> SWITCH PARENIZ valor . PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER

    PARENDER        shift and go to state 195


state 155

    (122) array -> ARRAY_PUSH PARENIZ IDENTIFICADOR . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 196


state 156

    (46) comparacion -> variable comparadorNum variable .

    OPERADOR        reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    AND             reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    OR              reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    IDENTIFICADOR   reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    COMENTARIO      reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    LLAVEDER        reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    PRINT           reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    ECHO            reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    FUNCTION        reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    NAMEFUNCTION    reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    RETURN          reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    WHILE           reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    FOR             reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    IF              reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    ELSEIF          reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    ELSE            reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    FOREACH         reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    SWITCH          reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    ARRAY_PUSH      reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    CADENA          reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    BOOLEAN         reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    ENTERO          reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    RESTA           reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    FLOTANTE        reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    $end            reduce using rule 46 (comparacion -> variable comparadorNum variable .)
    PARENDER        reduce using rule 46 (comparacion -> variable comparadorNum variable .)


state 157

    (43) variable -> IDENTIFICADOR .

    OPERADOR        reduce using rule 43 (variable -> IDENTIFICADOR .)
    AND             reduce using rule 43 (variable -> IDENTIFICADOR .)
    OR              reduce using rule 43 (variable -> IDENTIFICADOR .)
    IDENTIFICADOR   reduce using rule 43 (variable -> IDENTIFICADOR .)
    COMENTARIO      reduce using rule 43 (variable -> IDENTIFICADOR .)
    LLAVEDER        reduce using rule 43 (variable -> IDENTIFICADOR .)
    PRINT           reduce using rule 43 (variable -> IDENTIFICADOR .)
    ECHO            reduce using rule 43 (variable -> IDENTIFICADOR .)
    FUNCTION        reduce using rule 43 (variable -> IDENTIFICADOR .)
    NAMEFUNCTION    reduce using rule 43 (variable -> IDENTIFICADOR .)
    RETURN          reduce using rule 43 (variable -> IDENTIFICADOR .)
    WHILE           reduce using rule 43 (variable -> IDENTIFICADOR .)
    FOR             reduce using rule 43 (variable -> IDENTIFICADOR .)
    IF              reduce using rule 43 (variable -> IDENTIFICADOR .)
    ELSEIF          reduce using rule 43 (variable -> IDENTIFICADOR .)
    ELSE            reduce using rule 43 (variable -> IDENTIFICADOR .)
    FOREACH         reduce using rule 43 (variable -> IDENTIFICADOR .)
    SWITCH          reduce using rule 43 (variable -> IDENTIFICADOR .)
    ARRAY_PUSH      reduce using rule 43 (variable -> IDENTIFICADOR .)
    CADENA          reduce using rule 43 (variable -> IDENTIFICADOR .)
    BOOLEAN         reduce using rule 43 (variable -> IDENTIFICADOR .)
    ENTERO          reduce using rule 43 (variable -> IDENTIFICADOR .)
    RESTA           reduce using rule 43 (variable -> IDENTIFICADOR .)
    FLOTANTE        reduce using rule 43 (variable -> IDENTIFICADOR .)
    $end            reduce using rule 43 (variable -> IDENTIFICADOR .)
    PARENDER        reduce using rule 43 (variable -> IDENTIFICADOR .)
    SUMA            reduce using rule 43 (variable -> IDENTIFICADOR .)
    MULT            reduce using rule 43 (variable -> IDENTIFICADOR .)
    DIVISION        reduce using rule 43 (variable -> IDENTIFICADOR .)
    DIVISIONENTERA  reduce using rule 43 (variable -> IDENTIFICADOR .)
    MODULO          reduce using rule 43 (variable -> IDENTIFICADOR .)
    POTENCIA        reduce using rule 43 (variable -> IDENTIFICADOR .)
    INCREMENTO      reduce using rule 43 (variable -> IDENTIFICADOR .)
    DECREMENTO      reduce using rule 43 (variable -> IDENTIFICADOR .)


state 158

    (57) operacion -> variable operadorAritmetico variable .

    SUMA            reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    RESTA           reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    MULT            reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    DIVISION        reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    DIVISIONENTERA  reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    MODULO          reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    POTENCIA        reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    IDENTIFICADOR   reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    COMENTARIO      reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    LLAVEDER        reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    PRINT           reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    ECHO            reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    FUNCTION        reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    NAMEFUNCTION    reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    RETURN          reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    WHILE           reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    FOR             reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    IF              reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    ELSEIF          reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    ELSE            reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    FOREACH         reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    SWITCH          reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    ARRAY_PUSH      reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    CADENA          reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    BOOLEAN         reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    ENTERO          reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    FLOTANTE        reduce using rule 57 (operacion -> variable operadorAritmetico variable .)
    $end            reduce using rule 57 (operacion -> variable operadorAritmetico variable .)


state 159

    (56) operaciones -> IDENTIFICADOR ASIGNAR . operaciones
    (54) operaciones -> . operacion
    (55) operaciones -> . operacion operadorAritmetico operaciones
    (56) operaciones -> . IDENTIFICADOR ASIGNAR operaciones
    (57) operacion -> . variable operadorAritmetico variable
    (42) variable -> . NUMERO
    (43) variable -> . IDENTIFICADOR
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 135
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    operaciones                    shift and go to state 109
    operacion                      shift and go to state 41
    variable                       shift and go to state 119
    NUMERO                         shift and go to state 136

state 160

    (65) asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 65 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    COMENTARIO      reduce using rule 65 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    LLAVEDER        reduce using rule 65 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    PRINT           reduce using rule 65 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    ECHO            reduce using rule 65 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    FUNCTION        reduce using rule 65 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 65 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    RETURN          reduce using rule 65 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    WHILE           reduce using rule 65 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    FOR             reduce using rule 65 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    IF              reduce using rule 65 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    ELSEIF          reduce using rule 65 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    ELSE            reduce using rule 65 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    FOREACH         reduce using rule 65 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    SWITCH          reduce using rule 65 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 65 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    CADENA          reduce using rule 65 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    BOOLEAN         reduce using rule 65 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    ENTERO          reduce using rule 65 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    RESTA           reduce using rule 65 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    FLOTANTE        reduce using rule 65 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)
    $end            reduce using rule 65 (asignacion -> IDENTIFICADOR ASIGNAR valor PUNTOCOMA .)


state 161

    (53) longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ . valor PARENDER PUNTOCOMA
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    IDENTIFICADOR   shift and go to state 85
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    valor                          shift and go to state 197
    NUMERO                         shift and go to state 84

state 162

    (70) input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ . FLUJOS PARENDER PUNTOCOMA

    FLUJOS          shift and go to state 198


state 163

    (76) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ . valores PARENDER PUNTOCOMA
    (25) valores -> . valor
    (26) valores -> . indexacion
    (27) valores -> . valor COMA valores
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (23) indexacion -> . IDENTIFICADOR CORCHETEIZ valor CORCHETEDER
    (24) indexacion -> . IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    IDENTIFICADOR   shift and go to state 89
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    valores                        shift and go to state 199
    valor                          shift and go to state 87
    indexacion                     shift and go to state 88
    NUMERO                         shift and go to state 84

state 164

    (110) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 200


state 165

    (105) stack -> IDENTIFICADOR ASIGNAR NEW STACK . PARENIZ PARENDER PUNTOCOMA

    PARENIZ         shift and go to state 201


state 166

    (118) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ . PARENDER PUNTOCOMA
    (119) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ . valores PARENDER PUNTOCOMA
    (25) valores -> . valor
    (26) valores -> . indexacion
    (27) valores -> . valor COMA valores
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (23) indexacion -> . IDENTIFICADOR CORCHETEIZ valor CORCHETEDER
    (24) indexacion -> . IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    PARENDER        shift and go to state 202
    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    IDENTIFICADOR   shift and go to state 89
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    valores                        shift and go to state 203
    valor                          shift and go to state 87
    indexacion                     shift and go to state 88
    NUMERO                         shift and go to state 84

state 167

    (120) array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores . CORCHETEDER PUNTOCOMA

    CORCHETEDER     shift and go to state 204


state 168

    (121) array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ . IDENTIFICADOR PARENDER PUNTOCOMA

    IDENTIFICADOR   shift and go to state 205


state 169

    (123) array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ . valor COMA IDENTIFICADOR PARENDER PUNTOCOMA
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    IDENTIFICADOR   shift and go to state 85
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    valor                          shift and go to state 206
    NUMERO                         shift and go to state 84

state 170

    (23) indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .
    (24) indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER . PUNTOCOMA

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
    IDENTIFICADOR   reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    COMENTARIO      reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    LLAVEDER        reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    PRINT           reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    ECHO            reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    FUNCTION        reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    NAMEFUNCTION    reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    RETURN          reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    WHILE           reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    FOR             reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    IF              reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    ELSEIF          reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    ELSE            reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    FOREACH         reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    SWITCH          reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    ARRAY_PUSH      reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    CADENA          reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    BOOLEAN         reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    ENTERO          reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    RESTA           reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    FLOTANTE        reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    $end            reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    PARENDER        reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    CORCHETEDER     reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .)
    PUNTOCOMA       shift and go to state 207

  ! PUNTOCOMA       [ reduce using rule 23 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER .) ]


state 171

    (111) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ . valor PARENDER PUNTOCOMA
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    IDENTIFICADOR   shift and go to state 85
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    valor                          shift and go to state 208
    NUMERO                         shift and go to state 84

state 172

    (112) queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 209


state 173

    (113) queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 210


state 174

    (114) queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ . PARENDER PUNTOCOMA
    (106) stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 211


state 175

    (115) queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ . PARENDER PUNTOCOMA
    (107) stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 212


state 176

    (116) queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ . PARENDER PUNTOCOMA
    (108) stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 213


state 177

    (117) queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ . PARENDER
    (109) stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ . PARENDER

    PARENDER        shift and go to state 214


state 178

    (103) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ . valor PARENDER PUNTOCOMA
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    IDENTIFICADOR   shift and go to state 85
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    valor                          shift and go to state 215
    NUMERO                         shift and go to state 84

state 179

    (104) stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 216


state 180

    (94) elseif -> LLAVEDER ELSEIF PARENIZ comparaciones . PARENDER LLAVEIZ

    PARENDER        shift and go to state 217


state 181

    (95) elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR . PARENDER LLAVEIZ
    (43) variable -> IDENTIFICADOR .
    (34) valor -> IDENTIFICADOR .

    PARENDER        shift and go to state 218
    MAYORQUE        reduce using rule 43 (variable -> IDENTIFICADOR .)
    MAYORIGUALQUE   reduce using rule 43 (variable -> IDENTIFICADOR .)
    MENORQUE        reduce using rule 43 (variable -> IDENTIFICADOR .)
    MENORIGUALQUE   reduce using rule 43 (variable -> IDENTIFICADOR .)
    IDENTICO        reduce using rule 34 (valor -> IDENTIFICADOR .)
    NOIDENTICO      reduce using rule 34 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 34 (valor -> IDENTIFICADOR .)


state 182

    (67) print -> PRINT PARENIZ valores PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 219


state 183

    (69) print -> PRINT PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 69 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 69 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 69 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 69 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 69 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 69 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 69 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 69 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 69 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 69 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 69 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 69 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 69 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 69 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 69 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 69 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 69 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 69 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 69 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 69 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 69 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 69 (print -> PRINT PARENIZ PARENDER PUNTOCOMA .)


state 184

    (27) valores -> valor COMA valores .

    PUNTOCOMA       reduce using rule 27 (valores -> valor COMA valores .)
    PARENDER        reduce using rule 27 (valores -> valor COMA valores .)
    CORCHETEDER     reduce using rule 27 (valores -> valor COMA valores .)


state 185

    (72) funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro . PARENDER LLAVEIZ

    PARENDER        shift and go to state 220


state 186

    (73) parametro -> IDENTIFICADOR .
    (74) parametro -> IDENTIFICADOR . COMA parametro

    PARENDER        reduce using rule 73 (parametro -> IDENTIFICADOR .)
    COMA            shift and go to state 221


state 187

    (75) funcion -> NAMEFUNCTION PARENIZ valores PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 222


state 188

    (85) while -> WHILE PARENIZ comparaciones PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 223


state 189

    (86) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR . ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ

    ENTERO          shift and go to state 224


state 190

    (92) if -> IF PARENIZ comparaciones PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 225


state 191

    (93) if -> IF PARENIZ IDENTIFICADOR PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 226


state 192

    (96) elseif -> ELSEIF PARENIZ comparaciones PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 227


state 193

    (97) elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 228


state 194

    (87) foreach -> FOREACH PARENIZ IDENTIFICADOR AS . IDENTIFICADOR PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 229


state 195

    (88) switch -> SWITCH PARENIZ valor PARENDER . LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER

    LLAVEIZ         shift and go to state 230


state 196

    (122) array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 231


state 197

    (53) longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 232


state 198

    (70) input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 233


state 199

    (76) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 234


state 200

    (110) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 235


state 201

    (105) stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 236


state 202

    (118) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 237


state 203

    (119) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 238


state 204

    (120) array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 239


state 205

    (121) array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 240


state 206

    (123) array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor . COMA IDENTIFICADOR PARENDER PUNTOCOMA

    COMA            shift and go to state 241


state 207

    (24) indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    PRINT           reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    ECHO            reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    FUNCTION        reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    RETURN          reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    WHILE           reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    FOR             reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    IF              reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    ELSEIF          reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    ELSE            reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    FOREACH         reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    SWITCH          reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    CADENA          reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    ENTERO          reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    RESTA           reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    $end            reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    PARENDER        reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)
    CORCHETEDER     reduce using rule 24 (indexacion -> IDENTIFICADOR CORCHETEIZ valor CORCHETEDER PUNTOCOMA .)


state 208

    (111) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 242


state 209

    (112) queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 243


state 210

    (113) queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 244


state 211

    (114) queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER . PUNTOCOMA
    (106) stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 245


state 212

    (115) queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER . PUNTOCOMA
    (107) stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 246


state 213

    (116) queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER . PUNTOCOMA
    (108) stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 247


state 214

    (117) queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .
    (109) stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for PRINT resolved using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for ECHO resolved using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for NAMEFUNCTION resolved using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for RETURN resolved using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for WHILE resolved using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for FOR resolved using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for IF resolved using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for ELSE resolved using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for FOREACH resolved using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for SWITCH resolved using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for ARRAY_PUSH resolved using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for CADENA resolved using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for ENTERO resolved using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for RESTA resolved using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
  ! reduce/reduce conflict for $end resolved using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    IDENTIFICADOR   reduce using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    COMENTARIO      reduce using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    LLAVEDER        reduce using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    PRINT           reduce using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    ECHO            reduce using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    FUNCTION        reduce using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    NAMEFUNCTION    reduce using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    RETURN          reduce using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    WHILE           reduce using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    FOR             reduce using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    IF              reduce using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    ELSEIF          reduce using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    ELSE            reduce using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    FOREACH         reduce using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    SWITCH          reduce using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    ARRAY_PUSH      reduce using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    CADENA          reduce using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    BOOLEAN         reduce using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    ENTERO          reduce using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    RESTA           reduce using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    FLOTANTE        reduce using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)
    $end            reduce using rule 109 (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .)

  ! IDENTIFICADOR   [ reduce using rule 117 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! COMENTARIO      [ reduce using rule 117 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! LLAVEDER        [ reduce using rule 117 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! PRINT           [ reduce using rule 117 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! ECHO            [ reduce using rule 117 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! FUNCTION        [ reduce using rule 117 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! NAMEFUNCTION    [ reduce using rule 117 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! RETURN          [ reduce using rule 117 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! WHILE           [ reduce using rule 117 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! FOR             [ reduce using rule 117 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! IF              [ reduce using rule 117 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! ELSEIF          [ reduce using rule 117 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! ELSE            [ reduce using rule 117 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! FOREACH         [ reduce using rule 117 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! SWITCH          [ reduce using rule 117 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! ARRAY_PUSH      [ reduce using rule 117 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! CADENA          [ reduce using rule 117 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! BOOLEAN         [ reduce using rule 117 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! ENTERO          [ reduce using rule 117 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! RESTA           [ reduce using rule 117 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! FLOTANTE        [ reduce using rule 117 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]
  ! $end            [ reduce using rule 117 (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER .) ]


state 215

    (103) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 248


state 216

    (104) stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 249


state 217

    (94) elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 250


state 218

    (95) elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 251


state 219

    (67) print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 67 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 67 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 67 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 67 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 67 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 67 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 67 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 67 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 67 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    FOR             reduce using rule 67 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    IF              reduce using rule 67 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 67 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 67 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 67 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 67 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 67 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 67 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 67 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 67 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 67 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 67 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)
    $end            reduce using rule 67 (print -> PRINT PARENIZ valores PARENDER PUNTOCOMA .)


state 220

    (72) funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 252


state 221

    (74) parametro -> IDENTIFICADOR COMA . parametro
    (73) parametro -> . IDENTIFICADOR
    (74) parametro -> . IDENTIFICADOR COMA parametro

    IDENTIFICADOR   shift and go to state 186

    parametro                      shift and go to state 253

state 222

    (75) funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 75 (funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 75 (funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 75 (funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 75 (funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 75 (funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 75 (funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 75 (funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 75 (funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 75 (funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    FOR             reduce using rule 75 (funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    IF              reduce using rule 75 (funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 75 (funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 75 (funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 75 (funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 75 (funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 75 (funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 75 (funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 75 (funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 75 (funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 75 (funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 75 (funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    $end            reduce using rule 75 (funcion -> NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)


state 223

    (85) while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 85 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 85 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 85 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    PRINT           reduce using rule 85 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    ECHO            reduce using rule 85 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 85 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 85 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    RETURN          reduce using rule 85 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    WHILE           reduce using rule 85 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOR             reduce using rule 85 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    IF              reduce using rule 85 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 85 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSE            reduce using rule 85 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 85 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 85 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 85 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    CADENA          reduce using rule 85 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 85 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 85 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    RESTA           reduce using rule 85 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 85 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)
    $end            reduce using rule 85 (while -> WHILE PARENIZ comparaciones PARENDER LLAVEIZ .)


state 224

    (86) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO . PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ

    PUNTOCOMA       shift and go to state 254


state 225

    (92) if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 92 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 92 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 92 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    PRINT           reduce using rule 92 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ECHO            reduce using rule 92 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 92 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 92 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RETURN          reduce using rule 92 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    WHILE           reduce using rule 92 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOR             reduce using rule 92 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    IF              reduce using rule 92 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 92 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSE            reduce using rule 92 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 92 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 92 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 92 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    CADENA          reduce using rule 92 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 92 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 92 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RESTA           reduce using rule 92 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 92 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)
    $end            reduce using rule 92 (if -> IF PARENIZ comparaciones PARENDER LLAVEIZ .)


state 226

    (93) if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 93 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 93 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 93 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    PRINT           reduce using rule 93 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ECHO            reduce using rule 93 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 93 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 93 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RETURN          reduce using rule 93 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    WHILE           reduce using rule 93 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOR             reduce using rule 93 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    IF              reduce using rule 93 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 93 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSE            reduce using rule 93 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 93 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 93 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 93 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    CADENA          reduce using rule 93 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 93 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 93 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RESTA           reduce using rule 93 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 93 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    $end            reduce using rule 93 (if -> IF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)


state 227

    (96) elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 96 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 96 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 96 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    PRINT           reduce using rule 96 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ECHO            reduce using rule 96 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 96 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 96 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RETURN          reduce using rule 96 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    WHILE           reduce using rule 96 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOR             reduce using rule 96 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    IF              reduce using rule 96 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 96 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSE            reduce using rule 96 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 96 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 96 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 96 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    CADENA          reduce using rule 96 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 96 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 96 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RESTA           reduce using rule 96 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 96 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    $end            reduce using rule 96 (elseif -> ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)


state 228

    (97) elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 97 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 97 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 97 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    PRINT           reduce using rule 97 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ECHO            reduce using rule 97 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 97 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 97 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RETURN          reduce using rule 97 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    WHILE           reduce using rule 97 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOR             reduce using rule 97 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    IF              reduce using rule 97 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 97 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSE            reduce using rule 97 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 97 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 97 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 97 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    CADENA          reduce using rule 97 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 97 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 97 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RESTA           reduce using rule 97 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 97 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    $end            reduce using rule 97 (elseif -> ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)


state 229

    (87) foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR . PARENDER LLAVEIZ

    PARENDER        shift and go to state 255


state 230

    (88) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ . casos DEFAULT DOSPUNTOS echo LLAVEDER
    (89) casos -> . caso
    (90) casos -> . caso casos
    (91) caso -> . CASE valor DOSPUNTOS echo BREAK PUNTOCOMA

    CASE            shift and go to state 258

    casos                          shift and go to state 256
    caso                           shift and go to state 257

state 231

    (122) array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 122 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 122 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 122 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 122 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 122 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 122 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 122 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 122 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 122 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    FOR             reduce using rule 122 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    IF              reduce using rule 122 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 122 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 122 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 122 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 122 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 122 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 122 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 122 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 122 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 122 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 122 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    $end            reduce using rule 122 (array -> ARRAY_PUSH PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)


state 232

    (53) longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 259


state 233

    (70) input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 260


state 234

    (76) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 261


state 235

    (110) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 262


state 236

    (105) stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 263


state 237

    (118) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 118 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ PARENDER PUNTOCOMA .)


state 238

    (119) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 264


state 239

    (120) array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 120 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 120 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 120 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    PRINT           reduce using rule 120 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    ECHO            reduce using rule 120 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    FUNCTION        reduce using rule 120 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 120 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    RETURN          reduce using rule 120 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    WHILE           reduce using rule 120 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    FOR             reduce using rule 120 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    IF              reduce using rule 120 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    ELSEIF          reduce using rule 120 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    ELSE            reduce using rule 120 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    FOREACH         reduce using rule 120 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    SWITCH          reduce using rule 120 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 120 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    CADENA          reduce using rule 120 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 120 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    ENTERO          reduce using rule 120 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    RESTA           reduce using rule 120 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 120 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)
    $end            reduce using rule 120 (array -> IDENTIFICADOR ASIGNAR CORCHETEIZ valores CORCHETEDER PUNTOCOMA .)


state 240

    (121) array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 265


state 241

    (123) array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA . IDENTIFICADOR PARENDER PUNTOCOMA

    IDENTIFICADOR   shift and go to state 266


state 242

    (111) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 267


state 243

    (112) queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 112 (queue -> IDENTIFICADOR FLECHASIMPLE COUNT PARENIZ PARENDER PUNTOCOMA .)


state 244

    (113) queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 113 (queue -> IDENTIFICADOR FLECHASIMPLE DEQUEUE PARENIZ PARENDER PUNTOCOMA .)


state 245

    (114) queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .
    (106) stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ECHO resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for NAMEFUNCTION resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RETURN resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOREACH resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for SWITCH resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ARRAY_PUSH resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for CADENA resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RESTA resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for $end resolved using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 106 (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .)

  ! IDENTIFICADOR   [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! COMENTARIO      [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! LLAVEDER        [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! PRINT           [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ECHO            [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FUNCTION        [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! NAMEFUNCTION    [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! RETURN          [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! WHILE           [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOR             [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! IF              [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSEIF          [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSE            [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOREACH         [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! SWITCH          [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ARRAY_PUSH      [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! CADENA          [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! BOOLEAN         [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ENTERO          [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! RESTA           [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FLOTANTE        [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]
  ! $end            [ reduce using rule 114 (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA .) ]


state 246

    (115) queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .
    (107) stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ECHO resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for NAMEFUNCTION resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RETURN resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOREACH resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for SWITCH resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ARRAY_PUSH resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for CADENA resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RESTA resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for $end resolved using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 107 (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .)

  ! IDENTIFICADOR   [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! COMENTARIO      [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! LLAVEDER        [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! PRINT           [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! ECHO            [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! FUNCTION        [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! NAMEFUNCTION    [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! RETURN          [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! WHILE           [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOR             [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! IF              [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSEIF          [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSE            [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOREACH         [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! SWITCH          [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! ARRAY_PUSH      [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! CADENA          [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! BOOLEAN         [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! ENTERO          [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! RESTA           [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! FLOTANTE        [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]
  ! $end            [ reduce using rule 115 (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA .) ]


state 247

    (116) queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .
    (108) stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ECHO resolved using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for NAMEFUNCTION resolved using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RETURN resolved using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ELSE resolved using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FOREACH resolved using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for SWITCH resolved using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ARRAY_PUSH resolved using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for CADENA resolved using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for ENTERO resolved using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for RESTA resolved using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
  ! reduce/reduce conflict for $end resolved using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 108 (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .)

  ! IDENTIFICADOR   [ reduce using rule 116 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! COMENTARIO      [ reduce using rule 116 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! LLAVEDER        [ reduce using rule 116 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! PRINT           [ reduce using rule 116 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ECHO            [ reduce using rule 116 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FUNCTION        [ reduce using rule 116 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! NAMEFUNCTION    [ reduce using rule 116 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! RETURN          [ reduce using rule 116 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! WHILE           [ reduce using rule 116 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOR             [ reduce using rule 116 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! IF              [ reduce using rule 116 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSEIF          [ reduce using rule 116 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ELSE            [ reduce using rule 116 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FOREACH         [ reduce using rule 116 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! SWITCH          [ reduce using rule 116 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ARRAY_PUSH      [ reduce using rule 116 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! CADENA          [ reduce using rule 116 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! BOOLEAN         [ reduce using rule 116 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! ENTERO          [ reduce using rule 116 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! RESTA           [ reduce using rule 116 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! FLOTANTE        [ reduce using rule 116 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]
  ! $end            [ reduce using rule 116 (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA .) ]


state 248

    (103) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 268


state 249

    (104) stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 104 (stack -> IDENTIFICADOR FLECHASIMPLE POP PARENIZ PARENDER PUNTOCOMA .)


state 250

    (94) elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 94 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 94 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 94 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    PRINT           reduce using rule 94 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ECHO            reduce using rule 94 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 94 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 94 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RETURN          reduce using rule 94 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    WHILE           reduce using rule 94 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOR             reduce using rule 94 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    IF              reduce using rule 94 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 94 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ELSE            reduce using rule 94 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 94 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 94 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 94 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    CADENA          reduce using rule 94 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 94 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 94 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    RESTA           reduce using rule 94 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 94 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)
    $end            reduce using rule 94 (elseif -> LLAVEDER ELSEIF PARENIZ comparaciones PARENDER LLAVEIZ .)


state 251

    (95) elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 95 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 95 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 95 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    PRINT           reduce using rule 95 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ECHO            reduce using rule 95 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 95 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 95 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RETURN          reduce using rule 95 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    WHILE           reduce using rule 95 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOR             reduce using rule 95 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    IF              reduce using rule 95 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 95 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSE            reduce using rule 95 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 95 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 95 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 95 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    CADENA          reduce using rule 95 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 95 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 95 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    RESTA           reduce using rule 95 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 95 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)
    $end            reduce using rule 95 (elseif -> LLAVEDER ELSEIF PARENIZ IDENTIFICADOR PARENDER LLAVEIZ .)


state 252

    (72) funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 72 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 72 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 72 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    PRINT           reduce using rule 72 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    ECHO            reduce using rule 72 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 72 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 72 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    RETURN          reduce using rule 72 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    WHILE           reduce using rule 72 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    FOR             reduce using rule 72 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    IF              reduce using rule 72 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 72 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    ELSE            reduce using rule 72 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 72 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 72 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 72 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    CADENA          reduce using rule 72 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 72 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 72 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    RESTA           reduce using rule 72 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 72 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)
    $end            reduce using rule 72 (funcion -> FUNCTION NAMEFUNCTION PARENIZ parametro PARENDER LLAVEIZ .)


state 253

    (74) parametro -> IDENTIFICADOR COMA parametro .

    PARENDER        reduce using rule 74 (parametro -> IDENTIFICADOR COMA parametro .)


state 254

    (86) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA . IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ

    IDENTIFICADOR   shift and go to state 269


state 255

    (87) foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 270


state 256

    (88) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos . DEFAULT DOSPUNTOS echo LLAVEDER

    DEFAULT         shift and go to state 271


state 257

    (89) casos -> caso .
    (90) casos -> caso . casos
    (89) casos -> . caso
    (90) casos -> . caso casos
    (91) caso -> . CASE valor DOSPUNTOS echo BREAK PUNTOCOMA

    DEFAULT         reduce using rule 89 (casos -> caso .)
    CASE            shift and go to state 258

    caso                           shift and go to state 257
    casos                          shift and go to state 272

state 258

    (91) caso -> CASE . valor DOSPUNTOS echo BREAK PUNTOCOMA
    (31) valor -> . NUMERO
    (32) valor -> . CADENA
    (33) valor -> . BOOLEAN
    (34) valor -> . IDENTIFICADOR
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    CADENA          shift and go to state 60
    BOOLEAN         shift and go to state 61
    IDENTIFICADOR   shift and go to state 85
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    valor                          shift and go to state 273
    NUMERO                         shift and go to state 84

state 259

    (53) longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 53 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 53 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 53 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 53 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 53 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 53 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 53 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 53 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 53 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    FOR             reduce using rule 53 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    IF              reduce using rule 53 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 53 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 53 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 53 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 53 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 53 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 53 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 53 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 53 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 53 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 53 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)
    $end            reduce using rule 53 (longitud -> IDENTIFICADOR ASIGNAR STRLEN PARENIZ valor PARENDER PUNTOCOMA .)


state 260

    (70) input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 70 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 70 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 70 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 70 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 70 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 70 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 70 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 70 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 70 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    FOR             reduce using rule 70 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    IF              reduce using rule 70 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 70 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 70 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 70 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 70 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 70 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 70 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 70 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 70 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 70 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 70 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)
    $end            reduce using rule 70 (input -> IDENTIFICADOR ASIGNAR FGETS PARENIZ FLUJOS PARENDER PUNTOCOMA .)


state 261

    (76) funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 76 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 76 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 76 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 76 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 76 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 76 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 76 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 76 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 76 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    FOR             reduce using rule 76 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    IF              reduce using rule 76 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 76 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 76 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 76 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 76 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 76 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 76 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 76 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 76 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 76 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 76 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)
    $end            reduce using rule 76 (funcion -> IDENTIFICADOR ASIGNAR NAMEFUNCTION PARENIZ valores PARENDER PUNTOCOMA .)


state 262

    (110) queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 110 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 110 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 110 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 110 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 110 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 110 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 110 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 110 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 110 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 110 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 110 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 110 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 110 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 110 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 110 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 110 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 110 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 110 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 110 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 110 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 110 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 110 (queue -> IDENTIFICADOR ASIGNAR NEW QUEUE PARENIZ PARENDER PUNTOCOMA .)


state 263

    (105) stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 105 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 105 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 105 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 105 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 105 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 105 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 105 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 105 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 105 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    FOR             reduce using rule 105 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    IF              reduce using rule 105 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 105 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 105 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 105 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 105 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 105 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 105 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 105 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 105 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 105 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 105 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)
    $end            reduce using rule 105 (stack -> IDENTIFICADOR ASIGNAR NEW STACK PARENIZ PARENDER PUNTOCOMA .)


state 264

    (119) array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    FOR             reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    IF              reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)
    $end            reduce using rule 119 (array -> IDENTIFICADOR ASIGNAR ARRAY PARENIZ valores PARENDER PUNTOCOMA .)


state 265

    (121) array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    FOR             reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    IF              reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)
    $end            reduce using rule 121 (array -> IDENTIFICADOR ASIGNAR ARRAY_SHIFT PARENIZ IDENTIFICADOR PARENDER PUNTOCOMA .)


state 266

    (123) array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR . PARENDER PUNTOCOMA

    PARENDER        shift and go to state 274


state 267

    (111) queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    FOR             reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    IF              reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)
    $end            reduce using rule 111 (queue -> IDENTIFICADOR FLECHASIMPLE ENQUEUE PARENIZ valor PARENDER PUNTOCOMA .)


state 268

    (103) stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    FOR             reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    IF              reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)
    $end            reduce using rule 103 (stack -> IDENTIFICADOR FLECHASIMPLE PUSH PARENIZ valor PARENDER PUNTOCOMA .)


state 269

    (86) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR . comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ
    (35) comparadorNum -> . MAYORQUE
    (36) comparadorNum -> . MAYORIGUALQUE
    (37) comparadorNum -> . MENORQUE
    (38) comparadorNum -> . MENORIGUALQUE

    MAYORQUE        shift and go to state 103
    MAYORIGUALQUE   shift and go to state 104
    MENORQUE        shift and go to state 105
    MENORIGUALQUE   shift and go to state 106

    comparadorNum                  shift and go to state 275

state 270

    (87) foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 87 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 87 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 87 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    PRINT           reduce using rule 87 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    ECHO            reduce using rule 87 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 87 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 87 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    RETURN          reduce using rule 87 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    WHILE           reduce using rule 87 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    FOR             reduce using rule 87 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    IF              reduce using rule 87 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 87 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    ELSE            reduce using rule 87 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 87 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 87 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 87 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    CADENA          reduce using rule 87 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 87 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 87 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    RESTA           reduce using rule 87 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 87 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)
    $end            reduce using rule 87 (foreach -> FOREACH PARENIZ IDENTIFICADOR AS IDENTIFICADOR PARENDER LLAVEIZ .)


state 271

    (88) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT . DOSPUNTOS echo LLAVEDER

    DOSPUNTOS       shift and go to state 276


state 272

    (90) casos -> caso casos .

    DEFAULT         reduce using rule 90 (casos -> caso casos .)


state 273

    (91) caso -> CASE valor . DOSPUNTOS echo BREAK PUNTOCOMA

    DOSPUNTOS       shift and go to state 277


state 274

    (123) array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 278


state 275

    (86) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum . ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ

    ENTERO          shift and go to state 279


state 276

    (88) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS . echo LLAVEDER
    (71) echo -> . ECHO valores PUNTOCOMA

    ECHO            shift and go to state 45

    echo                           shift and go to state 280

state 277

    (91) caso -> CASE valor DOSPUNTOS . echo BREAK PUNTOCOMA
    (71) echo -> . ECHO valores PUNTOCOMA

    ECHO            shift and go to state 45

    echo                           shift and go to state 281

state 278

    (123) array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .

    IDENTIFICADOR   reduce using rule 123 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    COMENTARIO      reduce using rule 123 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 123 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    PRINT           reduce using rule 123 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    ECHO            reduce using rule 123 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    FUNCTION        reduce using rule 123 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    NAMEFUNCTION    reduce using rule 123 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    RETURN          reduce using rule 123 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    WHILE           reduce using rule 123 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    FOR             reduce using rule 123 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    IF              reduce using rule 123 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    ELSEIF          reduce using rule 123 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    ELSE            reduce using rule 123 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    FOREACH         reduce using rule 123 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    SWITCH          reduce using rule 123 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    ARRAY_PUSH      reduce using rule 123 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    CADENA          reduce using rule 123 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    BOOLEAN         reduce using rule 123 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    ENTERO          reduce using rule 123 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    RESTA           reduce using rule 123 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    FLOTANTE        reduce using rule 123 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)
    $end            reduce using rule 123 (array -> IDENTIFICADOR ASIGNAR IN_ARRAY PARENIZ valor COMA IDENTIFICADOR PARENDER PUNTOCOMA .)


state 279

    (86) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO . PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ

    PUNTOCOMA       shift and go to state 282


state 280

    (88) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo . LLAVEDER

    LLAVEDER        shift and go to state 283


state 281

    (91) caso -> CASE valor DOSPUNTOS echo . BREAK PUNTOCOMA

    BREAK           shift and go to state 284


state 282

    (86) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA . incrementoDecremento PARENDER LLAVEIZ
    (48) incrementoDecremento -> . variable INCREMENTO
    (49) incrementoDecremento -> . variable DECREMENTO
    (42) variable -> . NUMERO
    (43) variable -> . IDENTIFICADOR
    (28) NUMERO -> . ENTERO
    (29) NUMERO -> . RESTA ENTERO
    (30) NUMERO -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 157
    ENTERO          shift and go to state 51
    RESTA           shift and go to state 64
    FLOTANTE        shift and go to state 62

    incrementoDecremento           shift and go to state 285
    variable                       shift and go to state 286
    NUMERO                         shift and go to state 136

state 283

    (88) switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .

    IDENTIFICADOR   reduce using rule 88 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    COMENTARIO      reduce using rule 88 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    LLAVEDER        reduce using rule 88 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    PRINT           reduce using rule 88 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    ECHO            reduce using rule 88 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    FUNCTION        reduce using rule 88 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    NAMEFUNCTION    reduce using rule 88 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    RETURN          reduce using rule 88 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    WHILE           reduce using rule 88 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    FOR             reduce using rule 88 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    IF              reduce using rule 88 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    ELSEIF          reduce using rule 88 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    ELSE            reduce using rule 88 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    FOREACH         reduce using rule 88 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    SWITCH          reduce using rule 88 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    ARRAY_PUSH      reduce using rule 88 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    CADENA          reduce using rule 88 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    BOOLEAN         reduce using rule 88 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    ENTERO          reduce using rule 88 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    RESTA           reduce using rule 88 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    FLOTANTE        reduce using rule 88 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)
    $end            reduce using rule 88 (switch -> SWITCH PARENIZ valor PARENDER LLAVEIZ casos DEFAULT DOSPUNTOS echo LLAVEDER .)


state 284

    (91) caso -> CASE valor DOSPUNTOS echo BREAK . PUNTOCOMA

    PUNTOCOMA       shift and go to state 287


state 285

    (86) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento . PARENDER LLAVEIZ

    PARENDER        shift and go to state 288


state 286

    (48) incrementoDecremento -> variable . INCREMENTO
    (49) incrementoDecremento -> variable . DECREMENTO

    INCREMENTO      shift and go to state 289
    DECREMENTO      shift and go to state 290


state 287

    (91) caso -> CASE valor DOSPUNTOS echo BREAK PUNTOCOMA .

    CASE            reduce using rule 91 (caso -> CASE valor DOSPUNTOS echo BREAK PUNTOCOMA .)
    DEFAULT         reduce using rule 91 (caso -> CASE valor DOSPUNTOS echo BREAK PUNTOCOMA .)


state 288

    (86) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER . LLAVEIZ

    LLAVEIZ         shift and go to state 291


state 289

    (48) incrementoDecremento -> variable INCREMENTO .

    PARENDER        reduce using rule 48 (incrementoDecremento -> variable INCREMENTO .)


state 290

    (49) incrementoDecremento -> variable DECREMENTO .

    PARENDER        reduce using rule 49 (incrementoDecremento -> variable DECREMENTO .)


state 291

    (86) for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ .

    IDENTIFICADOR   reduce using rule 86 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ .)
    COMENTARIO      reduce using rule 86 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ .)
    LLAVEDER        reduce using rule 86 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ .)
    PRINT           reduce using rule 86 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ .)
    ECHO            reduce using rule 86 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ .)
    FUNCTION        reduce using rule 86 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ .)
    NAMEFUNCTION    reduce using rule 86 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ .)
    RETURN          reduce using rule 86 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ .)
    WHILE           reduce using rule 86 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ .)
    FOR             reduce using rule 86 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ .)
    IF              reduce using rule 86 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ .)
    ELSEIF          reduce using rule 86 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ .)
    ELSE            reduce using rule 86 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ .)
    FOREACH         reduce using rule 86 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ .)
    SWITCH          reduce using rule 86 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ .)
    ARRAY_PUSH      reduce using rule 86 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ .)
    CADENA          reduce using rule 86 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ .)
    BOOLEAN         reduce using rule 86 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ .)
    ENTERO          reduce using rule 86 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ .)
    RESTA           reduce using rule 86 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ .)
    FLOTANTE        reduce using rule 86 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ .)
    $end            reduce using rule 86 (for -> FOR PARENIZ IDENTIFICADOR ASIGNAR ENTERO PUNTOCOMA IDENTIFICADOR comparadorNum ENTERO PUNTOCOMA incrementoDecremento PARENDER LLAVEIZ .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RESTA in state 41 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 43 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 43 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 170 resolved as shift
WARNING: reduce/reduce conflict in state 214 resolved using rule (stack -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER)
WARNING: rejected rule (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER) in state 214
WARNING: reduce/reduce conflict in state 245 resolved using rule (stack -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA)
WARNING: rejected rule (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA) in state 245
WARNING: reduce/reduce conflict in state 246 resolved using rule (stack -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA)
WARNING: rejected rule (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA) in state 246
WARNING: reduce/reduce conflict in state 247 resolved using rule (stack -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA)
WARNING: rejected rule (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA) in state 247
WARNING: Rule (queue -> IDENTIFICADOR FLECHASIMPLE VALID PARENIZ PARENDER) is never reduced
WARNING: Rule (queue -> IDENTIFICADOR FLECHASIMPLE NEXT PARENIZ PARENDER PUNTOCOMA) is never reduced
WARNING: Rule (queue -> IDENTIFICADOR FLECHASIMPLE REWIND PARENIZ PARENDER PUNTOCOMA) is never reduced
WARNING: Rule (queue -> IDENTIFICADOR FLECHASIMPLE CURRENT PARENIZ PARENDER PUNTOCOMA) is never reduced
