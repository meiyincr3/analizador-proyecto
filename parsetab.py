
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ANDEQUAL APOSTROPHE ARRAY ARROW ASSINGMENT ATTACH BREAK CASE CATCH CLASS COLON COMMA COMMENTS CONTAINS CONTINUE CURLYLEFTBRACKET CURLYRIGHTBRACKET CURRENT DECLARE DECREMENT DEFAULT DIE DIVIDE DO DOLLARSIGN DOT DOUBLECOLON ECHO ELSE ELSEIF ENDFOR ENDFOREACH ENDIF EQUALS EXIT EXTENDS FALSE FIXEDARRAY FLOAT FOR FOREACH FUNCTION GOTO GREATERTHAN GREATERTHANEQ HEAP IDENTICAL IDENTIFIER IF INCREMENT INTDIVIDE INTEGER LBRACKET LESSTHAN LESSTHANEQ LPAREN MAXHEAP MINHEAP MINUS MODULE NAMEFUNCTION NEW NOTIDENTICAL OBJECTSTORAGE OR PLUS POP POWERBY PRINT PRIORITYQUEUE PUBLIC PUSH QUEUE RBRACKET RETURN RPAREN SEMICOLON SIMPLEARROW STACK STATIC STRING SWITCH TIMES TRUE TRY WHILE XORsentence : print\n              | assignmentassignment : IDENTIFIER ASSINGMENT value SEMICOLONprint : PRINT LBRACKET values RBRACKET SEMICOLON\n        | PRINT values SEMICOLONprint : PRINT LBRACKET RBRACKETvalues : value\n          | value COMMA valuesvalue : INTEGER\n          | FLOAT\n          | IDENTIFIER'
    
_lr_action_items = {'PRINT':([0,],[4,]),'IDENTIFIER':([0,4,6,12,16,],[5,11,11,11,11,]),'$end':([1,2,3,14,15,20,21,],[0,-1,-2,-6,-5,-3,-4,]),'LBRACKET':([4,],[6,]),'INTEGER':([4,6,12,16,],[9,9,9,9,]),'FLOAT':([4,6,12,16,],[10,10,10,10,]),'ASSINGMENT':([5,],[12,]),'RBRACKET':([6,8,9,10,11,13,19,],[14,-7,-9,-10,-11,18,-8,]),'SEMICOLON':([7,8,9,10,11,17,18,19,],[15,-7,-9,-10,-11,20,21,-8,]),'COMMA':([8,9,10,11,],[16,-9,-10,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentence':([0,],[1,]),'print':([0,],[2,]),'assignment':([0,],[3,]),'values':([4,6,16,],[7,13,19,]),'value':([4,6,12,16,],[8,8,17,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentence","S'",1,None,None,None),
  ('sentence -> print','sentence',1,'p_sentence','parser_1.py',5),
  ('sentence -> assignment','sentence',1,'p_sentence','parser_1.py',6),
  ('assignment -> IDENTIFIER ASSINGMENT value SEMICOLON','assignment',4,'p_assignment','parser_1.py',10),
  ('print -> PRINT LBRACKET values RBRACKET SEMICOLON','print',5,'p_print','parser_1.py',14),
  ('print -> PRINT values SEMICOLON','print',3,'p_print','parser_1.py',15),
  ('print -> PRINT LBRACKET RBRACKET','print',3,'p_print_sinvalor','parser_1.py',18),
  ('values -> value','values',1,'p_values','parser_1.py',22),
  ('values -> value COMMA values','values',3,'p_values','parser_1.py',23),
  ('value -> INTEGER','value',1,'p_value','parser_1.py',27),
  ('value -> FLOAT','value',1,'p_value','parser_1.py',28),
  ('value -> IDENTIFIER','value',1,'p_value','parser_1.py',29),
]
